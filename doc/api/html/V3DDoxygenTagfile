<?xml version='1.0' encoding='ISO-8859-1' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>basic_4dimage.cpp</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>basic__4dimage_8cpp</filename>
    <includes id="v3d__message_8h" name="v3d_message.h" local="yes" imported="no">v3d_message.h</includes>
    <includes id="stackutil_8h" name="stackutil.h" local="yes" imported="no">stackutil.h</includes>
    <includes id="basic__4dimage_8h" name="basic_4dimage.h" local="yes" imported="no">basic_4dimage.h</includes>
    <member kind="typedef">
      <type>unsigned short int</type>
      <name>USHORTINT16</name>
      <anchorfile>basic__4dimage_8cpp.html</anchorfile>
      <anchor>ac66090efe3060fd545afe668a3fad683</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>convert_data_to_8bit</name>
      <anchorfile>basic__4dimage_8cpp.html</anchorfile>
      <anchor>ab700993cb16509338d9aee3f73aad92a</anchor>
      <arglist>(void *&amp;img, V3DLONG *sz, int datatype)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_4dimage.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>basic__4dimage_8h</filename>
    <includes id="v3d__basicdatatype_8h" name="v3d_basicdatatype.h" local="yes" imported="no">v3d_basicdatatype.h</includes>
    <class kind="class">Image4DSimple</class>
    <class kind="class">Image4DProxy</class>
    <class kind="struct">V3D_Image3DBasic</class>
    <member kind="define">
      <type>#define</type>
      <name>Image4DProxy_foreach</name>
      <anchorfile>basic__4dimage_8h.html</anchorfile>
      <anchor>ab01d8c948d6d63ab46cfd48e78732d74</anchor>
      <arglist>(p, x, y, z, c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>convert_data_to_8bit</name>
      <anchorfile>basic__4dimage_8h.html</anchorfile>
      <anchor>ab700993cb16509338d9aee3f73aad92a</anchor>
      <arglist>(void *&amp;img, V3DLONG *sz, int datatype)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_landmark.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>basic__landmark_8h</filename>
    <includes id="color__xyz_8h" name="color_xyz.h" local="yes" imported="no">color_xyz.h</includes>
    <includes id="v3d__basicdatatype_8h" name="v3d_basicdatatype.h" local="yes" imported="no">v3d_basicdatatype.h</includes>
    <class kind="struct">LocationSimple</class>
    <class kind="struct">PtIndexAndParents</class>
    <member kind="define">
      <type>#define</type>
      <name>VAL_INVALID</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>a613b93e6bcd2cc711baa388ab490fe6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PxLocationUsefulness</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>a3572410cb99808b149b3c84f9c3ef5d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxUnknown</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>a3572410cb99808b149b3c84f9c3ef5d9a9d4d0f41ea1f04a91928561c1690f7bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxLocaNotUseful</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>a3572410cb99808b149b3c84f9c3ef5d9a242d8e1e4372a2acb69b7f09dc633426</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxLocaUseful</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>a3572410cb99808b149b3c84f9c3ef5d9a40c7e6aad6d9989daa58fbb88a57be30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxLocaUnsure</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>a3572410cb99808b149b3c84f9c3ef5d9ab9c854ae7cc90b0b93d65d091eba51f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxTemp</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>a3572410cb99808b149b3c84f9c3ef5d9a3749378ac1f6ffc360b7fd9bb1ed949a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PxLocationMarkerShape</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>ac83d855238e86d55cdb5456339768b3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxUnset</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>ac83d855238e86d55cdb5456339768b3eace805393779b2b0214c00b9cea4d0f79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxSphere</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>ac83d855238e86d55cdb5456339768b3ea971cbfa89712aaadccc484107f04d844</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxCube</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>ac83d855238e86d55cdb5456339768b3eabd18e00844a905277740fe8dc597d69c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxCircleX</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>ac83d855238e86d55cdb5456339768b3ea880e188b65bd1324d699857edf3e0689</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxCircleY</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>ac83d855238e86d55cdb5456339768b3eaf0132ace0f566a86627078a6ba4d527c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxCircleZ</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>ac83d855238e86d55cdb5456339768b3eaa0661bdd6ccc24601838c72d7edd41ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxSquareX</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>ac83d855238e86d55cdb5456339768b3ea6460948ee7c1bb9cc73bce676ea6bb0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxSquareY</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>ac83d855238e86d55cdb5456339768b3ea53bbd95e9cc7ab9a7c5091db567f7a3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxSquareZ</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>ac83d855238e86d55cdb5456339768b3ea938f7ca6d590289ee901501215e5f61b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxLineX</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>ac83d855238e86d55cdb5456339768b3ea6d2af2a81fbcc8862648011b09b3ea8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxLineY</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>ac83d855238e86d55cdb5456339768b3ea64db1681f1f7081c106a8c2fbb8f3769</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxLineZ</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>ac83d855238e86d55cdb5456339768b3ead763705f369061a9154a1caa11446016</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxTriangle</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>ac83d855238e86d55cdb5456339768b3ea0c6516b0d6c0247d3f849e8ade76b76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pxDot</name>
      <anchorfile>basic__landmark_8h.html</anchorfile>
      <anchor>ac83d855238e86d55cdb5456339768b3ea60214f5ec503a06825c5475a3a69da2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_memory.cpp</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>basic__memory_8cpp</filename>
    <includes id="basic__memory_8h" name="basic_memory.h" local="yes" imported="no">basic_memory.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>__BASIC_MEMORY_CPP__</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>a235afe60db78b8c8baf314e3a8fdbc64</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>new2dpointer</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>a77ed9e69c33e3841fa2d72c71266ad2d</anchor>
      <arglist>(T **&amp;p, V3DLONG sz0, V3DLONG sz1, const T *p1d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete2dpointer</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>aa04f0d5a40cd9c688c8961e1b110e2bd</anchor>
      <arglist>(T **&amp;p, V3DLONG sz0, V3DLONG sz1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>new3dpointer</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>ad43d62d29e2e5829a0028d82ae4452fb</anchor>
      <arglist>(T ***&amp;p, V3DLONG sz0, V3DLONG sz1, V3DLONG sz2, const T *p1d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete3dpointer</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>a10e9312fc033330b50e2d4cec79405d0</anchor>
      <arglist>(T ***&amp;p, V3DLONG sz0, V3DLONG sz1, V3DLONG sz2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>new4dpointer</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>a96857d4a852fd14c59d7f3185d95d628</anchor>
      <arglist>(T ****&amp;p, V3DLONG sz0, V3DLONG sz1, V3DLONG sz2, V3DLONG sz3, const T *p1d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete4dpointer</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>a9a618ed1cf82c3991d68e2d4e0f840e0</anchor>
      <arglist>(T ****&amp;p, V3DLONG sz0, V3DLONG sz1, V3DLONG sz2, V3DLONG sz3)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>new5dpointer</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>ac6e3e7bce5cfe969daf978e4c894a74e</anchor>
      <arglist>(T ****&amp;p, V3DLONG sz0, V3DLONG sz1, V3DLONG sz2, V3DLONG sz3, V3DLONG sz4, const T *p1d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete5dpointer</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>ae3705bde9ab9ba8898c2f9dbdf7596bf</anchor>
      <arglist>(T ****&amp;p, V3DLONG sz0, V3DLONG sz1, V3DLONG sz2, V3DLONG sz3, V3DLONG sz4)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>a9c1336cee977f407758e6a8e53d36ad2</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const char *p1d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>a43bf1c2b6554ee230acc384e30c8a6c7</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const unsigned char *p1d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>a82dca68892ba4939c6f3912c303af6ec</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const int *p1d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>abd42b584258fcc251574696b69168cf6</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const unsigned int *p1d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>a9de5c52c3cbf4898066f0f9f2d21e0e5</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const short int *p1d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>ab227c585e2beebe545676b1663c30554</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const unsigned short int *p1d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>a4f7c74b40e065e7a35e3c6d440a977a1</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const V3DLONG *p1d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>ae8eb73384263a99ff9e364d847fdc34d</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const unsigned V3DLONG *p1d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>ac8cedead5efeba3114a318f9c366e615</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const float *p1d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8cpp.html</anchorfile>
      <anchor>aaebb409e8a86c359d09e17f101a28eff</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const double *p1d)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_memory.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>basic__memory_8h</filename>
    <includes id="v3d__basicdatatype_8h" name="v3d_basicdatatype.h" local="yes" imported="no">v3d_basicdatatype.h</includes>
    <member kind="function">
      <type>bool</type>
      <name>new2dpointer</name>
      <anchorfile>basic__memory_8h.html</anchorfile>
      <anchor>a77ed9e69c33e3841fa2d72c71266ad2d</anchor>
      <arglist>(T **&amp;p, V3DLONG sz0, V3DLONG sz1, const T *p1d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete2dpointer</name>
      <anchorfile>basic__memory_8h.html</anchorfile>
      <anchor>aa04f0d5a40cd9c688c8961e1b110e2bd</anchor>
      <arglist>(T **&amp;p, V3DLONG sz0, V3DLONG sz1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>new3dpointer</name>
      <anchorfile>basic__memory_8h.html</anchorfile>
      <anchor>ad43d62d29e2e5829a0028d82ae4452fb</anchor>
      <arglist>(T ***&amp;p, V3DLONG sz0, V3DLONG sz1, V3DLONG sz2, const T *p1d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete3dpointer</name>
      <anchorfile>basic__memory_8h.html</anchorfile>
      <anchor>a10e9312fc033330b50e2d4cec79405d0</anchor>
      <arglist>(T ***&amp;p, V3DLONG sz0, V3DLONG sz1, V3DLONG sz2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>new4dpointer</name>
      <anchorfile>basic__memory_8h.html</anchorfile>
      <anchor>a96857d4a852fd14c59d7f3185d95d628</anchor>
      <arglist>(T ****&amp;p, V3DLONG sz0, V3DLONG sz1, V3DLONG sz2, V3DLONG sz3, const T *p1d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete4dpointer</name>
      <anchorfile>basic__memory_8h.html</anchorfile>
      <anchor>a9a618ed1cf82c3991d68e2d4e0f840e0</anchor>
      <arglist>(T ****&amp;p, V3DLONG sz0, V3DLONG sz1, V3DLONG sz2, V3DLONG sz3)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>new5dpointer</name>
      <anchorfile>basic__memory_8h.html</anchorfile>
      <anchor>ac6e3e7bce5cfe969daf978e4c894a74e</anchor>
      <arglist>(T ****&amp;p, V3DLONG sz0, V3DLONG sz1, V3DLONG sz2, V3DLONG sz3, V3DLONG sz4, const T *p1d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete5dpointer</name>
      <anchorfile>basic__memory_8h.html</anchorfile>
      <anchor>ae3705bde9ab9ba8898c2f9dbdf7596bf</anchor>
      <arglist>(T ****&amp;p, V3DLONG sz0, V3DLONG sz1, V3DLONG sz2, V3DLONG sz3, V3DLONG sz4)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8h.html</anchorfile>
      <anchor>a9c1336cee977f407758e6a8e53d36ad2</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const char *p1d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8h.html</anchorfile>
      <anchor>a43bf1c2b6554ee230acc384e30c8a6c7</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const unsigned char *p1d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8h.html</anchorfile>
      <anchor>a82dca68892ba4939c6f3912c303af6ec</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const int *p1d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8h.html</anchorfile>
      <anchor>abd42b584258fcc251574696b69168cf6</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const unsigned int *p1d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8h.html</anchorfile>
      <anchor>a9de5c52c3cbf4898066f0f9f2d21e0e5</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const short int *p1d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8h.html</anchorfile>
      <anchor>ab227c585e2beebe545676b1663c30554</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const unsigned short int *p1d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8h.html</anchorfile>
      <anchor>a4f7c74b40e065e7a35e3c6d440a977a1</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const V3DLONG *p1d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8h.html</anchorfile>
      <anchor>ae8eb73384263a99ff9e364d847fdc34d</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const unsigned V3DLONG *p1d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8h.html</anchorfile>
      <anchor>ac8cedead5efeba3114a318f9c366e615</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const float *p1d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy1dMem</name>
      <anchorfile>basic__memory_8h.html</anchorfile>
      <anchor>aaebb409e8a86c359d09e17f101a28eff</anchor>
      <arglist>(T *&amp;p, V3DLONG len, const double *p1d)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_surf_objs.cpp</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>basic__surf__objs_8cpp</filename>
    <includes id="basic__surf__objs_8h" name="basic_surf_objs.h" local="yes" imported="no">basic_surf_objs.h</includes>
    <includes id="v3d__message_8h" name="v3d_message.h" local="yes" imported="no">v3d_message.h</includes>
    <member kind="function">
      <type>QList&lt; CellAPO &gt;</type>
      <name>readAPO_file</name>
      <anchorfile>basic__surf__objs_8cpp.html</anchorfile>
      <anchor>ac7be92454eb414b01771f6f9377a725e</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeAPO_file</name>
      <anchorfile>basic__surf__objs_8cpp.html</anchorfile>
      <anchor>a34f8ba61d230b06f8750931bc39fabd7</anchor>
      <arglist>(const QString &amp;filename, const QList&lt; CellAPO &gt; &amp;listCell)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; ImageMarker &gt;</type>
      <name>readMarker_file</name>
      <anchorfile>basic__surf__objs_8cpp.html</anchorfile>
      <anchor>a108be92ceff62548bbe38f117b8f7b1c</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wirteMarker_file</name>
      <anchorfile>basic__surf__objs_8cpp.html</anchorfile>
      <anchor>a59b0f956a9263a0f23d6dfaea2dfce02</anchor>
      <arglist>(const QString &amp;filename, const QList&lt; ImageMarker &gt; &amp;listMarker)</arglist>
    </member>
    <member kind="function">
      <type>NeuronTree</type>
      <name>readSWC_file</name>
      <anchorfile>basic__surf__objs_8cpp.html</anchorfile>
      <anchor>a85a15e2f0a5a16403c0d340cef9914c9</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeSWC_file</name>
      <anchorfile>basic__surf__objs_8cpp.html</anchorfile>
      <anchor>aba1c4940577ab593f1fe50c9e615790d</anchor>
      <arglist>(const QString &amp;filename, const NeuronTree &amp;nt)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>importKeywordString2FileType</name>
      <anchorfile>basic__surf__objs_8cpp.html</anchorfile>
      <anchor>ab85ae44d014a694182d8944c5537cbdf</anchor>
      <arglist>(QString ss, QString vv, QString basedir, P_ObjectFileType &amp;cc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadAnoFile</name>
      <anchorfile>basic__surf__objs_8cpp.html</anchorfile>
      <anchor>a91d3bfe4d220399f575dd71678847c59</anchor>
      <arglist>(QString openFileNameLabel, P_ObjectFileType &amp;cc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveAnoFile</name>
      <anchorfile>basic__surf__objs_8cpp.html</anchorfile>
      <anchor>a8803a85f65588717e1559378feb0631c</anchor>
      <arglist>(QString openFileNameLabel, const P_ObjectFileType &amp;cc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveAnoFile</name>
      <anchorfile>basic__surf__objs_8cpp.html</anchorfile>
      <anchor>ac2ae0a056ce34f8fd1bafc6dc216110f</anchor>
      <arglist>(QString openFileNameLabel, const P_ObjectFileType &amp;cc, const QStringList &amp;commentStrList)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_surf_objs.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>basic__surf__objs_8h</filename>
    <includes id="v3d__basicdatatype_8h" name="v3d_basicdatatype.h" local="yes" imported="no">v3d_basicdatatype.h</includes>
    <includes id="color__xyz_8h" name="color_xyz.h" local="yes" imported="no">color_xyz.h</includes>
    <includes id="v3d__message_8h" name="v3d_message.h" local="yes" imported="no">v3d_message.h</includes>
    <class kind="struct">P_ObjectFileType</class>
    <class kind="struct">BasicSurfObj</class>
    <class kind="struct">ImageMarker</class>
    <class kind="struct">CellAPO</class>
    <class kind="struct">NeuronSWC</class>
    <class kind="struct">LabelSurf</class>
    <class kind="struct">NeuronTree</class>
    <member kind="function">
      <type>bool</type>
      <name>importKeywordString2FileType</name>
      <anchorfile>basic__surf__objs_8h.html</anchorfile>
      <anchor>ab85ae44d014a694182d8944c5537cbdf</anchor>
      <arglist>(QString ss, QString vv, QString basedir, P_ObjectFileType &amp;cc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadAnoFile</name>
      <anchorfile>basic__surf__objs_8h.html</anchorfile>
      <anchor>a91d3bfe4d220399f575dd71678847c59</anchor>
      <arglist>(QString openFileNameLabel, P_ObjectFileType &amp;cc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveAnoFile</name>
      <anchorfile>basic__surf__objs_8h.html</anchorfile>
      <anchor>ac2ae0a056ce34f8fd1bafc6dc216110f</anchor>
      <arglist>(QString openFileNameLabel, const P_ObjectFileType &amp;cc, const QStringList &amp;commentStrList)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveAnoFile</name>
      <anchorfile>basic__surf__objs_8h.html</anchorfile>
      <anchor>a8803a85f65588717e1559378feb0631c</anchor>
      <arglist>(QString openFileNameLabel, const P_ObjectFileType &amp;cc)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; ImageMarker &gt;</type>
      <name>readMarker_file</name>
      <anchorfile>basic__surf__objs_8h.html</anchorfile>
      <anchor>a108be92ceff62548bbe38f117b8f7b1c</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wirteMarker_file</name>
      <anchorfile>basic__surf__objs_8h.html</anchorfile>
      <anchor>a59b0f956a9263a0f23d6dfaea2dfce02</anchor>
      <arglist>(const QString &amp;filename, const QList&lt; ImageMarker &gt; &amp;listMarker)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; CellAPO &gt;</type>
      <name>readAPO_file</name>
      <anchorfile>basic__surf__objs_8h.html</anchorfile>
      <anchor>ac7be92454eb414b01771f6f9377a725e</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeAPO_file</name>
      <anchorfile>basic__surf__objs_8h.html</anchorfile>
      <anchor>a34f8ba61d230b06f8750931bc39fabd7</anchor>
      <arglist>(const QString &amp;filename, const QList&lt; CellAPO &gt; &amp;listCell)</arglist>
    </member>
    <member kind="function">
      <type>NeuronTree</type>
      <name>readSWC_file</name>
      <anchorfile>basic__surf__objs_8h.html</anchorfile>
      <anchor>a85a15e2f0a5a16403c0d340cef9914c9</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeSWC_file</name>
      <anchorfile>basic__surf__objs_8h.html</anchorfile>
      <anchor>aba1c4940577ab593f1fe50c9e615790d</anchor>
      <arglist>(const QString &amp;filename, const NeuronTree &amp;nt)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>basic__surf__objs_8h.html</anchorfile>
      <anchor>aecf50f08b00fd11bace1a24306d1ef9d</anchor>
      <arglist>(ImageMarker &amp;a, ImageMarker &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>basic__surf__objs_8h.html</anchorfile>
      <anchor>a8a5ef4dd0a565fe5b822df1f1055a8d8</anchor>
      <arglist>(CellAPO &amp;a, CellAPO &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>basic__surf__objs_8h.html</anchorfile>
      <anchor>a5b758cc68f713b35ced8821989626c16</anchor>
      <arglist>(NeuronSWC &amp;a, NeuronSWC &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>basic__surf__objs_8h.html</anchorfile>
      <anchor>afc0506d611b22ae3723918d8af3fc507</anchor>
      <arglist>(LabelSurf &amp;a, LabelSurf &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>basic__surf__objs_8h.html</anchorfile>
      <anchor>a964ecdd85e405a0bedeae86fdd5039cb</anchor>
      <arglist>(LabelSurf &amp;a, LabelSurf &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>basic__surf__objs_8h.html</anchorfile>
      <anchor>a76b2c192f109512d4c9a7c8f5867c781</anchor>
      <arglist>(LabelSurf &amp;a, LabelSurf &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>basic__surf__objs_8h.html</anchorfile>
      <anchor>a2eb5d00548fe82f41a46e67e41d785ec</anchor>
      <arglist>(NeuronTree &amp;a, NeuronTree &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_thread.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>basic__thread_8h</filename>
    <includes id="basic__triview_8h" name="basic_triview.h" local="yes" imported="no">basic_triview.h</includes>
    <class kind="class">Transaction</class>
    <class kind="class">UpdateTVTransaction</class>
    <class kind="class">TransactionThread</class>
    <member kind="variable">
      <type>Transaction *const</type>
      <name>EndTransaction</name>
      <anchorfile>basic__thread_8h.html</anchorfile>
      <anchor>a34fc64fb56b3c879917add4dd870d26e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basic_triview.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>basic__triview_8h</filename>
    <includes id="v3d__basicdatatype_8h" name="v3d_basicdatatype.h" local="yes" imported="no">v3d_basicdatatype.h</includes>
    <class kind="class">TriviewControl</class>
  </compound>
  <compound kind="file">
    <name>basic_view3d.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>basic__view3d_8h</filename>
    <class kind="class">View3DControl</class>
  </compound>
  <compound kind="file">
    <name>c_array_struct.hpp</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>c__array__struct_8hpp</filename>
    <class kind="class">c_array</class>
  </compound>
  <compound kind="file">
    <name>color_xyz.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>color__xyz_8h</filename>
    <includes id="c__array__struct_8hpp" name="c_array_struct.hpp" local="yes" imported="no">c_array_struct.hpp</includes>
    <class kind="struct">RGB8</class>
    <class kind="struct">RGBA8</class>
    <class kind="struct">BGR8</class>
    <class kind="struct">BGRA8</class>
    <class kind="struct">ABGR8</class>
    <class kind="struct">RGB16i</class>
    <class kind="struct">RGBA16i</class>
    <class kind="struct">RGB32i</class>
    <class kind="struct">RGBA32i</class>
    <class kind="struct">RGB32f</class>
    <class kind="struct">RGBA32f</class>
    <class kind="struct">XYZ</class>
    <class kind="struct">XYZW</class>
    <class kind="struct">BoundingBox</class>
    <member kind="define">
      <type>#define</type>
      <name>BIG_FLOAT</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a51d651d1fef1a57e9e983c8210a35abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ABS</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>ae2f08dc603ae93c402abd918ba4e23e1</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a3acffbd305ee72dcd4593c0d8af64a4f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>afa99ec4acc4ecb2dc3c2d05da15d0e3f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ABSMIN</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a9ef8413e4606e63c8d335eab467d4f07</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ABSMAX</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a4e913922bd485683f115b992998efffa</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLAMP</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a8fa5e6968bb39c7ec03c486af1e7b335</anchor>
      <arglist>(a, b, x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BETWEEN</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>aaf1f2045bea691e38cdf89c16323c1b6</anchor>
      <arglist>(a, b, x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BETWEENEQ</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>ac6202670404830660a077d8c941f2974</anchor>
      <arglist>(a, b, x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IROUND</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a0d9e10b859db75f6f11e916b5925e864</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NULL_BoundingBox</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>ad2c3c308d1b68219ace04a7d03f3484a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_BoundingBox</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>abc821bdb35df3a474c61015850206945</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>power_of_two_ceil</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>ae2dd1fe6cdf30ee1658d9d58fd28ecb6</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>power_of_two_floor</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a1e2bd39901587b530fb3821223f7d384</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>RGB8</type>
      <name>random_rgb8</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a40b93488bfb1633c56831048ccb31422</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RGBA8</type>
      <name>random_rgba8</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a0cb776301ccea3a607675130f29419eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RGBA8</type>
      <name>random_rgba8</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a61b32529682daed1701a19b32b6ef407</anchor>
      <arglist>(unsigned char a)</arglist>
    </member>
    <member kind="function">
      <type>RGBA8</type>
      <name>rgba8_from</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>ae51e80a9227edee8d6a936ff5f1c0e6c</anchor>
      <arglist>(ABGR8 d)</arglist>
    </member>
    <member kind="function">
      <type>RGBA8</type>
      <name>rgba8_from</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>ae3e245c8aa896734fcb17f396467e9bc</anchor>
      <arglist>(BGRA8 d)</arglist>
    </member>
    <member kind="function">
      <type>ABGR8</type>
      <name>abgr8_from</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a0c6d17beec5139620d5ae597e67e2830</anchor>
      <arglist>(RGBA8 c)</arglist>
    </member>
    <member kind="function">
      <type>BGRA8</type>
      <name>bgra8_from</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a353776f0ef2e0f81267bc45ed3654380</anchor>
      <arglist>(RGBA8 c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>aaa10f046bc7595a39d5d725208043d8b</anchor>
      <arglist>(const BoundingBox &amp;A, const BoundingBox &amp;B)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a045cc7040f69debe8238a07ddc526595</anchor>
      <arglist>(const XYZW &amp;a, const XYZW &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>XYZW</type>
      <name>operator+</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>abb9e8ad965f5824d2f21722ed8c99b84</anchor>
      <arglist>(const XYZW &amp;a, const XYZW &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>XYZW</type>
      <name>operator-</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>acc1c16a5f5cf81eafb4e00020705b760</anchor>
      <arglist>(const XYZW &amp;a, const XYZW &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>XYZW</type>
      <name>operator*</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a8af23e12ce8ae1694c746cf65bd06e89</anchor>
      <arglist>(const XYZW &amp;a, const XYZW &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>XYZW</type>
      <name>operator/</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a598f9cddc79cb92f8785bf0d70fc0951</anchor>
      <arglist>(const XYZW &amp;a, const XYZW &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a2bd6c8758d1af80b9e63247e63c4a5d8</anchor>
      <arglist>(const XYZ &amp;a, const XYZ &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>XYZ</type>
      <name>operator+</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a597779eedceeed1abb53628d6c3b03d3</anchor>
      <arglist>(const XYZ &amp;a, const XYZ &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>XYZ</type>
      <name>operator-</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a81dd3a090dc29fef00d98a1fca33bca3</anchor>
      <arglist>(const XYZ &amp;a, const XYZ &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>XYZ</type>
      <name>operator*</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a0ca80ea19e9206d8a9d42375ee5972ef</anchor>
      <arglist>(const XYZ &amp;a, const XYZ &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>XYZ</type>
      <name>operator/</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a2a58d88640d947c06d3197513ad79726</anchor>
      <arglist>(const XYZ &amp;a, const XYZ &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dot</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a67cfa4a15ccfee277aff6d164150b3d8</anchor>
      <arglist>(const XYZ &amp;a, const XYZ &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>XYZ</type>
      <name>cross</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a9e3393399314bbcba3329389ed26c1e8</anchor>
      <arglist>(const XYZ &amp;a, const XYZ &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>norm</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>aa518a1378a3c316c3cd4b1f8bdd0c891</anchor>
      <arglist>(const XYZ &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dist_L2</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a6c67f7cdd557826094c66da9daa19c37</anchor>
      <arglist>(const XYZ &amp;a, const XYZ &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>XYZ &amp;</type>
      <name>normalize</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>ab1744ff69910b205f8ba1c2cb0c595bc</anchor>
      <arglist>(XYZ &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>min</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>aced45bc94b88a3e0150c3e293c32c672</anchor>
      <arglist>(const XYZ &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>max</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>a5ceafe854fa2696aa8e6d4e45f5465be</anchor>
      <arglist>(const XYZ &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hanchuan_colortable_size</name>
      <anchorfile>color__xyz_8h.html</anchorfile>
      <anchor>ab1667fe8f2133344203664a4dde7e171</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>imageio_mylib.cpp</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>imageio__mylib_8cpp</filename>
    <includes id="v3d__basicdatatype_8h" name="v3d_basicdatatype.h" local="yes" imported="no">v3d_basicdatatype.h</includes>
    <includes id="imageio__mylib_8h" name="imageio_mylib.h" local="yes" imported="no">imageio_mylib.h</includes>
    <member kind="function">
      <type>void</type>
      <name>freeMylibBundle</name>
      <anchorfile>imageio__mylib_8cpp.html</anchorfile>
      <anchor>a209126d9954a43577b007aa7db0e8911</anchor>
      <arglist>(Layer_Bundle *indata)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadTif2StackMylib</name>
      <anchorfile>imageio__mylib_8cpp.html</anchorfile>
      <anchor>a7199fead7615773a4c4c7bbd21ae6257</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, int &amp;nbits)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadTif2StackMylib</name>
      <anchorfile>imageio__mylib_8cpp.html</anchorfile>
      <anchor>a8adeb46be24a9d3a22eeea21a7fe3533</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, int &amp;nbits, int chan_id_to_load)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveStack2TifMylib</name>
      <anchorfile>imageio__mylib_8cpp.html</anchorfile>
      <anchor>a0f7cb753e29a346ed781850bddef0b6d</anchor>
      <arglist>(const char *filename, const unsigned char *img, const V3DLONG *sz, int datatype)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>imageio_mylib.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>imageio__mylib_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>loadTif2StackMylib</name>
      <anchorfile>imageio__mylib_8h.html</anchorfile>
      <anchor>a7199fead7615773a4c4c7bbd21ae6257</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, int &amp;nbits)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadTif2StackMylib</name>
      <anchorfile>imageio__mylib_8h.html</anchorfile>
      <anchor>a8adeb46be24a9d3a22eeea21a7fe3533</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, int &amp;nbits, int chan_id_to_load)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveStack2TifMylib</name>
      <anchorfile>imageio__mylib_8h.html</anchorfile>
      <anchor>a0f7cb753e29a346ed781850bddef0b6d</anchor>
      <arglist>(const char *filename, const unsigned char *img, const V3DLONG *sz, int datatype)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>img_definition.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>img__definition_8h</filename>
    <includes id="basic__memory_8cpp" name="basic_memory.cpp" local="yes" imported="no">basic_memory.cpp</includes>
    <class kind="class">Size2D</class>
    <class kind="class">Size3D</class>
    <class kind="class">Size4D</class>
    <class kind="class">Size5D</class>
    <class kind="class">Vector1DSimple</class>
    <class kind="class">Image2DSimple</class>
    <class kind="class">Vol3DSimple</class>
    <member kind="function">
      <type>bool</type>
      <name>isSameSize</name>
      <anchorfile>img__definition_8h.html</anchorfile>
      <anchor>ad772920e5011ca1332211fbe05ba0ebe</anchor>
      <arglist>(Image2DSimple&lt; T1 &gt; *va, Image2DSimple&lt; T2 &gt; *vb)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameSize</name>
      <anchorfile>img__definition_8h.html</anchorfile>
      <anchor>a139d83447a88552e06b3a63dd778dc54</anchor>
      <arglist>(Vol3DSimple&lt; T1 &gt; *va, Vol3DSimple&lt; T2 &gt; *vb)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mg_image_lib.cpp</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>mg__image__lib_8cpp</filename>
    <includes id="mg__utilities_8h" name="mg_utilities.h" local="yes" imported="no">mg_utilities.h</includes>
    <includes id="mg__image__lib_8h" name="mg_image_lib.h" local="yes" imported="no">mg_image_lib.h</includes>
    <class kind="struct">__Image</class>
    <class kind="struct">__Stack</class>
    <member kind="typedef">
      <type>struct __Image</type>
      <name>_Image</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>ac4654f1f982f1dcc927539b1c441a929</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __Stack</type>
      <name>_Stack</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>ac290eca22b7273c43eca7896eb49010d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Stack_Plane *</type>
      <name>Select_Plane</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a5e6e8dc1c0a86b2de1e5201ad548e856</anchor>
      <arglist>(Stack *a_stack, int plane)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_image</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a200768de1ecd1a1c703c3b0672ecfd6c</anchor>
      <arglist>(Image *image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Free_Image</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a7f6e96dd8f6649161ee34e841e24891a</anchor>
      <arglist>(Image *image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Kill_Image</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a0cb8ace6cf0e8ddd8028b7ce7a5a49a4</anchor>
      <arglist>(Image *image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_image</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a92860098255ee592d22652616cebe056</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Image_Usage</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a3dd8ccb8bbc838f6a034247b16e81d6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>Copy_Image</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a930b297ea66cbc08d02919dd82d56612</anchor>
      <arglist>(Image *image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Pack_Image</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a87b4c6ab888993bcffb578bdbec71bb4</anchor>
      <arglist>(Image *image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset_Image</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a3ac15f63e0b69c810465a7b8c3f0db01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_stack</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a0dbbc0163854f21b7c9970add56fb4ea</anchor>
      <arglist>(Stack *stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Free_Stack</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a7836dbf8238f020a6274af65fbf3f071</anchor>
      <arglist>(Stack *stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Kill_Stack</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a81402a044c52c35eeceac1a73d07e91b</anchor>
      <arglist>(Stack *stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_stack</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a8e53b22410ac69a094ad93bc00eb4a06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Stack_Usage</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>ab7c21f7be34ff4ba42b2c9461feb8d80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Stack *</type>
      <name>Copy_Stack</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>ab7d626ff94c09bdab53db4dace026df9</anchor>
      <arglist>(Stack *stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Pack_Stack</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>ae5771fb389c8f155b512f518e1762f5b</anchor>
      <arglist>(Stack *stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset_Stack</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>aaece5d89a0dca735b1259df9c99988c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TIFF *</type>
      <name>Open_Tiff</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>ad029ae7747dd64ec921f3f76f6270956</anchor>
      <arglist>(char *file_name, char *mode)</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>Read_Tiff</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>aef5a55f45157b19ea3a33575c834e0d1</anchor>
      <arglist>(TIFF *tif, int *lastone)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Write_Tiff</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a2f90fead964762878fd199e2ca52329d</anchor>
      <arglist>(TIFF *tif, Image *a_image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Close_Tiff</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a1dfc1b0722abb1773dcec1f1e1f9fb1f</anchor>
      <arglist>(TIFF *tif)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Parse_Stack_Name</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a448610de5fed33f90c6020e316a7c9eb</anchor>
      <arglist>(char *file_name, char **prefix, int *num_width, int *first_num)</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>Read_Image</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>af60761715299b2652acb2bcc6bdc03b0</anchor>
      <arglist>(char *file_name)</arglist>
    </member>
    <member kind="function">
      <type>Stack *</type>
      <name>Read_Stack</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a987cce9a4c318d1cdf23999075642adb</anchor>
      <arglist>(char *file_name)</arglist>
    </member>
    <member kind="function">
      <type>Stack *</type>
      <name>Read_LSM_Stack</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a919968c5d3e3ac4e053b07cfd7c23480</anchor>
      <arglist>(char *file_name)</arglist>
    </member>
    <member kind="function">
      <type>Stack *</type>
      <name>Read_Stack_Planes</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a17e66fafc15fcb6aff68b170100bc011</anchor>
      <arglist>(char *prefix, int num_width, int first_num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Write_Image</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>af493ede9f3d5c762a8bb71f270abd7ec</anchor>
      <arglist>(char *file_name, Image *a_image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Write_Stack</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>adc9e26b6a71e92a8dd8ef83ee6b0c260</anchor>
      <arglist>(char *file_name, Stack *a_stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Write_Stack_Planes</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a0d4ec52f19e1513369ee06e0b4f07561</anchor>
      <arglist>(char *prefix, int num_width, int first_num, Stack *a_stack)</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>Make_Image</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a74658cd3697cfda7b475f51a46adb7ca</anchor>
      <arglist>(int kind, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>Stack *</type>
      <name>Make_Stack</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>aa1658e52b31dc006f3176cd3a3b2dcea</anchor>
      <arglist>(int kind, int width, int height, int depth)</arglist>
    </member>
    <member kind="function">
      <type>Pixel_Range *</type>
      <name>Image_Range</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a99903c77f76288fc06346eab08dad317</anchor>
      <arglist>(Image *image, int channel)</arglist>
    </member>
    <member kind="function">
      <type>Pixel_Range *</type>
      <name>Stack_Range</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a119f9239ec25e397b8cc176afb24fb8f</anchor>
      <arglist>(Stack *stack, int channel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Scale_Image</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>af5e0b09ecd5556a5d49c9cbb85e3c8a4</anchor>
      <arglist>(Image *image, int channel, double factor, double offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Scale_Stack</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a40f9097ca82e17ba8dae8b2bd2296887</anchor>
      <arglist>(Stack *stack, int channel, double factor, double offset)</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>Translate_Image</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a0e0249ab8e454775a1a64afa88e36652</anchor>
      <arglist>(Image *image, int kind, int in_place)</arglist>
    </member>
    <member kind="function">
      <type>Stack *</type>
      <name>Translate_Stack</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a124515402d0e14550d9f714c1a23d1b0</anchor>
      <arglist>(Stack *stack, int kind, int in_place)</arglist>
    </member>
    <member kind="variable">
      <type>static int</type>
      <name>Image_Inuse</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>a8cde8b14bd1313aaacff0b05fee2bd38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>static int</type>
      <name>Stack_Inuse</name>
      <anchorfile>mg__image__lib_8cpp.html</anchorfile>
      <anchor>afe6e01cc056cf2de6e455e1c29683d8b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mg_image_lib.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>mg__image__lib_8h</filename>
    <class kind="struct">Image</class>
    <class kind="struct">Pixel_Range</class>
    <class kind="struct">Stack</class>
    <member kind="define">
      <type>#define</type>
      <name>GREY</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>adce122f566c88a1eceeb79a635afa964</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GREY16</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>ad0b723eba34f470b040fb57309f1bc14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLOR</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a4b5014034c9aac136ab8c82c2d16dc82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GREY_CHANNEL</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a1fd36be3e58104dc587ca5c4a4fe3560</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RED_CHANNEL</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>aa046b5ef53d48e3e4f45d9e874b0a5af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GREEN_CHANNEL</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a5d7dfb4c6f363f64fb5244306be56384</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLUE_CHANNEL</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a5fa37f328031f01a4de43f9aaf8bf758</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMAGE_PIXEL_8</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a9e9408c12cb9317e48e11550e375629e</anchor>
      <arglist>(img, x, y, c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMAGE_PIXEL_16</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>afed1fa2c9b513265eaa286c6c4b21a28</anchor>
      <arglist>(img, x, y, c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STACK_PIXEL_8</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>acff974ad637dc433866346f4cd2de4a0</anchor>
      <arglist>(img, x, y, z, c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STACK_PIXEL_16</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>acebac630484551ca858f3e17919a6e90</anchor>
      <arglist>(img, x, y, z, c)</arglist>
    </member>
    <member kind="typedef">
      <type>Image</type>
      <name>Stack_Plane</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a159b6c4b98521fac05589498e4d52177</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>TIFF *</type>
      <name>Open_Tiff</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>ad029ae7747dd64ec921f3f76f6270956</anchor>
      <arglist>(char *file_name, char *mode)</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>Read_Tiff</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>aab2b8870d76959737847b7b232f69331</anchor>
      <arglist>(TIFF *tif, int *last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Write_Tiff</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a2f90fead964762878fd199e2ca52329d</anchor>
      <arglist>(TIFF *tif, Image *a_image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Close_Tiff</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a1dfc1b0722abb1773dcec1f1e1f9fb1f</anchor>
      <arglist>(TIFF *tif)</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>Read_Image</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>af60761715299b2652acb2bcc6bdc03b0</anchor>
      <arglist>(char *file_name)</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>Make_Image</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a74658cd3697cfda7b475f51a46adb7ca</anchor>
      <arglist>(int kind, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>Translate_Image</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a0e0249ab8e454775a1a64afa88e36652</anchor>
      <arglist>(Image *image, int kind, int in_place)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Write_Image</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>af493ede9f3d5c762a8bb71f270abd7ec</anchor>
      <arglist>(char *file_name, Image *a_image)</arglist>
    </member>
    <member kind="function">
      <type>Pixel_Range *</type>
      <name>Image_Range</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a99903c77f76288fc06346eab08dad317</anchor>
      <arglist>(Image *image, int channel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Scale_Image</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>af5e0b09ecd5556a5d49c9cbb85e3c8a4</anchor>
      <arglist>(Image *image, int channel, double factor, double offset)</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>Copy_Image</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a930b297ea66cbc08d02919dd82d56612</anchor>
      <arglist>(Image *image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Pack_Image</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a87b4c6ab888993bcffb578bdbec71bb4</anchor>
      <arglist>(Image *image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Free_Image</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a7f6e96dd8f6649161ee34e841e24891a</anchor>
      <arglist>(Image *image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Kill_Image</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a0cb8ace6cf0e8ddd8028b7ce7a5a49a4</anchor>
      <arglist>(Image *image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset_Image</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a3ac15f63e0b69c810465a7b8c3f0db01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Image_Usage</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a3dd8ccb8bbc838f6a034247b16e81d6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Stack *</type>
      <name>Read_Stack</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a987cce9a4c318d1cdf23999075642adb</anchor>
      <arglist>(char *file_name)</arglist>
    </member>
    <member kind="function">
      <type>Stack *</type>
      <name>Make_Stack</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>aa1658e52b31dc006f3176cd3a3b2dcea</anchor>
      <arglist>(int kind, int width, int height, int depth)</arglist>
    </member>
    <member kind="function">
      <type>Stack *</type>
      <name>Translate_Stack</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a124515402d0e14550d9f714c1a23d1b0</anchor>
      <arglist>(Stack *stack, int kind, int in_place)</arglist>
    </member>
    <member kind="function">
      <type>Stack *</type>
      <name>Read_LSM_Stack</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a919968c5d3e3ac4e053b07cfd7c23480</anchor>
      <arglist>(char *file_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Write_Stack</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>adc9e26b6a71e92a8dd8ef83ee6b0c260</anchor>
      <arglist>(char *file_name, Stack *a_stack)</arglist>
    </member>
    <member kind="function">
      <type>Pixel_Range *</type>
      <name>Stack_Range</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a119f9239ec25e397b8cc176afb24fb8f</anchor>
      <arglist>(Stack *stack, int channel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Scale_Stack</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a40f9097ca82e17ba8dae8b2bd2296887</anchor>
      <arglist>(Stack *stack, int channel, double factor, double offset)</arglist>
    </member>
    <member kind="function">
      <type>Stack *</type>
      <name>Copy_Stack</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>ab7d626ff94c09bdab53db4dace026df9</anchor>
      <arglist>(Stack *stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Pack_Stack</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>ae5771fb389c8f155b512f518e1762f5b</anchor>
      <arglist>(Stack *stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Free_Stack</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a7836dbf8238f020a6274af65fbf3f071</anchor>
      <arglist>(Stack *stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Kill_Stack</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a81402a044c52c35eeceac1a73d07e91b</anchor>
      <arglist>(Stack *stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset_Stack</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>aaece5d89a0dca735b1259df9c99988c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Stack_Usage</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>ab7c21f7be34ff4ba42b2c9461feb8d80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Stack_Plane *</type>
      <name>Select_Plane</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a5e6e8dc1c0a86b2de1e5201ad548e856</anchor>
      <arglist>(Stack *a_stack, int plane)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Parse_Stack_Name</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a448610de5fed33f90c6020e316a7c9eb</anchor>
      <arglist>(char *file_name, char **prefix, int *num_width, int *first_num)</arglist>
    </member>
    <member kind="function">
      <type>Stack *</type>
      <name>Read_Stack_Planes</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a17e66fafc15fcb6aff68b170100bc011</anchor>
      <arglist>(char *prefix, int num_width, int first_num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Write_Stack_Planes</name>
      <anchorfile>mg__image__lib_8h.html</anchorfile>
      <anchor>a0d4ec52f19e1513369ee06e0b4f07561</anchor>
      <arglist>(char *prefix, int num_width, int first_num, Stack *a_stack)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mg_utilities.cpp</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>mg__utilities_8cpp</filename>
    <includes id="mg__utilities_8h" name="mg_utilities.h" local="yes" imported="no">mg_utilities.h</includes>
    <class kind="union">Arg_Value</class>
    <class kind="struct">Arg_Details</class>
    <member kind="define">
      <type>#define</type>
      <name>OPTION_SYMBOL</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a46a2e4a2b7ffa0660dfa3221841ed9bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZERO_OR_MORE</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>abd2999b83dcf80755e34db877e7a7259</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ONE_OR_MORE</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a110c29c0c10b5e9c4d59ce922e263809</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RETURN_LENGTH</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a2843026d2ac5887318c6abd598499190</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GET_BODY</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>ab104e4ff6feb651493cbff63e7e67f49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Arg_Kind</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a8062cc01a06ed7c1e1ec7a144ab88149</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPTION</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a8062cc01a06ed7c1e1ec7a144ab88149aa90a72437604db645f335d571993dade</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_CMPCT</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a8062cc01a06ed7c1e1ec7a144ab88149a50e8703af3ff595dcda728ff8b1514f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_ARG</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a8062cc01a06ed7c1e1ec7a144ab88149a02afdce370bd4bf61105a8d9703ffeae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REQUIRED</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a8062cc01a06ed7c1e1ec7a144ab88149a779613937a96dc934924d48a0e29e154</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ITERATOR_0</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a8062cc01a06ed7c1e1ec7a144ab88149a739622cfb448db332db8bd1db74787e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ITERATOR_1</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a8062cc01a06ed7c1e1ec7a144ab88149ac044181604bbd0eff7f517006dedc49e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Arg_Type</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a9e29385eff0b0149c4034ca321ed8952</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT_TYPE</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a9e29385eff0b0149c4034ca321ed8952a7fee88532b24b79bf2a88688a5d681d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_TYPE</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a9e29385eff0b0149c4034ca321ed8952ac6f369fd270b87d6ff0c45bdb49b7f22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING_TYPE</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a9e29385eff0b0149c4034ca321ed8952a7823190eb356a6edf2f33589f250053c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>Guarded_Malloc</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a6040cc0a87c498b27642e48492093e1c</anchor>
      <arglist>(int size, char *routine)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>Guarded_Realloc</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a8d5eec0c216b036029a24631d4e56cd9</anchor>
      <arglist>(void *p, int size, char *routine)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>Guarded_Strdup</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a6b5a960449d8226043ef177a10595c7b</anchor>
      <arglist>(char *p, char *routine)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>Guarded_Fopen</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a234d2e3c233a72eeaa8b1dbf5f112dfb</anchor>
      <arglist>(char *file_name, char *options, char *routine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Process_Arguments</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>ada3334071367259cbb0ed254cf3befe9</anchor>
      <arglist>(int argc, char *argv[], Arg_Spec *spec)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Argument_Cardinality</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a6b0dc39df2bbfc2f24b681ae531ee2ec</anchor>
      <arglist>(char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Get_Int_Arg</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a3865e1afe9ffca8016623059c1d43d6f</anchor>
      <arglist>(char *name,...)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Get_Double_Arg</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>af9ded31fef3c0f66de78e14c1a052c48</anchor>
      <arglist>(char *name,...)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>Get_String_Arg</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>ab7b4aa446abbd98bb5f69fd5ca75a69b</anchor>
      <arglist>(char *name,...)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>Program_Name</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a7847b8e6074dffc098fdc1741fb617c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Print_Argument_Usage</name>
      <anchorfile>mg__utilities_8cpp.html</anchorfile>
      <anchor>a85c31261b9c6451521efd39841537f08</anchor>
      <arglist>(FILE *file)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mg_utilities.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>mg__utilities_8h</filename>
    <class kind="struct">Arg_Spec</class>
    <member kind="define">
      <type>#define</type>
      <name>ASCII</name>
      <anchorfile>mg__utilities_8h.html</anchorfile>
      <anchor>a60710bac11b4f1135f61ded06542d661</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>Guarded_Malloc</name>
      <anchorfile>mg__utilities_8h.html</anchorfile>
      <anchor>a6040cc0a87c498b27642e48492093e1c</anchor>
      <arglist>(int size, char *routine)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>Guarded_Realloc</name>
      <anchorfile>mg__utilities_8h.html</anchorfile>
      <anchor>a4f810a21df328c677da701926b8cc626</anchor>
      <arglist>(void *array, int size, char *routine)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>Guarded_Strdup</name>
      <anchorfile>mg__utilities_8h.html</anchorfile>
      <anchor>aa19c9c76d4a186f986265e4486cbcab3</anchor>
      <arglist>(char *string, char *routine)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>Guarded_Fopen</name>
      <anchorfile>mg__utilities_8h.html</anchorfile>
      <anchor>aaff4ea2ca21b979de6f3cd687c1bf9b0</anchor>
      <arglist>(char *name, char *options, char *routine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Process_Arguments</name>
      <anchorfile>mg__utilities_8h.html</anchorfile>
      <anchor>ada3334071367259cbb0ed254cf3befe9</anchor>
      <arglist>(int argc, char *argv[], Arg_Spec *spec)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>Program_Name</name>
      <anchorfile>mg__utilities_8h.html</anchorfile>
      <anchor>a7847b8e6074dffc098fdc1741fb617c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Argument_Cardinality</name>
      <anchorfile>mg__utilities_8h.html</anchorfile>
      <anchor>a6b0dc39df2bbfc2f24b681ae531ee2ec</anchor>
      <arglist>(char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Get_Int_Arg</name>
      <anchorfile>mg__utilities_8h.html</anchorfile>
      <anchor>a3865e1afe9ffca8016623059c1d43d6f</anchor>
      <arglist>(char *name,...)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Get_Double_Arg</name>
      <anchorfile>mg__utilities_8h.html</anchorfile>
      <anchor>af9ded31fef3c0f66de78e14c1a052c48</anchor>
      <arglist>(char *name,...)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>Get_String_Arg</name>
      <anchorfile>mg__utilities_8h.html</anchorfile>
      <anchor>ab7b4aa446abbd98bb5f69fd5ca75a69b</anchor>
      <arglist>(char *name,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Print_Argument_Usage</name>
      <anchorfile>mg__utilities_8h.html</anchorfile>
      <anchor>a85c31261b9c6451521efd39841537f08</anchor>
      <arglist>(FILE *file)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>os_cpu.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>os__cpu_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>__MAC_PPC__</name>
      <anchorfile>os__cpu_8h.html</anchorfile>
      <anchor>a0a825ef99f5017013a73e13ad988f185</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stackutil.cpp</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>stackutil_8cpp</filename>
    <includes id="stackutil_8h" name="stackutil.h" local="yes" imported="no">stackutil.h</includes>
    <includes id="basic__memory_8cpp" name="basic_memory.cpp" local="yes" imported="no">basic_memory.cpp</includes>
    <includes id="mg__image__lib_8h" name="mg_image_lib.h" local="yes" imported="no">mg_image_lib.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>__STACKUTIL_CPP__</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>ac4015f3d916eb5ed9fdcda1fcaa1fe66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>b_VERBOSE_PRINT</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>accfc2184d62dfbcabd15efc5d2fb33f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZZBIG</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a3cfd69904b9a2ea55e956873e51127af</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>getSurfix</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a79b3f272c41cd757f809cdb61e56ac83</anchor>
      <arglist>(char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadRaw2Stack_2byte</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a6e47c8e05f0e89e6ed7707177bcaca16</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadRaw2Stack_2byte</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a12f82318e5e91f0dad13b8ceceb2c212</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, int chan_id_to_load)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveStack2Raw_2byte</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a2e0940a3ad1425b54b74628326839144</anchor>
      <arglist>(const char *filename, const unsigned char *img, const V3DLONG *sz, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadRaw2Stack</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>af63334c8a46d880428230f7c578fbefc</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadRaw2Stack</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a872707ad943994c62bbaac9558eab747</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, int chan_id_to_load)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveStack2Raw</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a972e74bf8f54c7d80a70f511c46f0293</anchor>
      <arglist>(const char *filename, const unsigned char *img, const V3DLONG *sz, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadRaw5d2Stack</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>ae9fba112ff5769497cc6db05f8b0d860</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadRaw5d2Stack</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a7052b12d1248eb47cad32c370b24c236</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, int stack_id_to_load)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveStack2Raw5d</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>ae5b79d812c53e862cd19606e90ad4f20</anchor>
      <arglist>(const char *filename, const unsigned char *img, const V3DLONG *sz, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>checkMachineEndian</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>ad55e55498d4a03c33a1270d12d9d0cf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap2bytes</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a71110995bfd497e8c09c92575aac25d1</anchor>
      <arglist>(void *targetp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap4bytes</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a6f80700f005074040e0a7d3f0333c7b7</anchor>
      <arglist>(void *targetp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadTif2Stack</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a800258a401ebfaec3746b72733ee3d28</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, int chan_id_to_load)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadLsm2Stack</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a6511d6e53cabc673eadb9600b9f3237a</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, int chan_id_to_load)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadTif2Stack</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>ab3c354c61e9c6971accf515711260e7f</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveStack2Tif</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>ad4434cd1df803306f7dbbd4e902e401d</anchor>
      <arglist>(const char *filename, const unsigned char *img, const V3DLONG *sz, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadLsm2Stack_obsolete</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>aad6a28173c0901e62cb5b813f31421d1</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_lsm_slice</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a11c364dc2de2cf96c0c505a7d0e40c7d</anchor>
      <arglist>(TIFF *in, unsigned char *pointer_first_page, V3DLONG pagepixelnumber, V3DLONG channelpixelnumber, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_lsm_slice_strip</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a301041efe80d3d9b34e68e918c10b44d</anchor>
      <arglist>(TIFF *in, unsigned char *pointer_first_page, V3DLONG pagepixelnumber, V3DLONG channelpixelnumber, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_lsm_slice_tile</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a2d670afe6184cd022fb24b7ac52b0739</anchor>
      <arglist>(TIFF *in, unsigned char *pointer_first_page, V3DLONG pagepixelnumber, V3DLONG channelpixelnumber, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadLsm2Stack</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a6a2d305f091234d66ff15b5d6d6cf90c</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadLsmThumbnail2Stack</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a6fed47ee4a36076cd0a2b23e3bdc0e81</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadLsmThumbnail2Stack_middle</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>ae0a9a66719cd75dea6ea20fe357a2db1</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadLsm2Stack_middle</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a3c463391ce3c3df42d6c2d6d426c228b</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadLsmSlice</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a0078df8335bda26478731c00d0eb67de</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, V3DLONG sliceno, bool b_thumbnail)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadTifSlice</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a863b9e694507902b94d68f3c2f4f71e5</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, V3DLONG sliceno, bool b_thumbnail)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_tif_slice</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a25df4f6ffac5ea40771592babae11733</anchor>
      <arglist>(TIFF *tif, unsigned char *pointer_first_page, V3DLONG width, V3DLONG height)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_tif_slice_strip</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a7f3254b0fc31b3b1786e322bc2b5fb3c</anchor>
      <arglist>(TIFF *in, unsigned char *pointer_first_page, V3DLONG pagepixelnumber, V3DLONG channelpixelnumber, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_tif_slice_tile</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>ae88852c207dedf837ffa9a78c977808b</anchor>
      <arglist>(TIFF *in, unsigned char *pointer_first_page, V3DLONG pagepixelnumber, V3DLONG channelpixelnumber, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadRawSlice</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>aa3f51fcb50f3bfca4de13d4abd8ccaf6</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, V3DLONG sliceno, bool b_thumbnail)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadRawSlice_2byte</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a6e75a7be4ef9f0b1fd325bc28aea1a9b</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, V3DLONG sliceno, bool b_thumbnail)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadMRC2Stack</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>af57c33dc7f3cad8a43c0acb28b7ce764</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveStack2MRC</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>ae9a08d6ddc296941744fa3fd8bee5464</anchor>
      <arglist>(const char *filename, const unsigned char *img, const V3DLONG *sz, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ensure_file_exists_and_size_not_too_big</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>aab21f7aae08357680d5eba43fd5f014f</anchor>
      <arglist>(char *filename, V3DLONG sz_thres)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadImage</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>aa990185a5669815f09cda17fa4898465</anchor>
      <arglist>(char imgSrcFile[], unsigned char *&amp;data1d, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadImage</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a5ddb9813041ef66dcfbf0217471927a7</anchor>
      <arglist>(char imgSrcFile[], unsigned char *&amp;data1d, V3DLONG *&amp;sz, int &amp;datatype, int chan_id_to_load)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveImage</name>
      <anchorfile>stackutil_8cpp.html</anchorfile>
      <anchor>a7320953ed61c9c68e0ccf7d2455e059a</anchor>
      <arglist>(const char filename[], const unsigned char *data1d, const V3DLONG *sz, const int datatype)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stackutil.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>stackutil_8h</filename>
    <includes id="v3d__basicdatatype_8h" name="v3d_basicdatatype.h" local="yes" imported="no">v3d_basicdatatype.h</includes>
    <includes id="imageio__mylib_8h" name="imageio_mylib.h" local="yes" imported="no">imageio_mylib.h</includes>
    <member kind="typedef">
      <type>char</type>
      <name>BIT8_UNIT</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a618c690f986cf06be7dd09496c8b4b41</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short int</type>
      <name>BIT16_UNIT</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a101374b031d00a13cb06108aa55285db</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>BIT32_UNIT</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>abc6cec054cba4caf311cedd4f5902879</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>V3DLONG</type>
      <name>BIT64_UNIT</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a4f2fec4ef746fdc114f38119fb4d6439</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadMRC2Stack</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>af57c33dc7f3cad8a43c0acb28b7ce764</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveStack2MRC</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>ae9a08d6ddc296941744fa3fd8bee5464</anchor>
      <arglist>(const char *filename, const unsigned char *img, const V3DLONG *sz, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadRaw5d2Stack</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>ae9fba112ff5769497cc6db05f8b0d860</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadRaw5d2Stack</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a7052b12d1248eb47cad32c370b24c236</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, int stack_id_to_load)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveStack2Raw5d</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>ae5b79d812c53e862cd19606e90ad4f20</anchor>
      <arglist>(const char *filename, const unsigned char *img, const V3DLONG *sz, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadRaw2Stack</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>af63334c8a46d880428230f7c578fbefc</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadRaw2Stack</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a872707ad943994c62bbaac9558eab747</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, int chan_id_to_load)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveStack2Raw</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a972e74bf8f54c7d80a70f511c46f0293</anchor>
      <arglist>(const char *filename, const unsigned char *img, const V3DLONG *sz, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadRaw2Stack_2byte</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a6e47c8e05f0e89e6ed7707177bcaca16</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadRaw2Stack_2byte</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a12f82318e5e91f0dad13b8ceceb2c212</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, int chan_id_to_load)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveStack2Raw_2byte</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a2e0940a3ad1425b54b74628326839144</anchor>
      <arglist>(const char *filename, const unsigned char *img, const V3DLONG *sz, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap2bytes</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a71110995bfd497e8c09c92575aac25d1</anchor>
      <arglist>(void *targetp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap4bytes</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a6f80700f005074040e0a7d3f0333c7b7</anchor>
      <arglist>(void *targetp)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>checkMachineEndian</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>ad55e55498d4a03c33a1270d12d9d0cf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadTif2Stack</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>ab3c354c61e9c6971accf515711260e7f</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadTif2Stack</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a800258a401ebfaec3746b72733ee3d28</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, int chan_id_to_load)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saveStack2Tif</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>ad4434cd1df803306f7dbbd4e902e401d</anchor>
      <arglist>(const char *filename, const unsigned char *img, const V3DLONG *sz, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadLsm2Stack_obsolete</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>aad6a28173c0901e62cb5b813f31421d1</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadLsm2Stack</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a6a2d305f091234d66ff15b5d6d6cf90c</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadLsm2Stack</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a6511d6e53cabc673eadb9600b9f3237a</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, int chan_id_to_load)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_lsm_slice</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a11c364dc2de2cf96c0c505a7d0e40c7d</anchor>
      <arglist>(TIFF *in, unsigned char *pointer_first_page, V3DLONG pagepixelnumber, V3DLONG channelpixelnumber, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_lsm_slice_strip</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a301041efe80d3d9b34e68e918c10b44d</anchor>
      <arglist>(TIFF *in, unsigned char *pointer_first_page, V3DLONG pagepixelnumber, V3DLONG channelpixelnumber, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_lsm_slice_tile</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a2d670afe6184cd022fb24b7ac52b0739</anchor>
      <arglist>(TIFF *in, unsigned char *pointer_first_page, V3DLONG pagepixelnumber, V3DLONG channelpixelnumber, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadLsm2Stack_middle</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a3c463391ce3c3df42d6c2d6d426c228b</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadLsmThumbnail2Stack</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a6fed47ee4a36076cd0a2b23e3bdc0e81</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadLsmThumbnail2Stack_middle</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>ae0a9a66719cd75dea6ea20fe357a2db1</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadLsmSlice</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a0078df8335bda26478731c00d0eb67de</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, V3DLONG sliceno, bool b_thumbnail)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadTifSlice</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a863b9e694507902b94d68f3c2f4f71e5</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, V3DLONG sliceno, bool b_thumbnail)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_tif_slice</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a25df4f6ffac5ea40771592babae11733</anchor>
      <arglist>(TIFF *tif, unsigned char *pointer_first_page, V3DLONG width, V3DLONG height)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_tif_slice_strip</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a7f3254b0fc31b3b1786e322bc2b5fb3c</anchor>
      <arglist>(TIFF *in, unsigned char *pointer_first_page, V3DLONG pagepixelnumber, V3DLONG channelpixelnumber, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read_tif_slice_tile</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>ae88852c207dedf837ffa9a78c977808b</anchor>
      <arglist>(TIFF *in, unsigned char *pointer_first_page, V3DLONG pagepixelnumber, V3DLONG channelpixelnumber, int datatype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadRawSlice</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>aa3f51fcb50f3bfca4de13d4abd8ccaf6</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, V3DLONG sliceno, bool b_thumbnail)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loadRawSlice_2byte</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a6e75a7be4ef9f0b1fd325bc28aea1a9b</anchor>
      <arglist>(char *filename, unsigned char *&amp;img, V3DLONG *&amp;sz, int &amp;datatype, V3DLONG sliceno, bool b_thumbnail)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>getSurfix</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a79b3f272c41cd757f809cdb61e56ac83</anchor>
      <arglist>(char *filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ensure_file_exists_and_size_not_too_big</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>aab21f7aae08357680d5eba43fd5f014f</anchor>
      <arglist>(char *filename, V3DLONG sz_thres)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadImage</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>aa990185a5669815f09cda17fa4898465</anchor>
      <arglist>(char imgSrcFile[], unsigned char *&amp;data1d, V3DLONG *&amp;sz, int &amp;datatype)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadImage</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a5ddb9813041ef66dcfbf0217471927a7</anchor>
      <arglist>(char imgSrcFile[], unsigned char *&amp;data1d, V3DLONG *&amp;sz, int &amp;datatype, int chan_id_to_load)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveImage</name>
      <anchorfile>stackutil_8h.html</anchorfile>
      <anchor>a7320953ed61c9c68e0ccf7d2455e059a</anchor>
      <arglist>(const char filename[], const unsigned char *data1d, const V3DLONG *sz, const int datatype)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>v3d_basicdatatype.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>v3d__basicdatatype_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>V3DLONG</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>a9ac0036cddfd2650005e7cbe58da47e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>v3d_uint8</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>abb8525f6ebb6a5f352366d45378eba3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short</type>
      <name>v3d_uint16</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>a415e506c4fdeefc473edcf06c2a33de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>v3d_uint32</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>a6097b0dba93ea277a0f7187dc0efd8cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned long long</type>
      <name>v3d_uint64</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>afafdada2ba9bb9aa21f385da33a8f9ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>char</type>
      <name>v3d_sint8</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>ae1b1b7dea72d188e7d17caec00339526</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short</type>
      <name>v3d_sint16</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>a0019dc007cc2da64dcfbe0398d1f571a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>v3d_sint32</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>a9fe61285bfacff975faf27fa097d0dcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>v3d_sint64</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>a85e1907059f4118ccf56cec4ac1612e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>v3d_float32</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>a895698987e46714bc5d74bbd7dfdad42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>v3d_float64</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>af836e613cc30c52336445ec36a60b3f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void *</type>
      <name>v3dhandle</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>a8a9ce243b82a364a87c31ddcbea31b35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ImagePixelType</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>aacf29f94558f9791b08b57429b04777f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>V3D_UNKNOWN</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>aacf29f94558f9791b08b57429b04777faa82daf1299786dfb51b15e6e6c901e98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>V3D_UINT8</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>aacf29f94558f9791b08b57429b04777fa08cd1feb68028281bc49840a98f3d0ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>V3D_UINT16</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>aacf29f94558f9791b08b57429b04777facfd9e82e643d768cb470b41d7e554288</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>V3D_FLOAT32</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>aacf29f94558f9791b08b57429b04777fa0748b26672512fdb866933c23f2e27b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>TimePackType</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>ae32855706900a269e6a201c3e88a2dae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIME_PACK_NONE</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>ae32855706900a269e6a201c3e88a2daeabe25ad0c434dae76420a3591a4f1f3b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIME_PACK_Z</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>ae32855706900a269e6a201c3e88a2daea349a84ca8d0cc426eb7f26945bb6a1af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIME_PACK_C</name>
      <anchorfile>v3d__basicdatatype_8h.html</anchorfile>
      <anchor>ae32855706900a269e6a201c3e88a2daea47e33f9f8ed0150c08a4d878ed1dbd63</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>v3d_curvetracepara.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>v3d__curvetracepara_8h</filename>
    <includes id="v3d__basicdatatype_8h" name="v3d_basicdatatype.h" local="yes" imported="no">v3d_basicdatatype.h</includes>
    <class kind="struct">CurveTracePara</class>
  </compound>
  <compound kind="file">
    <name>v3d_global_preference.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>v3d__global__preference_8h</filename>
    <class kind="struct">V3D_GlobalSetting</class>
  </compound>
  <compound kind="file">
    <name>v3d_imaging_para.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/customary_structs/</path>
    <filename>v3d__imaging__para_8h</filename>
    <includes id="v3d__basicdatatype_8h" name="v3d_basicdatatype.h" local="yes" imported="no">../v3d_basicdatatype.h</includes>
    <includes id="basic__4dimage_8h" name="basic_4dimage.h" local="yes" imported="no">../basic_4dimage.h</includes>
    <includes id="v3d__interface_8h" name="v3d_interface.h" local="yes" imported="no">../v3d_interface.h</includes>
    <class kind="struct">v3d_imaging_paras</class>
  </compound>
  <compound kind="file">
    <name>v3d_interface.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>v3d__interface_8h</filename>
    <includes id="basic__4dimage_8h" name="basic_4dimage.h" local="yes" imported="no">basic_4dimage.h</includes>
    <includes id="basic__surf__objs_8h" name="basic_surf_objs.h" local="yes" imported="no">basic_surf_objs.h</includes>
    <includes id="basic__landmark_8h" name="basic_landmark.h" local="yes" imported="no">basic_landmark.h</includes>
    <includes id="basic__view3d_8h" name="basic_view3d.h" local="yes" imported="no">basic_view3d.h</includes>
    <includes id="basic__triview_8h" name="basic_triview.h" local="yes" imported="no">basic_triview.h</includes>
    <includes id="v3d__global__preference_8h" name="v3d_global_preference.h" local="yes" imported="no">v3d_global_preference.h</includes>
    <includes id="v3d__message_8h" name="v3d_message.h" local="yes" imported="no">v3d_message.h</includes>
    <class kind="struct">V3DPluginArgItem</class>
    <class kind="class">V3DPluginCallback</class>
    <class kind="class">V3DPluginInterface</class>
    <class kind="class">V3DPluginCallback2</class>
    <class kind="class">V3DPluginInterface2</class>
    <class kind="class">V3DPluginInterface2_1</class>
    <class kind="class">V3DSingleImageInterface</class>
    <class kind="class">V3DSingleImageInterface2_1</class>
    <member kind="typedef">
      <type>QList&lt; V3DPluginArgItem &gt;</type>
      <name>V3DPluginArgList</name>
      <anchorfile>v3d__interface_8h.html</anchorfile>
      <anchor>ad8d74eda7e04c47de8829b46ee61462d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QList&lt; QPolygon &gt;</type>
      <name>ROIList</name>
      <anchorfile>v3d__interface_8h.html</anchorfile>
      <anchor>a8387aa904c716bc54806ac290d1d4872</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QList&lt; LocationSimple &gt;</type>
      <name>LandmarkList</name>
      <anchorfile>v3d__interface_8h.html</anchorfile>
      <anchor>a96c3934d5e002240864987a29bb363ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QList&lt; v3dhandle &gt;</type>
      <name>v3dhandleList</name>
      <anchorfile>v3d__interface_8h.html</anchorfile>
      <anchor>a181de0bde98ba7fc9211082f89501e8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>QT_BEGIN_NAMESPACE</type>
      <name>Q_DECLARE_INTERFACE</name>
      <anchorfile>v3d__interface_8h.html</anchorfile>
      <anchor>a3dfa02de0f9922c30643e56e27b44466</anchor>
      <arglist>(V3DPluginInterface2_1,&quot;com.janelia.v3d.V3DPluginInterface/2.1&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Q_DECLARE_INTERFACE</name>
      <anchorfile>v3d__interface_8h.html</anchorfile>
      <anchor>a818663ca69cfbf2b647d85e64810a3f3</anchor>
      <arglist>(V3DPluginInterface2,&quot;com.janelia.v3d.V3DPluginInterface/2.0&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Q_DECLARE_INTERFACE</name>
      <anchorfile>v3d__interface_8h.html</anchorfile>
      <anchor>a7b5cf2cce09a7030764b6ab6abc5180c</anchor>
      <arglist>(V3DPluginInterface,&quot;com.janelia.v3d.V3DPluginInterface/1.1&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Q_DECLARE_INTERFACE</name>
      <anchorfile>v3d__interface_8h.html</anchorfile>
      <anchor>a29ce878461ff0790f8e4f0011125e223</anchor>
      <arglist>(V3DSingleImageInterface2_1,&quot;com.janelia.v3d.V3DSingleImageInterface/2.1&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Q_DECLARE_INTERFACE</name>
      <anchorfile>v3d__interface_8h.html</anchorfile>
      <anchor>a82685c2d2f306230ea90cda207f6bd96</anchor>
      <arglist>(V3DSingleImageInterface,&quot;com.janelia.v3d.V3DSingleImageInterface/1.0&quot;)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; V3DLONG &gt;</type>
      <name>getChannelListForProcessingFromGlobalSetting</name>
      <anchorfile>v3d__interface_8h.html</anchorfile>
      <anchor>af5277b87b2ea9839114645ef650f8d2e</anchor>
      <arglist>(V3DLONG nc, V3DPluginCallback &amp;callback)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; V3D_Image3DBasic &gt;</type>
      <name>getChannelDataForProcessingFromGlobalSetting</name>
      <anchorfile>v3d__interface_8h.html</anchorfile>
      <anchor>aa1c5e35f6772c533924e034de093f52a</anchor>
      <arglist>(Image4DSimple *p, V3DPluginCallback &amp;callback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPluginOutputAndDisplayUsingGlobalSetting</name>
      <anchorfile>v3d__interface_8h.html</anchorfile>
      <anchor>a716a8d61d418dd91a18fb994a71a19fb</anchor>
      <arglist>(T *pluginoutputimg1d, V3DLONG sz0, V3DLONG sz1, V3DLONG sz2, V3DLONG sz3, V3DPluginCallback &amp;callback, const char *imageName=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>assembleProcessedChannels2Image4DClass</name>
      <anchorfile>v3d__interface_8h.html</anchorfile>
      <anchor>a69a37b7efbfcf88892c9cd536b546167</anchor>
      <arglist>(QList&lt; V3D_Image3DBasic &gt; &amp;pd, V3DPluginCallback &amp;cb)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>v3d_message.cpp</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>v3d__message_8cpp</filename>
    <includes id="v3d__message_8h" name="v3d_message.h" local="yes" imported="no">v3d_message.h</includes>
    <member kind="function">
      <type>void</type>
      <name>v3d_msg</name>
      <anchorfile>v3d__message_8cpp.html</anchorfile>
      <anchor>a2d151f6d35fa7d42db1b95c2d506aeb1</anchor>
      <arglist>(const char *msg, bool b_disp_QTDialog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>v3d_msg</name>
      <anchorfile>v3d__message_8cpp.html</anchorfile>
      <anchor>a88182766ef21db60305fd0cd102e18e3</anchor>
      <arglist>(const QString &amp;msg, bool b_disp_QTDialog)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>v3d_message.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>v3d__message_8h</filename>
    <member kind="function">
      <type>void</type>
      <name>v3d_msg</name>
      <anchorfile>v3d__message_8h.html</anchorfile>
      <anchor>a8b6aaeff3c8520b078ca0308ceeb658b</anchor>
      <arglist>(const char *msg, bool b_disp_QTDialog=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>v3d_msg</name>
      <anchorfile>v3d__message_8h.html</anchorfile>
      <anchor>a7fcf8d40fdd566f1895fab0e71866117</anchor>
      <arglist>(const QString &amp;msg, bool b_disp_QTDialog=true)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>v3d_multithreadimageio_para.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/customary_structs/</path>
    <filename>v3d__multithreadimageio__para_8h</filename>
    <includes id="v3d__basicdatatype_8h" name="v3d_basicdatatype.h" local="yes" imported="no">../v3d_basicdatatype.h</includes>
    <includes id="v3d__interface_8h" name="v3d_interface.h" local="yes" imported="no">../v3d_interface.h</includes>
    <class kind="struct">v3d_multithreadimageio_paras</class>
  </compound>
  <compound kind="file">
    <name>vcdiff.cpp</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>vcdiff_8cpp</filename>
    <includes id="vcdiff_8h" name="vcdiff.h" local="yes" imported="no">vcdiff.h</includes>
    <member kind="function">
      <type>double</type>
      <name>round</name>
      <anchorfile>vcdiff_8cpp.html</anchorfile>
      <anchor>a7df19cf730447c00150569250a4b5e1d</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>floor</name>
      <anchorfile>vcdiff_8cpp.html</anchorfile>
      <anchor>a65f0d7631e66c9e030328c8de8059738</anchor>
      <arglist>(V3DLONG x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fabs</name>
      <anchorfile>vcdiff_8cpp.html</anchorfile>
      <anchor>a4944b5e42d05782ac1d8a9d0f7502b87</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>fabs</name>
      <anchorfile>vcdiff_8cpp.html</anchorfile>
      <anchor>a812c2d54d276259adb6090998d474e31</anchor>
      <arglist>(V3DLONG x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>log</name>
      <anchorfile>vcdiff_8cpp.html</anchorfile>
      <anchor>ae518c10f472c43a247e3e9b0f0a75be2</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>lround</name>
      <anchorfile>vcdiff_8cpp.html</anchorfile>
      <anchor>a4c2591e87e19026dbc120c509a1cae97</anchor>
      <arglist>(V3DLONG x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>log2</name>
      <anchorfile>vcdiff_8cpp.html</anchorfile>
      <anchor>a38bd88274dc5594b4826fd60c8054c8e</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pow</name>
      <anchorfile>vcdiff_8cpp.html</anchorfile>
      <anchor>a60fcda41da2dedebdabdf4b3837f0588</anchor>
      <arglist>(V3DLONG a, V3DLONG b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vcdiff.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>vcdiff_8h</filename>
    <includes id="v3d__basicdatatype_8h" name="v3d_basicdatatype.h" local="yes" imported="no">v3d_basicdatatype.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>isnan</name>
      <anchorfile>vcdiff_8h.html</anchorfile>
      <anchor>a2e1baae9134e580910322362dc23290e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>round</name>
      <anchorfile>vcdiff_8h.html</anchorfile>
      <anchor>a7df19cf730447c00150569250a4b5e1d</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>floor</name>
      <anchorfile>vcdiff_8h.html</anchorfile>
      <anchor>a65f0d7631e66c9e030328c8de8059738</anchor>
      <arglist>(V3DLONG x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fabs</name>
      <anchorfile>vcdiff_8h.html</anchorfile>
      <anchor>a4944b5e42d05782ac1d8a9d0f7502b87</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>fabs</name>
      <anchorfile>vcdiff_8h.html</anchorfile>
      <anchor>a812c2d54d276259adb6090998d474e31</anchor>
      <arglist>(V3DLONG x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>log</name>
      <anchorfile>vcdiff_8h.html</anchorfile>
      <anchor>ae518c10f472c43a247e3e9b0f0a75be2</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>lround</name>
      <anchorfile>vcdiff_8h.html</anchorfile>
      <anchor>a4c2591e87e19026dbc120c509a1cae97</anchor>
      <arglist>(V3DLONG x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>log2</name>
      <anchorfile>vcdiff_8h.html</anchorfile>
      <anchor>a38bd88274dc5594b4826fd60c8054c8e</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pow</name>
      <anchorfile>vcdiff_8h.html</anchorfile>
      <anchor>a60fcda41da2dedebdabdf4b3837f0588</anchor>
      <arglist>(V3DLONG a, V3DLONG b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>volimg_proc.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>volimg__proc_8h</filename>
    <includes id="volimg__proc__declare_8h" name="volimg_proc_declare.h" local="yes" imported="no">volimg_proc_declare.h</includes>
    <member kind="function">
      <type>T</type>
      <name>hardLimit</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a36bd7cbf5031ff44e4e5895fbd63b4a9</anchor>
      <arglist>(T a, T lowerBound, T upperBound)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapValue</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a5e267b98ab6be09fd26c1ac6fd393bd2</anchor>
      <arglist>(T &amp;a, T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_assign</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>af6ecb2ab20c6154d293cc8506beabca2</anchor>
      <arglist>(T ***res, T v, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_assign</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a2c3b6aab3bf9c70de9184820918cc7b6</anchor>
      <arglist>(T ***res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_negative</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>acebe564c3106584564bdd8c1d08f60fe</anchor>
      <arglist>(T ***res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_inverse</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a69d72c45603ad52697140cf9ed64c48a</anchor>
      <arglist>(T ***res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_square</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a90fee0cdc0e1c3a2ea85a743d58369f0</anchor>
      <arglist>(T ***res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_root</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>ad0c4da2366057a22127e6269af7e4d8b</anchor>
      <arglist>(T ***res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_exp</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a3371de28de3044a6cfa9590943dcbf9d</anchor>
      <arglist>(T ***res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_log</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>ae6e0cc1bb8e7264cff46e866a6f1fdb6</anchor>
      <arglist>(T ***res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_min</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a78906943d441ffd9f4043e36125d93da</anchor>
      <arglist>(T &amp;res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_max</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a4512c413ed79090e010993848a5f0d9d</anchor>
      <arglist>(T &amp;res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_scale_01</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>ae15ee5ad09582c9e3d0ac9649c61dcd4</anchor>
      <arglist>(T ***res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_sum</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>abe7db820093008c4579794e950783bac</anchor>
      <arglist>(T &amp;res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_mean</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a5c3741326a8df9121233571aa2e063e8</anchor>
      <arglist>(T &amp;res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_threshold</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>ab971a918224a63c481b6850151ab7003</anchor>
      <arglist>(T ***res, V3DLONG d0, V3DLONG d1, V3DLONG d2, T thres, bool b_set_to_binary)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_nnz</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a3b126e0aa1c1e1078a4a9b0ddc575824</anchor>
      <arglist>(V3DLONG &amp;nnz, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2, V3DLONG d0b, V3DLONG d0e, V3DLONG d1b, V3DLONG d1e, V3DLONG d2b, V3DLONG d2e)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_plus</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a4dcc04d1b9c0748816b49a691fbebafa</anchor>
      <arglist>(T ***res, T ***sa, T ***sb, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_plus_constant</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a949fce01e8ecf040d85d6e29cfa3fb86</anchor>
      <arglist>(T ***res, T ***sa, double c, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_minus</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a306330207c710b0818fcda520874b327</anchor>
      <arglist>(T ***res, T ***sa, T ***sb, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_time</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a849cffddf7bede0e9294251d3eff28c2</anchor>
      <arglist>(T ***res, T ***sa, T ***sb, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_time_constant</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>af1d6adf243cd501c5b8f76fa3135fc3d</anchor>
      <arglist>(T ***res, T ***sa, double c, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_divide</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>afaddb8bb13345a4e4f9b3d7ffa5d4686</anchor>
      <arglist>(T ***res, T ***sa, T ***sb, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_square_root_diff</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>af89434ea3acd415f27df35c6f29f4350</anchor>
      <arglist>(double &amp;res, T ***sa, T ***sb, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mean_and_std</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a3e5581743fd93d71e4cbd04db81945a6</anchor>
      <arglist>(T1 *data, V3DLONG n, T2 &amp;ave, T2 &amp;sdev)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mean_and_std</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>ab316b308e391d9811440dc67cb6b06ae</anchor>
      <arglist>(T *data, V3DLONG n, T &amp;ave, T &amp;sdev, T maskval)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mean_and_std</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a284e82c3beef7072fb590aae650c4c59</anchor>
      <arglist>(T *data, V3DLONG n, T &amp;ave, T &amp;sdev, T maskval_lowerbound, T maskval_upperbound)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moment</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>ac48729a826f31cbafa82c1c8f4e65ccc</anchor>
      <arglist>(T *data, V3DLONG n, double &amp;ave, double &amp;adev, double &amp;sdev, double &amp;var, double &amp;skew, double &amp;curt)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>minInVector</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a07be75cddb00b60f61db3550d90340d2</anchor>
      <arglist>(T *p, V3DLONG len, V3DLONG &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>maxInVector</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>acd33b88a40ac7c42837e5020b3b05816</anchor>
      <arglist>(T *p, V3DLONG len, V3DLONG &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>minMaxInVector</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>af01d02395cff2663df502fce6ecbf69e</anchor>
      <arglist>(T *p, V3DLONG len, V3DLONG &amp;pos_min, T &amp;minv, V3DLONG &amp;pos_max, T &amp;maxv)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fit_to_cube</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>ab55b77950270df472006227e6594ae77</anchor>
      <arglist>(T *&amp;img, V3DLONG *sz, V3DLONG *sz_target)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>downsample3dimg_1dpt</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a36a4eb4af341c785db1405f7bcd4f53f</anchor>
      <arglist>(T *&amp;img, V3DLONG *sz, double dfactor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reslice_Z</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>ab76e697976fd2c80f77ec40c6997f276</anchor>
      <arglist>(T *&amp;invol1d, V3DLONG *sz, double xy_rez, double z_rez, int interp_method)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resample3dimg_interp</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a36cdc66902fc0fb456483b367dbc5cac</anchor>
      <arglist>(T *&amp;img, V3DLONG *sz, double dfactor_x, double dfactor_y, double dfactor_z, int interp_method)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>calCorrelation</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a41baf871860b04c21cbca21ba84a729f</anchor>
      <arglist>(T *img1, T *img2, V3DLONG imglen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>twopoints_lineprofile_3dimg</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>a858930a3ec361b1bcd673b50fbbb484f</anchor>
      <arglist>(T ***img, V3DLONG sz0, V3DLONG sz1, V3DLONG sz2, double x1, double y1, double z1, double x2, double y2, double z2, T *&amp;profile, V3DLONG &amp;profile_len)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>twopoints_lineprofile_3dimg_sum</name>
      <anchorfile>volimg__proc_8h.html</anchorfile>
      <anchor>acfe33b511afab42c3644dba89d56fbef</anchor>
      <arglist>(T ***img, V3DLONG sz0, V3DLONG sz1, V3DLONG sz2, double x1, double y1, double z1, double x2, double y2, double z2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>volimg_proc_declare.h</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>volimg__proc__declare_8h</filename>
    <includes id="v3d__basicdatatype_8h" name="v3d_basicdatatype.h" local="yes" imported="no">v3d_basicdatatype.h</includes>
    <member kind="function">
      <type>T</type>
      <name>hardLimit</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a36bd7cbf5031ff44e4e5895fbd63b4a9</anchor>
      <arglist>(T a, T lowerBound, T upperBound)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapValue</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a5e267b98ab6be09fd26c1ac6fd393bd2</anchor>
      <arglist>(T &amp;a, T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_assign</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>af6ecb2ab20c6154d293cc8506beabca2</anchor>
      <arglist>(T ***res, T v, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_assign</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a2c3b6aab3bf9c70de9184820918cc7b6</anchor>
      <arglist>(T ***res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_negative</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>acebe564c3106584564bdd8c1d08f60fe</anchor>
      <arglist>(T ***res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_inverse</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a69d72c45603ad52697140cf9ed64c48a</anchor>
      <arglist>(T ***res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_square</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a90fee0cdc0e1c3a2ea85a743d58369f0</anchor>
      <arglist>(T ***res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_root</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>ad0c4da2366057a22127e6269af7e4d8b</anchor>
      <arglist>(T ***res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_exp</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a3371de28de3044a6cfa9590943dcbf9d</anchor>
      <arglist>(T ***res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_log</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>ae6e0cc1bb8e7264cff46e866a6f1fdb6</anchor>
      <arglist>(T ***res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_min</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a78906943d441ffd9f4043e36125d93da</anchor>
      <arglist>(T &amp;res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_max</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a4512c413ed79090e010993848a5f0d9d</anchor>
      <arglist>(T &amp;res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_scale_01</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>ae15ee5ad09582c9e3d0ac9649c61dcd4</anchor>
      <arglist>(T ***res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_sum</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>abe7db820093008c4579794e950783bac</anchor>
      <arglist>(T &amp;res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_mean</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a5c3741326a8df9121233571aa2e063e8</anchor>
      <arglist>(T &amp;res, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_threshold</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>ab971a918224a63c481b6850151ab7003</anchor>
      <arglist>(T ***res, V3DLONG d0, V3DLONG d1, V3DLONG d2, T thres, bool b_set_to_binary)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_nnz</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a3b126e0aa1c1e1078a4a9b0ddc575824</anchor>
      <arglist>(V3DLONG &amp;nnz, T ***sa, V3DLONG d0, V3DLONG d1, V3DLONG d2, V3DLONG d0b, V3DLONG d0e, V3DLONG d1b, V3DLONG d1e, V3DLONG d2b, V3DLONG d2e)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_plus</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a4dcc04d1b9c0748816b49a691fbebafa</anchor>
      <arglist>(T ***res, T ***sa, T ***sb, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_plus_constant</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a949fce01e8ecf040d85d6e29cfa3fb86</anchor>
      <arglist>(T ***res, T ***sa, double c, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_minus</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a306330207c710b0818fcda520874b327</anchor>
      <arglist>(T ***res, T ***sa, T ***sb, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_time</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a849cffddf7bede0e9294251d3eff28c2</anchor>
      <arglist>(T ***res, T ***sa, T ***sb, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_time_constant</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>af1d6adf243cd501c5b8f76fa3135fc3d</anchor>
      <arglist>(T ***res, T ***sa, double c, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_divide</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>afaddb8bb13345a4e4f9b3d7ffa5d4686</anchor>
      <arglist>(T ***res, T ***sa, T ***sb, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vol3d_square_root_diff</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>af89434ea3acd415f27df35c6f29f4350</anchor>
      <arglist>(double &amp;res, T ***sa, T ***sb, V3DLONG d0, V3DLONG d1, V3DLONG d2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mean_and_std</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a3e5581743fd93d71e4cbd04db81945a6</anchor>
      <arglist>(T1 *data, V3DLONG n, T2 &amp;ave, T2 &amp;sdev)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mean_and_std</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>ab316b308e391d9811440dc67cb6b06ae</anchor>
      <arglist>(T *data, V3DLONG n, T &amp;ave, T &amp;sdev, T maskval)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mean_and_std</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a284e82c3beef7072fb590aae650c4c59</anchor>
      <arglist>(T *data, V3DLONG n, T &amp;ave, T &amp;sdev, T maskval_lowerbound, T maskval_upperbound)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moment</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>ac48729a826f31cbafa82c1c8f4e65ccc</anchor>
      <arglist>(T *data, V3DLONG n, double &amp;ave, double &amp;adev, double &amp;sdev, double &amp;var, double &amp;skew, double &amp;curt)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>minInVector</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a07be75cddb00b60f61db3550d90340d2</anchor>
      <arglist>(T *p, V3DLONG len, V3DLONG &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>maxInVector</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>acd33b88a40ac7c42837e5020b3b05816</anchor>
      <arglist>(T *p, V3DLONG len, V3DLONG &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>minMaxInVector</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>af01d02395cff2663df502fce6ecbf69e</anchor>
      <arglist>(T *p, V3DLONG len, V3DLONG &amp;pos_min, T &amp;minv, V3DLONG &amp;pos_max, T &amp;maxv)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fit_to_cube</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>ab55b77950270df472006227e6594ae77</anchor>
      <arglist>(T *&amp;img, V3DLONG *sz, V3DLONG *sz_target)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>downsample3dimg_1dpt</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a36a4eb4af341c785db1405f7bcd4f53f</anchor>
      <arglist>(T *&amp;img, V3DLONG *sz, double dfactor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reslice_Z</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>aea3288b522e5bb598190281b929f3603</anchor>
      <arglist>(T *&amp;invol1d, V3DLONG *sz, double xy_rez, double z_rez)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resample3dimg_linear_interp</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a1254840395a0e9b4e818829dde1922f8</anchor>
      <arglist>(T *&amp;img, V3DLONG *sz, double dfactor_x, double dfactor_y, double dfactor_z)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>calCorrelation</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a41baf871860b04c21cbca21ba84a729f</anchor>
      <arglist>(T *img1, T *img2, V3DLONG imglen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>twopoints_lineprofile_3dimg</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>a858930a3ec361b1bcd673b50fbbb484f</anchor>
      <arglist>(T ***img, V3DLONG sz0, V3DLONG sz1, V3DLONG sz2, double x1, double y1, double z1, double x2, double y2, double z2, T *&amp;profile, V3DLONG &amp;profile_len)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>twopoints_lineprofile_3dimg_sum</name>
      <anchorfile>volimg__proc__declare_8h.html</anchorfile>
      <anchor>acfe33b511afab42c3644dba89d56fbef</anchor>
      <arglist>(T ***img, V3DLONG sz0, V3DLONG sz1, V3DLONG sz2, double x1, double y1, double z1, double x2, double y2, double z2)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__Image</name>
    <filename>struct____Image.html</filename>
    <member kind="variable">
      <type>struct __Image *</type>
      <name>next</name>
      <anchorfile>struct____Image.html</anchorfile>
      <anchor>a0b1bd18bc43eb96d6bb3f10b99cc52a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>asize</name>
      <anchorfile>struct____Image.html</anchorfile>
      <anchor>af1353baf85aa0ca039aa90d16448edd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Image</type>
      <name>image</name>
      <anchorfile>struct____Image.html</anchorfile>
      <anchor>af6057c173c211ff78c0f66fe3229899e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__Stack</name>
    <filename>struct____Stack.html</filename>
    <member kind="variable">
      <type>struct __Stack *</type>
      <name>next</name>
      <anchorfile>struct____Stack.html</anchorfile>
      <anchor>a4df2e2ce57a69952fd52d29e35565e7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>vsize</name>
      <anchorfile>struct____Stack.html</anchorfile>
      <anchor>a1d4a889cb100e146d6906e2db23018ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Stack</type>
      <name>stack</name>
      <anchorfile>struct____Stack.html</anchorfile>
      <anchor>aa799f9621bf922bd60dfd67d98d2d1b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ABGR8</name>
    <filename>structABGR8.html</filename>
    <member kind="variable">
      <type>union ABGR8::@16</type>
      <name>@17</name>
      <anchorfile>structABGR8.html</anchorfile>
      <anchor>ae3ed40602bc02d545096c86197313b51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct ABGR8::@16::@18</type>
      <name>@19</name>
      <anchorfile>unionABGR8_1_1@16.html</anchorfile>
      <anchor>ae86f59833c60e33f29c81033159133ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>a</name>
      <anchorfile>structABGR8_1_1@16_1_1@18.html</anchorfile>
      <anchor>a24420a9beaac7cee08b5e255a4c29db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>b</name>
      <anchorfile>structABGR8_1_1@16_1_1@18.html</anchorfile>
      <anchor>a41cede1b4c0d05cff170ad5761f70964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>g</name>
      <anchorfile>structABGR8_1_1@16_1_1@18.html</anchorfile>
      <anchor>a83576af39a9f289a28c1263d61073508</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>r</name>
      <anchorfile>structABGR8_1_1@16_1_1@18.html</anchorfile>
      <anchor>afd7b1ea9ff115205b65e0bffc92946ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>c_array&lt; unsigned char, 4 &gt;</type>
      <name>c</name>
      <anchorfile>unionABGR8_1_1@16.html</anchorfile>
      <anchor>a8f7c36c1ce1af1467e4303cd627395ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>i</name>
      <anchorfile>unionABGR8_1_1@16.html</anchorfile>
      <anchor>ac8936188af0c1d2f8b9d0cd25fde43b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Arg_Details</name>
    <filename>structArg__Details.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structArg__Details.html</anchorfile>
      <anchor>a5ac083a645d964373f022d03df4849c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Arg_Kind</type>
      <name>kind</name>
      <anchorfile>structArg__Details.html</anchorfile>
      <anchor>a20c9f697eec63bf80fbe0f7acc689ca4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Arg_Type</type>
      <name>type</name>
      <anchorfile>structArg__Details.html</anchorfile>
      <anchor>a7ffb2ec30184aa840b099d7bdb59a767</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iterate</name>
      <anchorfile>structArg__Details.html</anchorfile>
      <anchor>a1f2e6e38b10bb27af26ec65d5a356876</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>synonym</name>
      <anchorfile>structArg__Details.html</anchorfile>
      <anchor>ae90d9d9f1915f239018b35832e708716</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>has_default</name>
      <anchorfile>structArg__Details.html</anchorfile>
      <anchor>aef21ef68f4533089128012fa5ed3b712</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Arg_Value</type>
      <name>defval</name>
      <anchorfile>structArg__Details.html</anchorfile>
      <anchor>a9d0f8a7ec3017d265886b961a1eac131</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>set</name>
      <anchorfile>structArg__Details.html</anchorfile>
      <anchor>abc95fb2bad5b94ceca590f7dacd269b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Arg_Value</type>
      <name>value</name>
      <anchorfile>structArg__Details.html</anchorfile>
      <anchor>ae8538fb2adbfce651306fa89c8f92ce1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>extension</name>
      <anchorfile>structArg__Details.html</anchorfile>
      <anchor>a4c24f55ecaeec8bc1fcd18d9178de4d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>prefix</name>
      <anchorfile>structArg__Details.html</anchorfile>
      <anchor>aeb05416fe0e7c759a85279844c73c220</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Arg_Spec</name>
    <filename>structArg__Spec.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structArg__Spec.html</anchorfile>
      <anchor>a5ac083a645d964373f022d03df4849c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>type</name>
      <anchorfile>structArg__Spec.html</anchorfile>
      <anchor>a23506fc4821ab6d9671f3e6222591a96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>defval</name>
      <anchorfile>structArg__Spec.html</anchorfile>
      <anchor>a348a158f99c13192e51115697c0b925c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>Arg_Value</name>
    <filename>unionArg__Value.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>intval</name>
      <anchorfile>unionArg__Value.html</anchorfile>
      <anchor>aae6c7dd909af46bdec3c646fce9a100c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dblval</name>
      <anchorfile>unionArg__Value.html</anchorfile>
      <anchor>a5620b5da2913895085c9f78f8f1e1150</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>strval</name>
      <anchorfile>unionArg__Value.html</anchorfile>
      <anchor>a8353c360e3350b434249db67d2587b3a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>BasicSurfObj</name>
    <filename>structBasicSurfObj.html</filename>
    <member kind="function">
      <type></type>
      <name>BasicSurfObj</name>
      <anchorfile>structBasicSurfObj.html</anchorfile>
      <anchor>a0564709701b85fc27eea01518615b199</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>n</name>
      <anchorfile>structBasicSurfObj.html</anchorfile>
      <anchor>a9c700452dd607dc171a770f928e7497d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RGBA8</type>
      <name>color</name>
      <anchorfile>structBasicSurfObj.html</anchorfile>
      <anchor>a83e05da96e214646ab1c6403ecb15883</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>on</name>
      <anchorfile>structBasicSurfObj.html</anchorfile>
      <anchor>aaa928c9a62449f7946da1e32f66c70d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>selected</name>
      <anchorfile>structBasicSurfObj.html</anchorfile>
      <anchor>a9ee682957ef18956fbe33afe9b6222fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>name</name>
      <anchorfile>structBasicSurfObj.html</anchorfile>
      <anchor>abc29e461e01cc0c712944f8f47f91331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>comment</name>
      <anchorfile>structBasicSurfObj.html</anchorfile>
      <anchor>a2651941ce2706f4b08fef7dffdfe89cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>BGR8</name>
    <filename>structBGR8.html</filename>
    <member kind="variable">
      <type>union BGR8::@8</type>
      <name>@9</name>
      <anchorfile>structBGR8.html</anchorfile>
      <anchor>aa947ce1c61a281f36f5020fba6f1ec5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct BGR8::@8::@10</type>
      <name>@11</name>
      <anchorfile>unionBGR8_1_1@8.html</anchorfile>
      <anchor>a8d98773a16b7bb20482e36d0ed0958b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>b</name>
      <anchorfile>structBGR8_1_1@8_1_1@10.html</anchorfile>
      <anchor>a41cede1b4c0d05cff170ad5761f70964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>g</name>
      <anchorfile>structBGR8_1_1@8_1_1@10.html</anchorfile>
      <anchor>a83576af39a9f289a28c1263d61073508</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>r</name>
      <anchorfile>structBGR8_1_1@8_1_1@10.html</anchorfile>
      <anchor>afd7b1ea9ff115205b65e0bffc92946ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>c_array&lt; unsigned char, 3 &gt;</type>
      <name>c</name>
      <anchorfile>unionBGR8_1_1@8.html</anchorfile>
      <anchor>aa98be0508e964d86afe2b09204cb4687</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>BGRA8</name>
    <filename>structBGRA8.html</filename>
    <member kind="variable">
      <type>union BGRA8::@12</type>
      <name>@13</name>
      <anchorfile>structBGRA8.html</anchorfile>
      <anchor>a01c84fc1023201f359140aec71787af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct BGRA8::@12::@14</type>
      <name>@15</name>
      <anchorfile>unionBGRA8_1_1@12.html</anchorfile>
      <anchor>ad9d46d371a39ba9a7dd0f47ca2c77f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>b</name>
      <anchorfile>structBGRA8_1_1@12_1_1@14.html</anchorfile>
      <anchor>a41cede1b4c0d05cff170ad5761f70964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>g</name>
      <anchorfile>structBGRA8_1_1@12_1_1@14.html</anchorfile>
      <anchor>a83576af39a9f289a28c1263d61073508</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>r</name>
      <anchorfile>structBGRA8_1_1@12_1_1@14.html</anchorfile>
      <anchor>afd7b1ea9ff115205b65e0bffc92946ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>a</name>
      <anchorfile>structBGRA8_1_1@12_1_1@14.html</anchorfile>
      <anchor>a24420a9beaac7cee08b5e255a4c29db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>c_array&lt; unsigned char, 4 &gt;</type>
      <name>c</name>
      <anchorfile>unionBGRA8_1_1@12.html</anchorfile>
      <anchor>a8f7c36c1ce1af1467e4303cd627395ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>i</name>
      <anchorfile>unionBGRA8_1_1@12.html</anchorfile>
      <anchor>ac8936188af0c1d2f8b9d0cd25fde43b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>BoundingBox</name>
    <filename>structBoundingBox.html</filename>
    <member kind="function">
      <type></type>
      <name>BoundingBox</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>a1dea7b72431cc6891cefdb6020af2bd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoundingBox</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>abc1af0d6ade116ea20274feae8b10e57</anchor>
      <arglist>(float a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoundingBox</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>ada7cdb8475112d5c4bcd3560e86a6871</anchor>
      <arglist>(float x0, float y0, float z0, float x1, float y1, float z1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoundingBox</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>a55b154b4d32602392dddc1efe45632df</anchor>
      <arglist>(XYZ V0, XYZ V1)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Dx</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>a4b6f09edf48de223a95406a0e1871c41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Dy</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>afbe3c6308f13e080a9a8430a8c717ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Dz</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>a68a7647b7328743e2e872709009356ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Dmin</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>a6f18f37b4f3a5d152b1aa44d0238a788</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Dmax</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>a95fb7b0856f8fe9ca356536449be8591</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XYZ</type>
      <name>V0</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>a7999f8b51ba99b97610990936544bf52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XYZ</type>
      <name>V1</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>a1d3ee8db03dff1f970372ba85ac32b47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XYZ</type>
      <name>Vabsmin</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>a854fbd5934378ce454eb38dc7ae974d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XYZ</type>
      <name>Vabsmax</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>a4acec1df60497ab7b6a0ae1b70608d6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNegtive</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>ab8c6ad5cd8471c460d33021256a25328</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInner</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>a3d32d3e8b05ece21126a7ae9d6259ecf</anchor>
      <arglist>(XYZ V, float d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clamp</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>a5f0f880342f0454fc81623352c58d8f3</anchor>
      <arglist>(XYZ &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expand</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>ad0f30a944eda5db77aee8cd24474bbdf</anchor>
      <arglist>(XYZ V)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expand</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>a8bdcaa7eabfc9207aea9a70971c678a3</anchor>
      <arglist>(BoundingBox B)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shift</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>a7b188c5f75c5d1e63edea08285051121</anchor>
      <arglist>(float x, float y, float z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shift</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>a26d5793a08dcda217be59bb37328451a</anchor>
      <arglist>(XYZ S)</arglist>
    </member>
    <member kind="variable">
      <type>union BoundingBox::@52</type>
      <name>@53</name>
      <anchorfile>structBoundingBox.html</anchorfile>
      <anchor>a50584034ab7d01345728a20b8906aa12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct BoundingBox::@52::@54</type>
      <name>@55</name>
      <anchorfile>unionBoundingBox_1_1@52.html</anchorfile>
      <anchor>a22588458ffb386662d4e876b791f4e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x0</name>
      <anchorfile>structBoundingBox_1_1@52_1_1@54.html</anchorfile>
      <anchor>a3c9556645d92e863376a4063a3ad7001</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y0</name>
      <anchorfile>structBoundingBox_1_1@52_1_1@54.html</anchorfile>
      <anchor>adf19b8ba42d497d3093c3a51b1a32cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z0</name>
      <anchorfile>structBoundingBox_1_1@52_1_1@54.html</anchorfile>
      <anchor>a222d5219ff5e9ca1aac14f19804de9f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x1</name>
      <anchorfile>structBoundingBox_1_1@52_1_1@54.html</anchorfile>
      <anchor>a3389d8b95846602e8f94cc15f41e48e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y1</name>
      <anchorfile>structBoundingBox_1_1@52_1_1@54.html</anchorfile>
      <anchor>a9fe80bf4738047a31d7c162807ed85f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z1</name>
      <anchorfile>structBoundingBox_1_1@52_1_1@54.html</anchorfile>
      <anchor>a7da4886c0a2e03b8bb9ed62eb20efb78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>box</name>
      <anchorfile>unionBoundingBox_1_1@52.html</anchorfile>
      <anchor>a259e9f613c8d8167278334d3daa190ca</anchor>
      <arglist>[6]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>c_array</name>
    <filename>classc__array.html</filename>
    <templarg>ELT</templarg>
    <templarg>SIZE</templarg>
    <member kind="typedef">
      <type>ELT</type>
      <name>value_type</name>
      <anchorfile>classc__array.html</anchorfile>
      <anchor>a70c169da506ff2f23ffbd4dcdfede79c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>size_type</name>
      <anchorfile>classc__array.html</anchorfile>
      <anchor>aafd1e3ba4133ad908bdbc99c4b356e5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>index_type</name>
      <anchorfile>classc__array.html</anchorfile>
      <anchor>aa511d4e3e646072967e8a42dc6c54194</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ELT *</type>
      <name>iterator</name>
      <anchorfile>classc__array.html</anchorfile>
      <anchor>a02d7c984db68f7a770a83d1bbca84ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ELT const *</type>
      <name>const_iterator</name>
      <anchorfile>classc__array.html</anchorfile>
      <anchor>ae991369bcc3ef8a4ae0633ae02e410f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ELT *</name>
      <anchorfile>classc__array.html</anchorfile>
      <anchor>a5ab8b4914e02d66ea171aefe3ab2675d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const ELT *</name>
      <anchorfile>classc__array.html</anchorfile>
      <anchor>af3e15c1448e04ce297fc51906e904b51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classc__array.html</anchorfile>
      <anchor>ad69bd11391be1a1dba5c8202259664f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classc__array.html</anchorfile>
      <anchor>aa4b02d4f1a8500fb07a551069060709f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classc__array.html</anchorfile>
      <anchor>acad38d52497a975bfb6f2f6acd76631f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classc__array.html</anchorfile>
      <anchor>a350132543d80a1c1e5be844e6d2878ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_type</type>
      <name>size</name>
      <anchorfile>classc__array.html</anchorfile>
      <anchor>ad42dfc34e0f0b8226a3df4add6d09ed8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CellAPO</name>
    <filename>structCellAPO.html</filename>
    <base>BasicSurfObj</base>
    <member kind="function">
      <type></type>
      <name>operator XYZ</name>
      <anchorfile>structCellAPO.html</anchorfile>
      <anchor>a54098fdd1867b37c8cc2c5745559e2c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellAPO</name>
      <anchorfile>structCellAPO.html</anchorfile>
      <anchor>a8082b6889246aef41e55a09342778961</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>structCellAPO.html</anchorfile>
      <anchor>ad0da36b2558901e21e7a30f6c227a45e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>structCellAPO.html</anchorfile>
      <anchor>aa4f0d3eebc3c443f9be81bf48561a217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>structCellAPO.html</anchorfile>
      <anchor>af73583b1e980b0aa03f9884812e9fd4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>intensity</name>
      <anchorfile>structCellAPO.html</anchorfile>
      <anchor>a2dfe87f3417747242e8f043dd4f3fb59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>sdev</name>
      <anchorfile>structCellAPO.html</anchorfile>
      <anchor>ae951a9fca46f36b3eba630ccfab91381</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>pixmax</name>
      <anchorfile>structCellAPO.html</anchorfile>
      <anchor>ae7ea8ff8f12e266e0dca18447e42a851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>mass</name>
      <anchorfile>structCellAPO.html</anchorfile>
      <anchor>a7b2fa2b4300edd7ec1c54209a6a20258</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>volsize</name>
      <anchorfile>structCellAPO.html</anchorfile>
      <anchor>ae150981e8fc4709d9cf8fcd673951dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>orderinfo</name>
      <anchorfile>structCellAPO.html</anchorfile>
      <anchor>a3d562a10b7f2aa7bb4e9611996ee919f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CurveTracePara</name>
    <filename>structCurveTracePara.html</filename>
    <member kind="function">
      <type></type>
      <name>CurveTracePara</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>a5730d7ccedd127fd1f136dfcf5cce80c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>image_force_weight</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>ab7b03161de9e6a93d7487066944453c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>grident_force_weight</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>a318abd7deaac5d1288b2d9ee206b8b28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>internal_force_weight</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>a5302ee7de149cb7ef79b65c27860414a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>internal_force2_weight</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>a3252aa7335ff3fd7a7343b27c639135f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>prior_force_weight</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>a5b904cbbb02b178bfdd4f1c559775c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>nloops</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>a4183328b4c18474580cd84d9c78749d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>channo</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>af803c13b16ba71039de51fc48be901e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n_points</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>a6ca44e06843e5766b44848f7f2f8427a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_adaptiveCtrlPoints</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>a7a0aca0a5513d169a7df122b655938e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_estRadii</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>af2629612fb5aa68eae71fb7fd795991f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_postMergeClosebyBranches</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>a7e47af17ad65ec4d2f6f99bb8e6290d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_post_trimming</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>a1fda17d3ed209ad5d6f7b13f9a272ce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_deformcurve</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>abafa4aa1590bff8a580e3169977537f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_3dcurve_width_from_xyonly</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>afdaa5bf709911435427b15f83eb5837e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sp_num_end_nodes</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>afcba3e534172aec6725e703bca9c74f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sp_graph_connect</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>a5f73d1de011a55e46b7d420e4109f8f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sp_graph_background</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>aa9943e7b21ddc6725e63e98a8ccbf5a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sp_graph_resolution_step</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>a0de04b97a4f6b0ab3d65751df80dba78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sp_downsample_step</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>ac726e2b014fd5fd6475787143d3682b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sp_smoothing_win_sz</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>a72d82621b1a162d75190b0d21ae7eada</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>imgTH</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>abcac3516348bc87069131aa2fccdbf17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>landmark_id_start</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>afdb0cd22b205135604373ae675d78a05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>landmark_id_end</name>
      <anchorfile>structCurveTracePara.html</anchorfile>
      <anchor>adb9ad390f2da4e77e4ba4b967e4edf5f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Image</name>
    <filename>structImage.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>kind</name>
      <anchorfile>structImage.html</anchorfile>
      <anchor>ab961f0bab26537f6671c9c1add6e6725</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>width</name>
      <anchorfile>structImage.html</anchorfile>
      <anchor>a2474a5474cbff19523a51eb1de01cda4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>height</name>
      <anchorfile>structImage.html</anchorfile>
      <anchor>ad12fc34ce789bce6c8a05d8a17138534</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8 *</type>
      <name>array</name>
      <anchorfile>structImage.html</anchorfile>
      <anchor>a8bc1a01282b9e73f8119aa340598d86c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Image2DSimple</name>
    <filename>classImage2DSimple.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>Image2DSimple</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a9c20d0d0d818282ce47409c8449181ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image2DSimple</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>aadf8af78a53db919e0a1651e6a02bb18</anchor>
      <arglist>(V3DLONG s0, V3DLONG s1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>allocateMemory</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a839ebda4fa13ba5dc851e620426810f1</anchor>
      <arglist>(V3DLONG s0, V3DLONG s1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Image2DSimple</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a19b354243631f84d715e037fcb11aec1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a1153e3a77aa46ed8f7683e71c60f4584</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T **</type>
      <name>getData2dHandle</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a52319099a3cddf13d09c672d9f68b2bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getData1dHandle</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a6af4ba8c47389b6d3cba7e8003fae653</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>getTotalElementNumber</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a5adf33c9d33248e92c5c443c6f47062a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>sz0</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a9947c8102f0f5d3da166dcf989be88f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>sz1</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a41b231a5eca1519dad9a13a5742beea5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>maxdimsz</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>ac6200963cc14f4c5ffe64cf26b517372</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>mindimsz</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a0e79fb63e0ff9eee056176b16aa9b014</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>bounadry_masking</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>af90f4f27f2fc8929ab34620577327cf8</anchor>
      <arglist>(V3DLONG margin, T tval)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a245edda849d9932f2f7f6dc7b84eb3ad</anchor>
      <arglist>(Image2DSimple&lt; Tnew &gt; *img0, V3DLONG d0m, V3DLONG d0M, V3DLONG d1m, V3DLONG d1M)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a0c4ad4e67a7467497660f1618d97829f</anchor>
      <arglist>(Image2DSimple&lt; Tnew &gt; *img0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>ae8387e253c7026e7f2c7355de0235252</anchor>
      <arglist>(Tnew **img0, V3DLONG img0sz0, V3DLONG img0sz1, V3DLONG d0m, V3DLONG d0M, V3DLONG d1m, V3DLONG d1M)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>plus</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>ab5a4afd01c4bc3e888aa42c71c7df1cf</anchor>
      <arglist>(Tnew a)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>plus</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>aaf7af67f9a36d6469ae6194ab6ec89f0</anchor>
      <arglist>(Image2DSimple&lt; Tnew &gt; *a)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>subtract</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>aeedb2b318ba906e71d08fc481336e4db</anchor>
      <arglist>(Image2DSimple&lt; Tnew &gt; *a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>time</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a9f9deee29d5e469405617541b27e15f3</anchor>
      <arglist>(Tnew a)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>sum</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a3ff0e4ff29b68c3e0c398727a0371df9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>min</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a8977ca8c87b00639da116d1441a878ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>max</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a63edd36c00e0027edd899384e6f168f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a50f141efe7be2ddc26a1525414956a63</anchor>
      <arglist>(Tnew **img0, V3DLONG img0sz0, V3DLONG img0sz1, T value, int flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>ac83845c39f1aef298c834c14b52f6fdc</anchor>
      <arglist>(Tnew a)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>plus_subimage</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>abdf115f307c58e21bbfa1bc844ed1aa1</anchor>
      <arglist>(Tnew **sa, V3DLONG d0, V3DLONG d1, V3DLONG s0m, V3DLONG s0M, V3DLONG s1m, V3DLONG s1M)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>subimage_plus</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a61926c4d55c23f37fb61617dd7ab5731</anchor>
      <arglist>(V3DLONG s0m, V3DLONG s0M, V3DLONG s1m, V3DLONG s1M, Tnew **sa, V3DLONG d0, V3DLONG d1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>subimage_plus_subimage</name>
      <anchorfile>classImage2DSimple.html</anchorfile>
      <anchor>a728320daf8afc739043b1662a0bb3e40</anchor>
      <arglist>(V3DLONG s0m, V3DLONG s0M, V3DLONG s1m, V3DLONG s1M, Tnew **sa, V3DLONG d0, V3DLONG d1, V3DLONG d0m, V3DLONG d0M, V3DLONG d1m, V3DLONG d1M)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Image4DProxy</name>
    <filename>classImage4DProxy.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Image4DProxy</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>a4aab3af0043461f4c80ffd520fb6b108</anchor>
      <arglist>(T *img)</arglist>
    </member>
    <member kind="function">
      <type>v3d_uint8 *</type>
      <name>at</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>aa056960f856281df8228b7f1d4199833</anchor>
      <arglist>(V3DLONG x, V3DLONG y, V3DLONG z, V3DLONG c)</arglist>
    </member>
    <member kind="function">
      <type>v3d_uint8 *</type>
      <name>begin</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>a91fcd5fa4d8ad978cad047a585372baa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>v3d_uint8 *</type>
      <name>end</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>a547a77c8687b98477e412c03a8d7f066</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_inner</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>a7b6d42eaf19be2385f77db2d43bc5680</anchor>
      <arglist>(V3DLONG x, V3DLONG y, V3DLONG z, V3DLONG c)</arglist>
    </member>
    <member kind="function">
      <type>v3d_uint8 *</type>
      <name>at_uint8</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>aa3474c6bb34e190b3ca2552c3946002a</anchor>
      <arglist>(V3DLONG x, V3DLONG y, V3DLONG z, V3DLONG c)</arglist>
    </member>
    <member kind="function">
      <type>v3d_uint16 *</type>
      <name>at_uint16</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>a653f11ca2990152f6cf2a6612e8454cc</anchor>
      <arglist>(V3DLONG x, V3DLONG y, V3DLONG z, V3DLONG c)</arglist>
    </member>
    <member kind="function">
      <type>v3d_float32 *</type>
      <name>at_float32</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>a1efb5ffdc30f4de96d607a28459cb48e</anchor>
      <arglist>(V3DLONG x, V3DLONG y, V3DLONG z, V3DLONG c)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>value_at</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>a6f8d4d7f86efb450c95627bd7bdc9880</anchor>
      <arglist>(V3DLONG x, V3DLONG y, V3DLONG z, V3DLONG c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_at</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>aba44cbf5ecd18a3448dfa70e000afc28</anchor>
      <arglist>(V3DLONG x, V3DLONG y, V3DLONG z, V3DLONG c, double v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_minmax</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>a8bb0291b674d6609f2051b1a2047f39f</anchor>
      <arglist>(double *p_vmin, double *p_vmax)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_minmax</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>a6aa54e29ee4d153c08e9d968e7e5a911</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>v3d_uint8</type>
      <name>value8bit_at</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>aa7c5f7836ad81a6cd2f703d1c24966fc</anchor>
      <arglist>(V3DLONG x, V3DLONG y, V3DLONG z, V3DLONG c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put8bit_fit_at</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>a63bc445323fe5e1a4687827d4d6e81eb</anchor>
      <arglist>(V3DLONG x, V3DLONG y, V3DLONG z, V3DLONG c, v3d_uint8 v)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>vmin</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>ae9c25c6f542032cb8515317f09b7ff68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>vmax</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>af42bff6db2ff71f0291c18bf1ca8e773</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>T *</type>
      <name>img0</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>ab5fe826f542d82620f6054c4bf356515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>v3d_uint8 *</type>
      <name>data_p</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>a598bf6e2eddd41c93836e82607b5cd3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>nbytes</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>af760a905bd8b050accac5d33f0ca9853</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>su</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>ad733ba7eeba8ca0a739c4b9843618791</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sx</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>aaf9a51aa7b903686660dd3fb37743580</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sy</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>ae9ad4f86a96281d5112096aab1ed5e25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sz</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>ac70e23d5f2c4d3cabc797036b662cf45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sc</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>a1edae5aec913b311173dba41e8fc74cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>stride_x</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>af0a0b847a5d3342535dded12eed49775</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>stride_y</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>a01ce2b707e23e884ccae4f710fa73552</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>stride_z</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>abcc661d3a76bafa7ad8869787270acd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>stride_c</name>
      <anchorfile>classImage4DProxy.html</anchorfile>
      <anchor>a6268730646b84cb6a665ca7aba70ac65</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Image4DSimple</name>
    <filename>classImage4DSimple.html</filename>
    <member kind="function">
      <type></type>
      <name>Image4DSimple</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>ae827a01017cf17c353f1373bc247cac5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Image4DSimple</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a36021e5f73358dd2114ed951b39e48ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>cleanExistData</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>aa953cec3bedb2ed305ede76cc2c80ccf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned char *</type>
      <name>getRawData</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>ac3ce8dfd0ed57b063e7f011d9456f757</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>getXDim</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>adb2f95269f8bf4fbe52e8620bf35ac64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>getYDim</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>aab11c6ac34ba20651b02fe66f4df2eb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>getZDim</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a05e682ba9ec14d9f3e67ec2b1db520ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>getCDim</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a66cd7e98d03824aad6036c891bb461bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>getTDim</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a14ef9029226029676e78c1be380302c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>getValidZSliceNum</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>aa2d9e20d735211b17a85c68c104ccfe1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>getPreValidZSliceNum</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a176a687964b80a099446a156b52f0595</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getError</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>ae83f018a31c7e1c520fa54aace87896e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ImagePixelType</type>
      <name>getDatatype</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a080dfb36796bdd9acea6fc5af17dde84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimePackType</type>
      <name>getTimePackType</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>aae203ae2558deb16aa6bf0ec5d2d2071</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>getTotalUnitNumber</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>aa9ca4c1054c7473b6087248d1a2e5e71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>getTotalUnitNumberPerPlane</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>ae89df0fbaffd1593a040cb91eb6c2e27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>getTotalUnitNumberPerChannel</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>ad4b415d15ea90b4fef530efd38a23451</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>getUnitBytes</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>af129037979bc95a2390d128abea7c14f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>getTotalBytes</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a0ee0ec2e554cd250cffcefee18318dad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned char *</type>
      <name>getRawDataAtChannel</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>aeb038a47b20b7f067f664aa3ee0a037b</anchor>
      <arglist>(V3DLONG cid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isSuccess</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>ad97f8b38888fd1c344a3a935c2d75ed7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>valid</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a20fe5d79265eec66d47eb44c991ca5c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRezX</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a659781a6caf3e4de54d90342b481f6b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRezY</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>afba3e5a08b5e0438044c252d3bbd6a3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRezZ</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a28bfd1a8a50a3dd2545f8215b3f99f38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOriginX</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a987b961914d9f29b502b2198f4dcc9b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOriginY</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a56e3a200b5d85235b86222be53c12c3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOriginZ</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>ac120780c312204b215d67ef88c90e1c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXDim</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a3b8eda289729d1581980d796f8996bb6</anchor>
      <arglist>(V3DLONG v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYDim</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a3d1ebca09d5cd5e5551467ce03a67bc7</anchor>
      <arglist>(V3DLONG v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZDim</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>ae1451ad9e5106d972d6152f6dfec452f</anchor>
      <arglist>(V3DLONG v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCDim</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a8e34bbf32dd10e0a9bfc800d13b13574</anchor>
      <arglist>(V3DLONG v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTDim</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a68f473ad4abab161dc62cd83c98c170d</anchor>
      <arglist>(V3DLONG v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setValidZSliceNum</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a3df4ffbd0830197ed609291d4901663d</anchor>
      <arglist>(V3DLONG v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPreValidZSliceNum</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a0cb4f02e45732029c14c70df4ac16bee</anchor>
      <arglist>(V3DLONG v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDatatype</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>aa5e2971c7ebd7f061d1262e1d830ffb4</anchor>
      <arglist>(ImagePixelType v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimePackType</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>ad22fbb0fdb0a67cbe5e468761cb9ded0</anchor>
      <arglist>(TimePackType v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setNewRawDataPointer</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a7f6729e4d1ecc80aef9ab3d94cb8c856</anchor>
      <arglist>(unsigned char *p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRawDataPointerToNull</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a0c2a6516632a1fa676c5b889cb149219</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRawDataAndSetPointerToNull</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a544ff870964ed60dd3e50e5010bff18d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRawDataPointer</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a28cb02debbe5c7eb6a32dd3fbba01972</anchor>
      <arglist>(unsigned char *p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setRezX</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>ace6bf448d749b53fe56a11632190701d</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setRezY</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a83f523eaa3d983d24184fa11dd02eb75</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setRezZ</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>abb297752f2e396ac999ce27bc69aaf64</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOriginX</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>ab6811fff301c51edd00d64864f2ff819</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOriginY</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a33bae1a5ad83cb19bd0d1fb83660dfc6</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOriginZ</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>ab62361246bb07a8d017916b6d0b305af</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCustomStructPointer</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>aca7ea292b81f306e3d273d556e383b25</anchor>
      <arglist>(void *a)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>getCustomStructPointer</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a85eb3e26fe2d10a22fa6238e7af6d5d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValidCustomStructPointer</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a47d294b7e154f9b1d23e716fed909ee2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setData</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a4544d343385914495e17472d1a5cf9b5</anchor>
      <arglist>(unsigned char *p, Image4DSimple *image)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setData</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>ab5c0fef235681339b0ab58dee0e3387c</anchor>
      <arglist>(unsigned char *p, V3DLONG s0, V3DLONG s1, V3DLONG s2, V3DLONG s3, ImagePixelType dt)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setFileName</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a99b3c4b2b2b117a6002e819e3d8bc92d</anchor>
      <arglist>(const char *myfile)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFileName</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a09ee81e40060d94bf70d03532fb7adb3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadImage</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a5c6775bc597f7fae483b881bfa91eff8</anchor>
      <arglist>(char filename[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadImage</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>ae25b41c4060e7f597bc6abe7088879dd</anchor>
      <arglist>(char filename[], bool b_useMylib)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveImage</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>adba372b3974cf44e82cafd5fdb1646bf</anchor>
      <arglist>(const char filename[])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createImage</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>ad901793c9369b6436c7f7d17dbb984a6</anchor>
      <arglist>(V3DLONG mysz0, V3DLONG mysz1, V3DLONG mysz2, V3DLONG mysz3, ImagePixelType mytype)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createBlankImage</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a5d77fd410ea8c9d405763dc8f89e963c</anchor>
      <arglist>(V3DLONG imgsz0, V3DLONG imgsz1, V3DLONG imgsz2, V3DLONG imgsz3, int imgdatatype)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameDataBuffer</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a434e793cc61a66868e92a55b8873b5e1</anchor>
      <arglist>(Image4DSimple *p)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setError</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a9efd9dd0917c2bb03b4591b132951305</anchor>
      <arglist>(int v)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned char *</type>
      <name>data1d</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a861bdf8de000562e7f299a275938c0e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>V3DLONG</type>
      <name>sz0</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>ac2a9e5100217140635c454d807678540</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>V3DLONG</type>
      <name>sz1</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a7a9b98449aab6df0b4c013670b93eceb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>V3DLONG</type>
      <name>sz2</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a9a20f8051014969283a208666884692b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>V3DLONG</type>
      <name>sz3</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>ab6cc4455290fa0cc8090ed58a7b276ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>V3DLONG</type>
      <name>sz_time</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a750786dcdeea766d9f8b7dd8ac27f18e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TimePackType</type>
      <name>timepacktype</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>ab2e94078944fabd555b23c30f8b37c05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ImagePixelType</type>
      <name>datatype</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a8ca84ed2ca29487dab9f124aae6817d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>imgSrcFile</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a832e398667f9c23438298d111fa63370</anchor>
      <arglist>[1024]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>b_error</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>aa276512b3e42f7015c08fc0a7ddab76d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>rez_x</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a11d310215b4166bee473ba6274986f29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>rez_y</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a8512aa5b9b9f9206dcca22f258008fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>rez_z</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a0bc0d62ccffaa151fde34e8f88476d08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>origin_x</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a548b2eb9913cba0bd991fac4bbd78c59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>origin_y</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a25c758bb7fe9269d5e6912d8c657682b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>origin_z</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a75b330bc9e194b9d24826fe347f8e953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>V3DLONG</type>
      <name>valid_zslicenum</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a8adc3934b9bbc25ad826e0100175e731</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>V3DLONG</type>
      <name>prevalid_zslicenum</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a32e0c5515d8b2ffe67866a45cf166240</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void *</type>
      <name>p_customStruct</name>
      <anchorfile>classImage4DSimple.html</anchorfile>
      <anchor>a9123fc6bb8170a6cb8efc132d68c84e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ImageMarker</name>
    <filename>structImageMarker.html</filename>
    <base>BasicSurfObj</base>
    <member kind="function">
      <type></type>
      <name>operator XYZ</name>
      <anchorfile>structImageMarker.html</anchorfile>
      <anchor>a54098fdd1867b37c8cc2c5745559e2c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageMarker</name>
      <anchorfile>structImageMarker.html</anchorfile>
      <anchor>a1a54da3f0802d9500eabef74704245e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>type</name>
      <anchorfile>structImageMarker.html</anchorfile>
      <anchor>ac765329451135abec74c45e1897abf26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>shape</name>
      <anchorfile>structImageMarker.html</anchorfile>
      <anchor>ab1a7e6f9587f8a51986ea12e6c121fa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>structImageMarker.html</anchorfile>
      <anchor>ad0da36b2558901e21e7a30f6c227a45e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>structImageMarker.html</anchorfile>
      <anchor>aa4f0d3eebc3c443f9be81bf48561a217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>structImageMarker.html</anchorfile>
      <anchor>af73583b1e980b0aa03f9884812e9fd4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>radius</name>
      <anchorfile>structImageMarker.html</anchorfile>
      <anchor>a5050a760c11da521cd4aee6336f6529f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LabelSurf</name>
    <filename>structLabelSurf.html</filename>
    <base>BasicSurfObj</base>
    <member kind="function">
      <type></type>
      <name>operator int</name>
      <anchorfile>structLabelSurf.html</anchorfile>
      <anchor>a6a6c0aaee2d785b48a1e57710ceb586b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LabelSurf</name>
      <anchorfile>structLabelSurf.html</anchorfile>
      <anchor>a5e64f06030e01c8f6b036ca67ffe2869</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>label</name>
      <anchorfile>structLabelSurf.html</anchorfile>
      <anchor>a512bd2c8e2a962b00a6a6926befc170c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>label2</name>
      <anchorfile>structLabelSurf.html</anchorfile>
      <anchor>a01060b83ba40fd9c5f2e0979de4bcb3f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LocationSimple</name>
    <filename>structLocationSimple.html</filename>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>a02fd73d861ef2e4aabb38c0c9ff82947</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LocationSimple</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>a195d9eefb79547bd2ea2a2f2f03e8700</anchor>
      <arglist>(int xx, int yy, int zz)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LocationSimple</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>aab7b4b7346095b8295428a20824d1876</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getCoord</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>aa551804e4dbfa6cf0aa720b75f8783f9</anchor>
      <arglist>(int &amp;xx, int &amp;yy, int &amp;zz)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getCoord</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>a472d19eb123406e51f213acd886c77ad</anchor>
      <arglist>(float &amp;xx, float &amp;yy, float &amp;zz)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPixVal</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>a1bdb95fb223ebd1b8232bed93eeca140</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAve</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>a9d91421a3647bf785f893d64743b5921</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSdev</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>a20b043bfb254239a718c2b422692eaaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSkew</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>a2a3058dbe64ae8f4cf7837fcdcf95637</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCurt</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>afbec63648c8650613067c2ebc686f10e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PxLocationUsefulness</type>
      <name>howUseful</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>a779c3ebbab383d6afb23ce19f82abfa2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>ad0da36b2558901e21e7a30f6c227a45e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>aa4f0d3eebc3c443f9be81bf48561a217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>af73583b1e980b0aa03f9884812e9fd4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>radius</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>a5050a760c11da521cd4aee6336f6529f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PxLocationUsefulness</type>
      <name>inputProperty</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>af1c546629bd4063a076406bd2cfc42c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PxLocationMarkerShape</type>
      <name>shape</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>aeede80a0b746f95eeca01ed1ec8d8538</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pixval</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>a4a78449bc07e25240670cae7fc993d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ave</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>a05d6156c9599760bf480f6a535f67985</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sdev</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>ac3a526e3640e75b9e4b32b086df42378</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>skew</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>a55572497531189510f798846283aec74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>curt</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>adac5bc48064d0b034a6974593dc000b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>size</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>aba3c5d750d5dbd6e86c11ecaca62885e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mass</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>a244bf42c46054cf1113be44d55f2156d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pixmax</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>ab127591893e185aa7b3b71d9b08e5d47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ev_pc1</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>aafc2511845e0ab34c9403c92e920d32d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ev_pc2</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>ac216abc637bddc43a29b03120fcc7ebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ev_pc3</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>a5d0b2eb010947d79366fba983104c5d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>name</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>a8ccf841cb59e451791bcb2e1ac4f1edc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>comments</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>ab48a6b2c07eedf0293ac6571a880c979</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>category</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>a60863e080514b398bce285b4d087dcf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RGBA8</type>
      <name>color</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>a83e05da96e214646ab1c6403ecb15883</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>on</name>
      <anchorfile>structLocationSimple.html</anchorfile>
      <anchor>aaa928c9a62449f7946da1e32f66c70d2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NeuronSWC</name>
    <filename>structNeuronSWC.html</filename>
    <base>BasicSurfObj</base>
    <member kind="function">
      <type></type>
      <name>operator XYZ</name>
      <anchorfile>structNeuronSWC.html</anchorfile>
      <anchor>a54098fdd1867b37c8cc2c5745559e2c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NeuronSWC</name>
      <anchorfile>structNeuronSWC.html</anchorfile>
      <anchor>a52aadb21d44e099f62cddb2920508c4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>type</name>
      <anchorfile>structNeuronSWC.html</anchorfile>
      <anchor>ac765329451135abec74c45e1897abf26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>structNeuronSWC.html</anchorfile>
      <anchor>ad0da36b2558901e21e7a30f6c227a45e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>structNeuronSWC.html</anchorfile>
      <anchor>aa4f0d3eebc3c443f9be81bf48561a217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>structNeuronSWC.html</anchorfile>
      <anchor>af73583b1e980b0aa03f9884812e9fd4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>r</name>
      <anchorfile>structNeuronSWC.html</anchorfile>
      <anchor>a4788d82c901b9367dd5c0daff8a7616b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>pn</name>
      <anchorfile>structNeuronSWC.html</anchorfile>
      <anchor>a0c08d7e9c7971c5451d7b35b9c25e04f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>seg_id</name>
      <anchorfile>structNeuronSWC.html</anchorfile>
      <anchor>aa4802a0bd6cc60d849c210411718963b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>nodeinseg_id</name>
      <anchorfile>structNeuronSWC.html</anchorfile>
      <anchor>ae1d79fbe5ebe63f466eaee54f9e80408</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NeuronTree</name>
    <filename>structNeuronTree.html</filename>
    <base>BasicSurfObj</base>
    <member kind="function">
      <type></type>
      <name>NeuronTree</name>
      <anchorfile>structNeuronTree.html</anchorfile>
      <anchor>af3525bb20db27e3f6248db3abdb95b05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>structNeuronTree.html</anchorfile>
      <anchor>aebfd5370811894a1a298114dc647c73e</anchor>
      <arglist>(const NeuronTree &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyGeometry</name>
      <anchorfile>structNeuronTree.html</anchorfile>
      <anchor>aecb44ef057d8a9de468dfb50a3ce76d9</anchor>
      <arglist>(const NeuronTree &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>projection</name>
      <anchorfile>structNeuronTree.html</anchorfile>
      <anchor>a52153425f8edda98386eb0aeb6d9ec70</anchor>
      <arglist>(int axiscode=3)</arglist>
    </member>
    <member kind="variable">
      <type>QList&lt; NeuronSWC &gt;</type>
      <name>listNeuron</name>
      <anchorfile>structNeuronTree.html</anchorfile>
      <anchor>aef119e5779b21cc98311b6727cff753e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QHash&lt; int, int &gt;</type>
      <name>hashNeuron</name>
      <anchorfile>structNeuronTree.html</anchorfile>
      <anchor>ab8ea6e7ce04081d6fd2e0523b3dafe51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>file</name>
      <anchorfile>structNeuronTree.html</anchorfile>
      <anchor>a0e09ef09634c9ff8c49d989b80771a34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>editable</name>
      <anchorfile>structNeuronTree.html</anchorfile>
      <anchor>a229e640c33ea53a9bc7babab14f19e2e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>P_ObjectFileType</name>
    <filename>structP__ObjectFileType.html</filename>
    <member kind="variable">
      <type>QStringList</type>
      <name>raw_image_file_list</name>
      <anchorfile>structP__ObjectFileType.html</anchorfile>
      <anchor>a3352596c0276e1acbc2e2a7b8bfeaf82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QStringList</type>
      <name>labelfield_image_file_list</name>
      <anchorfile>structP__ObjectFileType.html</anchorfile>
      <anchor>ab3823e5b35917bf7b6676d5161683dfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QStringList</type>
      <name>annotation_file_list</name>
      <anchorfile>structP__ObjectFileType.html</anchorfile>
      <anchor>afa26cb945297c1806dca889b2d0e4adf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QStringList</type>
      <name>swc_file_list</name>
      <anchorfile>structP__ObjectFileType.html</anchorfile>
      <anchor>a755d0ce3073ed09eebc2ea4b0630f691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QStringList</type>
      <name>pointcloud_file_list</name>
      <anchorfile>structP__ObjectFileType.html</anchorfile>
      <anchor>a25f7150115cb5d9dbc932aec69a27492</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QStringList</type>
      <name>surface_file_list</name>
      <anchorfile>structP__ObjectFileType.html</anchorfile>
      <anchor>a69cfae68f3417af7614e70dbf7bd479d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Pixel_Range</name>
    <filename>structPixel__Range.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>maxval</name>
      <anchorfile>structPixel__Range.html</anchorfile>
      <anchor>ab78d5bc0b5eb537373d2ae9db01011b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>minval</name>
      <anchorfile>structPixel__Range.html</anchorfile>
      <anchor>a271861b7d4422e3cddf03d604408cf3a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PtIndexAndParents</name>
    <filename>structPtIndexAndParents.html</filename>
    <member kind="function">
      <type></type>
      <name>PtIndexAndParents</name>
      <anchorfile>structPtIndexAndParents.html</anchorfile>
      <anchor>a077d03b556361753ffdab4569f16076e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PtIndexAndParents</name>
      <anchorfile>structPtIndexAndParents.html</anchorfile>
      <anchor>aa6f71a2d3ccda44be3dac2a76fea0e60</anchor>
      <arglist>(V3DLONG n, V3DLONG np)</arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>nodeInd</name>
      <anchorfile>structPtIndexAndParents.html</anchorfile>
      <anchor>a1554cdb99e711ed264f3821d1484aba4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>nodeParent</name>
      <anchorfile>structPtIndexAndParents.html</anchorfile>
      <anchor>a2b586ebdc508667793217917d034e8ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RGB16i</name>
    <filename>structRGB16i.html</filename>
    <member kind="variable">
      <type>union RGB16i::@20</type>
      <name>@21</name>
      <anchorfile>structRGB16i.html</anchorfile>
      <anchor>a97142e40bc91b1ffcdd3ba72c391e009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct RGB16i::@20::@22</type>
      <name>@23</name>
      <anchorfile>unionRGB16i_1_1@20.html</anchorfile>
      <anchor>ad4ae02150a234f55bd650d1d07f42bff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>r</name>
      <anchorfile>structRGB16i_1_1@20_1_1@22.html</anchorfile>
      <anchor>aabe7912b6160ad63616663e8d7c63839</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>g</name>
      <anchorfile>structRGB16i_1_1@20_1_1@22.html</anchorfile>
      <anchor>ac22ef9012585a39864a27c5d518b0198</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>b</name>
      <anchorfile>structRGB16i_1_1@20_1_1@22.html</anchorfile>
      <anchor>a14c92240a8c7badaaa4e18952e560053</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>c_array&lt; short, 3 &gt;</type>
      <name>c</name>
      <anchorfile>unionRGB16i_1_1@20.html</anchorfile>
      <anchor>a60ce1942934179c3998ef6ddd694a526</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RGB32f</name>
    <filename>structRGB32f.html</filename>
    <member kind="variable">
      <type>union RGB32f::@36</type>
      <name>@37</name>
      <anchorfile>structRGB32f.html</anchorfile>
      <anchor>a8b06dbacf5a2d233835ed9d28e98eacf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct RGB32f::@36::@38</type>
      <name>@39</name>
      <anchorfile>unionRGB32f_1_1@36.html</anchorfile>
      <anchor>a8e1d4d14f3d93dccd39b17822e459467</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>r</name>
      <anchorfile>structRGB32f_1_1@36_1_1@38.html</anchorfile>
      <anchor>a4788d82c901b9367dd5c0daff8a7616b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>g</name>
      <anchorfile>structRGB32f_1_1@36_1_1@38.html</anchorfile>
      <anchor>a8cf17d727651616de6f2b79ef32170cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>b</name>
      <anchorfile>structRGB32f_1_1@36_1_1@38.html</anchorfile>
      <anchor>a83fc1af92e29717b4513d121b0c72c7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>c_array&lt; float, 3 &gt;</type>
      <name>c</name>
      <anchorfile>unionRGB32f_1_1@36.html</anchorfile>
      <anchor>a598cee2ab82db2143fb60111fe1275e0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RGB32i</name>
    <filename>structRGB32i.html</filename>
    <member kind="variable">
      <type>union RGB32i::@28</type>
      <name>@29</name>
      <anchorfile>structRGB32i.html</anchorfile>
      <anchor>a062c6cbfc90c7aefa633f5755e59952c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct RGB32i::@28::@30</type>
      <name>@31</name>
      <anchorfile>unionRGB32i_1_1@28.html</anchorfile>
      <anchor>a4f93b93b41a44e08e673286cb67630cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>r</name>
      <anchorfile>structRGB32i_1_1@28_1_1@30.html</anchorfile>
      <anchor>acab531abaa74a7e664e3986f2522b33a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>g</name>
      <anchorfile>structRGB32i_1_1@28_1_1@30.html</anchorfile>
      <anchor>a71867e609034d4dbd6d0ad8d84540e59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>b</name>
      <anchorfile>structRGB32i_1_1@28_1_1@30.html</anchorfile>
      <anchor>a148e3876077787926724625411d6e7a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>c_array&lt; int, 3 &gt;</type>
      <name>c</name>
      <anchorfile>unionRGB32i_1_1@28.html</anchorfile>
      <anchor>a94c05975fa6f122363e3240c32e9c173</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RGB8</name>
    <filename>structRGB8.html</filename>
    <member kind="variable">
      <type>union RGB8::@0</type>
      <name>@1</name>
      <anchorfile>structRGB8.html</anchorfile>
      <anchor>a01ec596d78569da23f7f557e04201ffc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct RGB8::@0::@2</type>
      <name>@3</name>
      <anchorfile>unionRGB8_1_1@0.html</anchorfile>
      <anchor>a698e35ad47ed18d255f8db1d23e690bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>r</name>
      <anchorfile>structRGB8_1_1@0_1_1@2.html</anchorfile>
      <anchor>afd7b1ea9ff115205b65e0bffc92946ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>g</name>
      <anchorfile>structRGB8_1_1@0_1_1@2.html</anchorfile>
      <anchor>a83576af39a9f289a28c1263d61073508</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>b</name>
      <anchorfile>structRGB8_1_1@0_1_1@2.html</anchorfile>
      <anchor>a41cede1b4c0d05cff170ad5761f70964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>c_array&lt; unsigned char, 3 &gt;</type>
      <name>c</name>
      <anchorfile>unionRGB8_1_1@0.html</anchorfile>
      <anchor>aa98be0508e964d86afe2b09204cb4687</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RGBA16i</name>
    <filename>structRGBA16i.html</filename>
    <member kind="variable">
      <type>union RGBA16i::@24</type>
      <name>@25</name>
      <anchorfile>structRGBA16i.html</anchorfile>
      <anchor>a0a907c5dfcee9e2afe0300a1a0482672</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct RGBA16i::@24::@26</type>
      <name>@27</name>
      <anchorfile>unionRGBA16i_1_1@24.html</anchorfile>
      <anchor>af6f91fb9850b07c4d5aa421481c4ed60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>r</name>
      <anchorfile>structRGBA16i_1_1@24_1_1@26.html</anchorfile>
      <anchor>aabe7912b6160ad63616663e8d7c63839</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>g</name>
      <anchorfile>structRGBA16i_1_1@24_1_1@26.html</anchorfile>
      <anchor>ac22ef9012585a39864a27c5d518b0198</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>b</name>
      <anchorfile>structRGBA16i_1_1@24_1_1@26.html</anchorfile>
      <anchor>a14c92240a8c7badaaa4e18952e560053</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>a</name>
      <anchorfile>structRGBA16i_1_1@24_1_1@26.html</anchorfile>
      <anchor>ab42212814337a360064b4f8d17d98412</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>c_array&lt; short, 4 &gt;</type>
      <name>c</name>
      <anchorfile>unionRGBA16i_1_1@24.html</anchorfile>
      <anchor>a8fc7058595a5427257722842f24fbfce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RGBA32f</name>
    <filename>structRGBA32f.html</filename>
    <member kind="variable">
      <type>union RGBA32f::@40</type>
      <name>@41</name>
      <anchorfile>structRGBA32f.html</anchorfile>
      <anchor>a96bd0d9f43bfd272247539473d1c4b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct RGBA32f::@40::@42</type>
      <name>@43</name>
      <anchorfile>unionRGBA32f_1_1@40.html</anchorfile>
      <anchor>adfb4d9450fee4408d65e48bc41a521bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>r</name>
      <anchorfile>structRGBA32f_1_1@40_1_1@42.html</anchorfile>
      <anchor>a4788d82c901b9367dd5c0daff8a7616b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>g</name>
      <anchorfile>structRGBA32f_1_1@40_1_1@42.html</anchorfile>
      <anchor>a8cf17d727651616de6f2b79ef32170cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>b</name>
      <anchorfile>structRGBA32f_1_1@40_1_1@42.html</anchorfile>
      <anchor>a83fc1af92e29717b4513d121b0c72c7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>a</name>
      <anchorfile>structRGBA32f_1_1@40_1_1@42.html</anchorfile>
      <anchor>a4aec1a5be9d9a4a394a2e49e9744286e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>c_array&lt; float, 4 &gt;</type>
      <name>c</name>
      <anchorfile>unionRGBA32f_1_1@40.html</anchorfile>
      <anchor>a283b188928aee020a0f3a805386ccdc0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RGBA32i</name>
    <filename>structRGBA32i.html</filename>
    <member kind="variable">
      <type>union RGBA32i::@32</type>
      <name>@33</name>
      <anchorfile>structRGBA32i.html</anchorfile>
      <anchor>ad65818fe831cb5e490bf7e55c79560f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct RGBA32i::@32::@34</type>
      <name>@35</name>
      <anchorfile>unionRGBA32i_1_1@32.html</anchorfile>
      <anchor>a50bacdcb259bbc7d8a937753accfd1c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>r</name>
      <anchorfile>structRGBA32i_1_1@32_1_1@34.html</anchorfile>
      <anchor>acab531abaa74a7e664e3986f2522b33a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>g</name>
      <anchorfile>structRGBA32i_1_1@32_1_1@34.html</anchorfile>
      <anchor>a71867e609034d4dbd6d0ad8d84540e59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>b</name>
      <anchorfile>structRGBA32i_1_1@32_1_1@34.html</anchorfile>
      <anchor>a148e3876077787926724625411d6e7a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>a</name>
      <anchorfile>structRGBA32i_1_1@32_1_1@34.html</anchorfile>
      <anchor>aa4c2a5552e9bc49b1816ff532f558c74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>c_array&lt; int, 4 &gt;</type>
      <name>c</name>
      <anchorfile>unionRGBA32i_1_1@32.html</anchorfile>
      <anchor>a9791dcb58ba415a1312628b1929dbd89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RGBA8</name>
    <filename>structRGBA8.html</filename>
    <member kind="variable">
      <type>union RGBA8::@4</type>
      <name>@5</name>
      <anchorfile>structRGBA8.html</anchorfile>
      <anchor>addb27fe90336fd24a71d08bc9abb1bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct RGBA8::@4::@6</type>
      <name>@7</name>
      <anchorfile>unionRGBA8_1_1@4.html</anchorfile>
      <anchor>a449c5c5ccdc75b194291fd42b3954003</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>r</name>
      <anchorfile>structRGBA8_1_1@4_1_1@6.html</anchorfile>
      <anchor>afd7b1ea9ff115205b65e0bffc92946ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>g</name>
      <anchorfile>structRGBA8_1_1@4_1_1@6.html</anchorfile>
      <anchor>a83576af39a9f289a28c1263d61073508</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>b</name>
      <anchorfile>structRGBA8_1_1@4_1_1@6.html</anchorfile>
      <anchor>a41cede1b4c0d05cff170ad5761f70964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>a</name>
      <anchorfile>structRGBA8_1_1@4_1_1@6.html</anchorfile>
      <anchor>a24420a9beaac7cee08b5e255a4c29db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>c_array&lt; unsigned char, 4 &gt;</type>
      <name>c</name>
      <anchorfile>unionRGBA8_1_1@4.html</anchorfile>
      <anchor>a8f7c36c1ce1af1467e4303cd627395ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>i</name>
      <anchorfile>unionRGBA8_1_1@4.html</anchorfile>
      <anchor>ac8936188af0c1d2f8b9d0cd25fde43b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Size2D</name>
    <filename>classSize2D.html</filename>
    <member kind="function">
      <type></type>
      <name>Size2D</name>
      <anchorfile>classSize2D.html</anchorfile>
      <anchor>a44efe216ab2b960ea89f2dea7227f2f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Size2D</name>
      <anchorfile>classSize2D.html</anchorfile>
      <anchor>a33f79d37a122d07d9cb53aecbd207de3</anchor>
      <arglist>(V3DLONG s0, V3DLONG s1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Size2D</name>
      <anchorfile>classSize2D.html</anchorfile>
      <anchor>ad393e9d0bc4468ce47df1fcea9ffbdaf</anchor>
      <arglist>(V3DLONG *s, V3DLONG len=2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Size2D</name>
      <anchorfile>classSize2D.html</anchorfile>
      <anchor>a63d6f75786a4dce2e5a78ff057e9ac94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>classSize2D.html</anchorfile>
      <anchor>a1153e3a77aa46ed8f7683e71c60f4584</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sz0</name>
      <anchorfile>classSize2D.html</anchorfile>
      <anchor>ac2a9e5100217140635c454d807678540</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sz1</name>
      <anchorfile>classSize2D.html</anchorfile>
      <anchor>a7a9b98449aab6df0b4c013670b93eceb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Size3D</name>
    <filename>classSize3D.html</filename>
    <member kind="function">
      <type></type>
      <name>Size3D</name>
      <anchorfile>classSize3D.html</anchorfile>
      <anchor>a68b939bc19392042ec5282bf453c54f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Size3D</name>
      <anchorfile>classSize3D.html</anchorfile>
      <anchor>a0faf97a3997e76e54fb9b5832efe0328</anchor>
      <arglist>(V3DLONG s0, V3DLONG s1, V3DLONG s2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Size3D</name>
      <anchorfile>classSize3D.html</anchorfile>
      <anchor>a6ae63d1aa28970f96f9355ff612571d5</anchor>
      <arglist>(V3DLONG *s, V3DLONG len=3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Size3D</name>
      <anchorfile>classSize3D.html</anchorfile>
      <anchor>a0baeaef894ed00111fe88ae094374ecd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>classSize3D.html</anchorfile>
      <anchor>a1153e3a77aa46ed8f7683e71c60f4584</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sz0</name>
      <anchorfile>classSize3D.html</anchorfile>
      <anchor>ac2a9e5100217140635c454d807678540</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sz1</name>
      <anchorfile>classSize3D.html</anchorfile>
      <anchor>a7a9b98449aab6df0b4c013670b93eceb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sz2</name>
      <anchorfile>classSize3D.html</anchorfile>
      <anchor>a9a20f8051014969283a208666884692b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Size4D</name>
    <filename>classSize4D.html</filename>
    <member kind="function">
      <type></type>
      <name>Size4D</name>
      <anchorfile>classSize4D.html</anchorfile>
      <anchor>acc06b71f0c469b7d4b657b0b481d0946</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Size4D</name>
      <anchorfile>classSize4D.html</anchorfile>
      <anchor>a968a8e46d0f713d5b6ab29e4496c298b</anchor>
      <arglist>(V3DLONG s0, V3DLONG s1, V3DLONG s2, V3DLONG s3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Size4D</name>
      <anchorfile>classSize4D.html</anchorfile>
      <anchor>a3d649bc44ee30cf611ceaa4654f145e4</anchor>
      <arglist>(V3DLONG *s, V3DLONG len=4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Size4D</name>
      <anchorfile>classSize4D.html</anchorfile>
      <anchor>ad1c6076735df9fc69e9cc9c356fbd84b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>classSize4D.html</anchorfile>
      <anchor>a1153e3a77aa46ed8f7683e71c60f4584</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sz0</name>
      <anchorfile>classSize4D.html</anchorfile>
      <anchor>ac2a9e5100217140635c454d807678540</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sz1</name>
      <anchorfile>classSize4D.html</anchorfile>
      <anchor>a7a9b98449aab6df0b4c013670b93eceb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sz2</name>
      <anchorfile>classSize4D.html</anchorfile>
      <anchor>a9a20f8051014969283a208666884692b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sz3</name>
      <anchorfile>classSize4D.html</anchorfile>
      <anchor>ab6cc4455290fa0cc8090ed58a7b276ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Size5D</name>
    <filename>classSize5D.html</filename>
    <member kind="function">
      <type></type>
      <name>Size5D</name>
      <anchorfile>classSize5D.html</anchorfile>
      <anchor>ae1a1468391a9023be27612afa4433b3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Size5D</name>
      <anchorfile>classSize5D.html</anchorfile>
      <anchor>a8ed4bcb32dbb90e21119787d2ff6a3e9</anchor>
      <arglist>(V3DLONG s0, V3DLONG s1, V3DLONG s2, V3DLONG s3, V3DLONG s4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Size5D</name>
      <anchorfile>classSize5D.html</anchorfile>
      <anchor>aa46aab001926ed11c0156605aefb7045</anchor>
      <arglist>(V3DLONG *s, V3DLONG len=4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Size5D</name>
      <anchorfile>classSize5D.html</anchorfile>
      <anchor>a7a10d96e8ad078bbba3f44111739cf8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>classSize5D.html</anchorfile>
      <anchor>a1153e3a77aa46ed8f7683e71c60f4584</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sz0</name>
      <anchorfile>classSize5D.html</anchorfile>
      <anchor>ac2a9e5100217140635c454d807678540</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sz1</name>
      <anchorfile>classSize5D.html</anchorfile>
      <anchor>a7a9b98449aab6df0b4c013670b93eceb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sz2</name>
      <anchorfile>classSize5D.html</anchorfile>
      <anchor>a9a20f8051014969283a208666884692b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sz3</name>
      <anchorfile>classSize5D.html</anchorfile>
      <anchor>ab6cc4455290fa0cc8090ed58a7b276ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sz4</name>
      <anchorfile>classSize5D.html</anchorfile>
      <anchor>ace7768f75043853f6ceeac9140920fc2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stack</name>
    <filename>structStack.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>kind</name>
      <anchorfile>structStack.html</anchorfile>
      <anchor>ab961f0bab26537f6671c9c1add6e6725</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>width</name>
      <anchorfile>structStack.html</anchorfile>
      <anchor>a2474a5474cbff19523a51eb1de01cda4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>height</name>
      <anchorfile>structStack.html</anchorfile>
      <anchor>ad12fc34ce789bce6c8a05d8a17138534</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>depth</name>
      <anchorfile>structStack.html</anchorfile>
      <anchor>acb5ba97551079e0b072c62c21d784ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8 *</type>
      <name>array</name>
      <anchorfile>structStack.html</anchorfile>
      <anchor>a8bc1a01282b9e73f8119aa340598d86c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Transaction</name>
    <filename>classTransaction.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Transaction</name>
      <anchorfile>classTransaction.html</anchorfile>
      <anchor>affa304b35545c4af9990d05b9d8ad433</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classTransaction.html</anchorfile>
      <anchor>a99b02345a8a15d3c5ea2844a2253f510</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reinit</name>
      <anchorfile>classTransaction.html</anchorfile>
      <anchor>a082817f8356089e23fa5eec07bed9c8c</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TransactionThread</name>
    <filename>classTransactionThread.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>transactionStarted</name>
      <anchorfile>classTransactionThread.html</anchorfile>
      <anchor>a0530b9b5c847c040cb502ae5d29f6364</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>allTransactionsDone</name>
      <anchorfile>classTransactionThread.html</anchorfile>
      <anchor>a5f9945ef7275dcaa0131dd14f41831e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransactionThread</name>
      <anchorfile>classTransactionThread.html</anchorfile>
      <anchor>ae4f34133a4a1d5911fba70949019d2a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TransactionThread</name>
      <anchorfile>classTransactionThread.html</anchorfile>
      <anchor>ac39eb3561d0143e6d1ea4c80c1732d78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTransaction</name>
      <anchorfile>classTransactionThread.html</anchorfile>
      <anchor>a615ee2245e8fa26d814d0b92ce5036b7</anchor>
      <arglist>(Transaction *transact)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>run</name>
      <anchorfile>classTransactionThread.html</anchorfile>
      <anchor>a13a43e6d814de94978c515cb084873b1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TriviewControl</name>
    <filename>classTriviewControl.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TriviewControl</name>
      <anchorfile>classTriviewControl.html</anchorfile>
      <anchor>a4ebfb382d2550016c9e299426a2038c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getFocusLocation</name>
      <anchorfile>classTriviewControl.html</anchorfile>
      <anchor>acc4320ea078120eb571261f8863b4d26</anchor>
      <arglist>(V3DLONG &amp;cx, V3DLONG &amp;cy, V3DLONG &amp;cz) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setFocusLocation</name>
      <anchorfile>classTriviewControl.html</anchorfile>
      <anchor>a8177073697c8bcf8b4281fc16d6da570</anchor>
      <arglist>(V3DLONG cx, V3DLONG cy, V3DLONG cz)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setFocusLocation2Center</name>
      <anchorfile>classTriviewControl.html</anchorfile>
      <anchor>a228a6b5e346e5cd1e3206a2ab039a6d3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateMinMax</name>
      <anchorfile>classTriviewControl.html</anchorfile>
      <anchor>a2c76c3f3fd0fa5eb8f29c63b675c8e86</anchor>
      <arglist>(V3DLONG nFrame)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getTriViewColorDispType</name>
      <anchorfile>classTriviewControl.html</anchorfile>
      <anchor>abcdf536c047668b46c6322a928814b5a</anchor>
      <arglist>(int &amp;mytype)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setTriViewColorDispType</name>
      <anchorfile>classTriviewControl.html</anchorfile>
      <anchor>ace741c7a9f8a70a9aac9ae5b95742fb6</anchor>
      <arglist>(int mytype)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void *</type>
      <name>getCustomStructPointer</name>
      <anchorfile>classTriviewControl.html</anchorfile>
      <anchor>a87a2e4793986e062aa583d9f68064e72</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setCustomStructPointer</name>
      <anchorfile>classTriviewControl.html</anchorfile>
      <anchor>abd9b7161b7934f9041b9d9bac16336ca</anchor>
      <arglist>(void *a)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual V3DLONG</type>
      <name>getValidZslice</name>
      <anchorfile>classTriviewControl.html</anchorfile>
      <anchor>a69bfd55ceb716f32a6d59179a2017334</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setValidZslice</name>
      <anchorfile>classTriviewControl.html</anchorfile>
      <anchor>ada6a8297f02e368ba59e8f044262186f</anchor>
      <arglist>(V3DLONG curslice)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual V3DLONG</type>
      <name>getPreValidZslice</name>
      <anchorfile>classTriviewControl.html</anchorfile>
      <anchor>a42f45b85854f86237253292d1d72ebcb</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPreValidZslice</name>
      <anchorfile>classTriviewControl.html</anchorfile>
      <anchor>af134a1e1cd331119939fe0a8a912f574</anchor>
      <arglist>(V3DLONG preslice)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>trigger</name>
      <anchorfile>classTriviewControl.html</anchorfile>
      <anchor>a72e630dd617b05c20cf186e9ab917091</anchor>
      <arglist>(V3DLONG curslice)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>UpdateTVTransaction</name>
    <filename>classUpdateTVTransaction.html</filename>
    <base>Transaction</base>
    <member kind="function">
      <type></type>
      <name>UpdateTVTransaction</name>
      <anchorfile>classUpdateTVTransaction.html</anchorfile>
      <anchor>a0ec317500fce1fc022bd5446c5a4db93</anchor>
      <arglist>(TriviewControl *triviewControl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classUpdateTVTransaction.html</anchorfile>
      <anchor>ac5c54df7ed3b930268c8d7752c101725</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reinit</name>
      <anchorfile>classUpdateTVTransaction.html</anchorfile>
      <anchor>a8bf592c67d376edd20bf24a0028c9761</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>V3D_GlobalSetting</name>
    <filename>structV3D__GlobalSetting.html</filename>
    <member kind="function">
      <type></type>
      <name>V3D_GlobalSetting</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>a9abc749ad46eb97a45516619654b06ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_yaxis_up</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>adcf6e55392c488dcb83f15cfeb907e47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_autoConvert2_8bit</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>a2de6b8ca820ba146d503ef26b3ddca34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>default_rightshift_bits</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>ab6b507d16883b9496ee9e832ca2b8f21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_autoRescale16bitDisplay</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>a74988d46cd0682721481b1c0ba469a46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>default_lookglass_size</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>a04ce429a5091519f341e4bd7a3906ce1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>default_marker_radius</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>a2be5928dd52e2e0d8517342296e36c4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_UseMylibTiff</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>a0e9bfd7eab1ef02a3055d7edd2f7c8f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_autoOpenImg3DViewer</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>a62ba7957b53bb4d6fad9fa2040e4feb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_autoDispXYZAxes</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>acb2692214cead7a950e5b419052e75d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_autoDispBoundingBox</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>ab60f29964ff2dd55b1e291476977c426</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>marker_disp_amplifying_factor</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>a80071134c7b3ba1ca901f3bd22cd5491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_autoSWCLineMode</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>ab2d87d981b08ff091dc11667e9780506</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_autoVideoCardCompress</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>a8ed721611a63833f0f64583268143e53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_autoVideoCard3DTex</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>aebee00442cb55272c6a4edf4037f4053</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_autoVideoCardNPTTex</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>ac62779334975972ee2cd5918fef487e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>autoVideoCardStreamMode</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>a1f617d5640c5e2820a5c9cbc739c43c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>GPara_landmarkMatchingMethod</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>a86d753d7b1b344d29b3a99f4e1fe94e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>GPara_df_compute_method</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>abeac76b93c5840aae9afeac881f74139</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_3dcurve_autodeform</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>a7f0ace1d23f41758aa656521b735de75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_3dcurve_autowidth</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>a3dd366b02381fed7e6c7c30be5b49ba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_3dcurve_autoconnecttips</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>aaa9d7f25ea113d94d6566b4aadb74781</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_3dcurve_inertia</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>a48062ac84904a866fc7349395d4e7953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_3dcurve_width_from_xyonly</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>afdaa5bf709911435427b15f83eb5837e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iChannel_for_plugin</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>aa0e5e085f18f93b697588ae3ab2546ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_plugin_dispResInNewWindow</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>a519007b0e7fd893890a85c85884cc660</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_plugin_dispParameterDialog</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>a78ddca40e3895259135821f82a9db643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_plugin_outputImgRescale</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>af1867c28e87415fffbbffa87801f21b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>b_plugin_outputImgConvert2UINT8</name>
      <anchorfile>structV3D__GlobalSetting.html</anchorfile>
      <anchor>af491f924f3f0f573d9dee5b229e1c46c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>V3D_Image3DBasic</name>
    <filename>structV3D__Image3DBasic.html</filename>
    <member kind="function">
      <type></type>
      <name>V3D_Image3DBasic</name>
      <anchorfile>structV3D__Image3DBasic.html</anchorfile>
      <anchor>a2079e342827db145948abd7f85b3e8be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setData</name>
      <anchorfile>structV3D__Image3DBasic.html</anchorfile>
      <anchor>a455426adf9bbcb52ea0aac34fdf38a04</anchor>
      <arglist>(Image4DSimple *p, V3DLONG myid)</arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>data1d</name>
      <anchorfile>structV3D__Image3DBasic.html</anchorfile>
      <anchor>a861bdf8de000562e7f299a275938c0e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sz0</name>
      <anchorfile>structV3D__Image3DBasic.html</anchorfile>
      <anchor>ac2a9e5100217140635c454d807678540</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sz1</name>
      <anchorfile>structV3D__Image3DBasic.html</anchorfile>
      <anchor>a7a9b98449aab6df0b4c013670b93eceb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>sz2</name>
      <anchorfile>structV3D__Image3DBasic.html</anchorfile>
      <anchor>a9a20f8051014969283a208666884692b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ImagePixelType</type>
      <name>datatype</name>
      <anchorfile>structV3D__Image3DBasic.html</anchorfile>
      <anchor>a8ca84ed2ca29487dab9f124aae6817d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>cid</name>
      <anchorfile>structV3D__Image3DBasic.html</anchorfile>
      <anchor>aa6f9e937653faad04ac61df8f607a1b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>v3d_imaging_paras</name>
    <filename>structv3d__imaging__paras.html</filename>
    <member kind="variable">
      <type>Users brunsc svn v3d_cmake v3d_main basic_c_fun customary_structs v3d_imaging_para h QString</type>
      <name>OPS</name>
      <anchorfile>structv3d__imaging__paras.html</anchorfile>
      <anchor>ad3d703f946057a045d40444305e2d781</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Image4DSimple *</type>
      <name>imgp</name>
      <anchorfile>structv3d__imaging__paras.html</anchorfile>
      <anchor>a0295b8fdd556a3f7401ba65cc229aa12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>xs</name>
      <anchorfile>structv3d__imaging__paras.html</anchorfile>
      <anchor>afc5f27f5308c98d3f2d9a498eba50c38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>ys</name>
      <anchorfile>structv3d__imaging__paras.html</anchorfile>
      <anchor>a5425dd12b1d642e1bbd57c5d50e9c9eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>zs</name>
      <anchorfile>structv3d__imaging__paras.html</anchorfile>
      <anchor>a3b7c55894772cd0b907013ffb7a627e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>xe</name>
      <anchorfile>structv3d__imaging__paras.html</anchorfile>
      <anchor>a310ff1b25b51d699f785e3fbbe08ddbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>ye</name>
      <anchorfile>structv3d__imaging__paras.html</anchorfile>
      <anchor>a03a456654e18a375b624a34f41abefe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V3DLONG</type>
      <name>ze</name>
      <anchorfile>structv3d__imaging__paras.html</anchorfile>
      <anchor>a6636c0c1f6cae2b76ecd3b07d8a1e07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>xrez</name>
      <anchorfile>structv3d__imaging__paras.html</anchorfile>
      <anchor>a1d41c2f40d6469f2873dc897ef7e609c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>yrez</name>
      <anchorfile>structv3d__imaging__paras.html</anchorfile>
      <anchor>a596019b6eb22057722c1071f58355c1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>zrez</name>
      <anchorfile>structv3d__imaging__paras.html</anchorfile>
      <anchor>a25cd76f280860b2faf6162e41416d112</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LandmarkList</type>
      <name>list_landmarks</name>
      <anchorfile>structv3d__imaging__paras.html</anchorfile>
      <anchor>ad843ccc91be8dfeceb8a9f4a052b0596</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>v3d_multithreadimageio_paras</name>
    <filename>structv3d__multithreadimageio__paras.html</filename>
    <member kind="variable">
      <type>QString</type>
      <name>qOperation</name>
      <anchorfile>structv3d__multithreadimageio__paras.html</anchorfile>
      <anchor>a3a7a155411715f07a3e9f63f16f93bd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>qFilename</name>
      <anchorfile>structv3d__multithreadimageio__paras.html</anchorfile>
      <anchor>a35f4239509561b05dd6430e808a0816c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>V3DPluginArgItem</name>
    <filename>structV3DPluginArgItem.html</filename>
    <member kind="variable">
      <type>QString</type>
      <name>type</name>
      <anchorfile>structV3DPluginArgItem.html</anchorfile>
      <anchor>a8801db0cd597fc2471a1c16f359b45f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>p</name>
      <anchorfile>structV3DPluginArgItem.html</anchorfile>
      <anchor>a117104b82864d3b23ec174af6d392709</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>V3DPluginCallback</name>
    <filename>classV3DPluginCallback.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~V3DPluginCallback</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>a47bd70d2dc12b495f21c018b78bafa68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>callPluginFunc</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>a8a60fc5c14483906887cc004281a0fe6</anchor>
      <arglist>(const QString &amp;plugin_name, const QString &amp;func_name, const V3DPluginArgList &amp;input, V3DPluginArgList &amp;output)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual v3dhandleList</type>
      <name>getImageWindowList</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>a18f2f61ce45d6978987a5bc76c25ff5a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual v3dhandle</type>
      <name>currentImageWindow</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>a72c10370ab576317c1c05b67e4c2960e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual v3dhandle</type>
      <name>curHiddenSelectedWindow</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>af9bc8e0571747cae01b16fb1e2af77aa</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual v3dhandle</type>
      <name>newImageWindow</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>ac55437794570400a8f37182888340b9e</anchor>
      <arglist>(QString name=&quot;new_image&quot;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateImageWindow</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>a08918342ce3fbca82f01d2a5ba4dd1be</anchor>
      <arglist>(v3dhandle image_window)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>getImageName</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>a88ae30a87fb80fdc24804068d54067cf</anchor>
      <arglist>(v3dhandle image_window) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setImageName</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>acd073ac14588becc7069c12e2b4a70b9</anchor>
      <arglist>(v3dhandle image_window, QString name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Image4DSimple *</type>
      <name>getImage</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>af827b1990ece497ed82497af163e150c</anchor>
      <arglist>(v3dhandle image_window)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>setImage</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>ae455a3e5334adff2872623bc3517a464</anchor>
      <arglist>(v3dhandle image_window, Image4DSimple *image)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>setImageTest</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>aec32b047392bce1a07083d441e47aca9</anchor>
      <arglist>(v3dhandle image_window, Image4DSimple *image, unsigned char *a)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LandmarkList</type>
      <name>getLandmark</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>af253dbff0bee925dcf8a1062333f50c0</anchor>
      <arglist>(v3dhandle image_window)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>setLandmark</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>a950d6a92315d7bcf4fa665da83005a81</anchor>
      <arglist>(v3dhandle image_window, LandmarkList &amp;landmark_list)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ROIList</type>
      <name>getROI</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>a4edbf78a9906b156a1a11f4e910a3b52</anchor>
      <arglist>(v3dhandle image_window)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>setROI</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>a89544c9d470325d0c2bc32df6b5bfa66</anchor>
      <arglist>(v3dhandle image_window, ROIList &amp;roi_list)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NeuronTree</type>
      <name>getSWC</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>a08dfb78ccd4a791dc56a1257e16ee4cf</anchor>
      <arglist>(v3dhandle image_window)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>setSWC</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>ab776dc9829c2ae9458c8b0fb7341230d</anchor>
      <arglist>(v3dhandle image_window, NeuronTree &amp;nt)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual V3D_GlobalSetting</type>
      <name>getGlobalSetting</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>a53aadb1e47fc806789e64a1b1bbae2d7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>setGlobalSetting</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>a78d6737c58867b64d3d5f3a3d9ca3511</anchor>
      <arglist>(V3D_GlobalSetting &amp;gs)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>open3DWindow</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>a3d572e277f38d6f012472969f0f17a31</anchor>
      <arglist>(v3dhandle image_window)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>close3DWindow</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>ac6b4af75130d05c3afdf7edab21c7c96</anchor>
      <arglist>(v3dhandle image_window)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>openROI3DWindow</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>a609b27b96d890d5977986fd09d166fa6</anchor>
      <arglist>(v3dhandle image_window)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>closeROI3DWindow</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>a8936504c154b4bc8d029e244e1c89d93</anchor>
      <arglist>(v3dhandle image_window)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>pushObjectIn3DWindow</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>a4e996d0bb0ac13c28b1a4afa31e5d0f6</anchor>
      <arglist>(v3dhandle image_window)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>pushImageIn3DWindow</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>a8102ce5898ba67049d3a664aaadc7f84</anchor>
      <arglist>(v3dhandle image_window)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>pushTimepointIn3DWindow</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>aa1a4c585b7ee4cfc1e89d56476e1156a</anchor>
      <arglist>(v3dhandle image_window, int timepoint)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>screenShot3DWindow</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>aae31310419978dbd80e0fc381c03faf5</anchor>
      <arglist>(v3dhandle image_window, QString BMPfilename)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>screenShotROI3DWindow</name>
      <anchorfile>classV3DPluginCallback.html</anchorfile>
      <anchor>a04cedf43256345ef97083180cee46f6d</anchor>
      <arglist>(v3dhandle image_window, QString BMPfilename)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>V3DPluginCallback2</name>
    <filename>classV3DPluginCallback2.html</filename>
    <base>V3DPluginCallback</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~V3DPluginCallback2</name>
      <anchorfile>classV3DPluginCallback2.html</anchorfile>
      <anchor>a6d68be4ea29f37c933a3e801005bcd38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual View3DControl *</type>
      <name>getView3DControl</name>
      <anchorfile>classV3DPluginCallback2.html</anchorfile>
      <anchor>a2b83dc484303b7e6a3d6f48979ea42d1</anchor>
      <arglist>(v3dhandle image_window)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual View3DControl *</type>
      <name>getLocalView3DControl</name>
      <anchorfile>classV3DPluginCallback2.html</anchorfile>
      <anchor>ae4f99ecc8c5e6ee86bfadadaa8442903</anchor>
      <arglist>(v3dhandle image_window)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TriviewControl *</type>
      <name>getTriviewControl</name>
      <anchorfile>classV3DPluginCallback2.html</anchorfile>
      <anchor>abd54dce6a8899c10151366f92452f8a5</anchor>
      <arglist>(v3dhandle image_window)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>V3DPluginInterface</name>
    <filename>classV3DPluginInterface.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~V3DPluginInterface</name>
      <anchorfile>classV3DPluginInterface.html</anchorfile>
      <anchor>a079a0c12c6768744abf8912715ac24cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QStringList</type>
      <name>menulist</name>
      <anchorfile>classV3DPluginInterface.html</anchorfile>
      <anchor>a22f62f227004e4e25944cf28f8feb449</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>domenu</name>
      <anchorfile>classV3DPluginInterface.html</anchorfile>
      <anchor>ab3751d9375166fa887ed54fd3ebba5d2</anchor>
      <arglist>(const QString &amp;menu_name, V3DPluginCallback &amp;v3d, QWidget *parent)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QStringList</type>
      <name>funclist</name>
      <anchorfile>classV3DPluginInterface.html</anchorfile>
      <anchor>a7662bfb4e0be647b397a83f1d0eac24d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>dofunc</name>
      <anchorfile>classV3DPluginInterface.html</anchorfile>
      <anchor>afa643961c4e8a1de6dd3b75cc404f2df</anchor>
      <arglist>(const QString &amp;func_name, const V3DPluginArgList &amp;input, V3DPluginArgList &amp;output, QWidget *parent)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>V3DPluginInterface2</name>
    <filename>classV3DPluginInterface2.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~V3DPluginInterface2</name>
      <anchorfile>classV3DPluginInterface2.html</anchorfile>
      <anchor>acff3d8c1cef9dd0dddf16f7f06a51ca0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QStringList</type>
      <name>menulist</name>
      <anchorfile>classV3DPluginInterface2.html</anchorfile>
      <anchor>a22f62f227004e4e25944cf28f8feb449</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>domenu</name>
      <anchorfile>classV3DPluginInterface2.html</anchorfile>
      <anchor>a85be29cc61976730e4cb832b7740c485</anchor>
      <arglist>(const QString &amp;menu_name, V3DPluginCallback2 &amp;v3d, QWidget *parent)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QStringList</type>
      <name>funclist</name>
      <anchorfile>classV3DPluginInterface2.html</anchorfile>
      <anchor>a7662bfb4e0be647b397a83f1d0eac24d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>dofunc</name>
      <anchorfile>classV3DPluginInterface2.html</anchorfile>
      <anchor>ae61d268a10b1a56379e67db2c15fffcf</anchor>
      <arglist>(const QString &amp;func_name, const V3DPluginArgList &amp;input, V3DPluginArgList &amp;output, V3DPluginCallback2 &amp;v3d, QWidget *parent)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>V3DPluginInterface2_1</name>
    <filename>classV3DPluginInterface2__1.html</filename>
    <base>V3DPluginInterface2</base>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>getPluginVersion</name>
      <anchorfile>classV3DPluginInterface2__1.html</anchorfile>
      <anchor>a44cf69d29f96aac5904170d81e932492</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>V3DSingleImageInterface</name>
    <filename>classV3DSingleImageInterface.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~V3DSingleImageInterface</name>
      <anchorfile>classV3DSingleImageInterface.html</anchorfile>
      <anchor>aeb9570d16f11222217e7b6a6d744320f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QStringList</type>
      <name>menulist</name>
      <anchorfile>classV3DSingleImageInterface.html</anchorfile>
      <anchor>a22f62f227004e4e25944cf28f8feb449</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>processImage</name>
      <anchorfile>classV3DSingleImageInterface.html</anchorfile>
      <anchor>a75c2ce8b237c7931385459aedeca33d9</anchor>
      <arglist>(const QString &amp;menu_name, Image4DSimple *image, QWidget *parent)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>V3DSingleImageInterface2_1</name>
    <filename>classV3DSingleImageInterface2__1.html</filename>
    <base>V3DSingleImageInterface</base>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>getPluginVersion</name>
      <anchorfile>classV3DSingleImageInterface2__1.html</anchorfile>
      <anchor>a44cf69d29f96aac5904170d81e932492</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector1DSimple</name>
    <filename>classVector1DSimple.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Vector1DSimple</name>
      <anchorfile>classVector1DSimple.html</anchorfile>
      <anchor>adbd46c88655e7df58f3b960ad901bd7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector1DSimple</name>
      <anchorfile>classVector1DSimple.html</anchorfile>
      <anchor>a597f5dcec6cfb2f9595aff24710b83b4</anchor>
      <arglist>(V3DLONG s0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Vector1DSimple</name>
      <anchorfile>classVector1DSimple.html</anchorfile>
      <anchor>a378497596c701385470a75e9adb67d9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>classVector1DSimple.html</anchorfile>
      <anchor>a1153e3a77aa46ed8f7683e71c60f4584</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getData1dHandle</name>
      <anchorfile>classVector1DSimple.html</anchorfile>
      <anchor>a6af4ba8c47389b6d3cba7e8003fae653</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>getTotalElementNumber</name>
      <anchorfile>classVector1DSimple.html</anchorfile>
      <anchor>a5adf33c9d33248e92c5c443c6f47062a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>sz0</name>
      <anchorfile>classVector1DSimple.html</anchorfile>
      <anchor>a9947c8102f0f5d3da166dcf989be88f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resize</name>
      <anchorfile>classVector1DSimple.html</anchorfile>
      <anchor>a3cb7c1a9341f57c46097c0af5b2c52ec</anchor>
      <arglist>(V3DLONG s0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>View3DControl</name>
    <filename>classView3DControl.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~View3DControl</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a772d594eacecf8c0732000d36c1948e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>renderMode</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>ae88aaab90bc8e52e6707c5733f54cbfe</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>dataDim1</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a8065d991d78edd25b942c613b30dbe75</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>dataDim2</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a1a05c3568dc7e01bb82078e1e62d3503</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>dataDim3</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a9977d714f516bd4518476b6b59d9cd88</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>dataDim4</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>acbb4e6d93befe3dcca05f4277e5bc15a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>dataDim5</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a3c8835ba514e625cd1fb760dbdd598f6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>xRot</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a465a297c325b2abe2ee3ec1909c909a3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>yRot</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>acc106867d7404f8644336fecfd39278b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>zRot</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a0d0f70f74117c022954ee2ae55c3070f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>zoom</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a74a4b579705a3bd1ba2d3106f189c999</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>xShift</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>ae3886bbf78f090f69591607eb8b49245</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>yShift</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a009d3c5d29b6fb70ddd759f8859bf41f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>zShift</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a488698ded221a4dd3ff068310b6e0e09</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isAbsoluteRot</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a82c82a0c9a2b82a076f73350c77c43f2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>xCut0</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a6f570414e3ae0699aedc393491708949</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>xCut1</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>ad5300b08d80250724d68b1da08804114</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>yCut0</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>aae11cab82e8975082b3ec14097915f96</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>yCut1</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a14a9a5f4e0ea385908bc03de2171f0c4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>zCut0</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a82b0ada156a83f4207a2e59142af2afc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>zCut1</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a87074b36420ca516a8b3e8ef44141890</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>frontCut</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>afb754302f3bfacbc7ed2cc34ab84607a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>xCS</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>ad2395e26168e777386a99f3a8a8e584e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>yCS</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>aa04f4f69bfe62dfa1dd69a1cf26bab0e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>zCS</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a59e55c57a5383f5bda152f10b23a2b35</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>channelR</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a2bfcb86d594e5825a98564e153e2a555</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>channelG</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>ab897dcda3b8873963b2c1ccb00da410b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>channelB</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a455e0e2388335bd5c8632e7ad4ac6bf4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setXCutLock</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a489067618f3122d487fbb1d15f151b16</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setYCutLock</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a6ee7d845e82572bd0efb6cb9f673eef8</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setZCutLock</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>abf342f1d3a71747592e912b9318daa75</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isVolCompress</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>ad090b2a18742ce6a2f7df439d21f275d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isShowBoundingBox</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>aaaed87d4c5531aca456661eeadcaeabd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isShowAxes</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a3f37f33b90d93feaef5dcece78110830</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>hideTool</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a839218a4cf2cb3ce7e44cc6462bd703e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>showTool</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a7e7ed199142463f62a00a2072ed4d13b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateTool</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>af4a36356d4dbf9bab33ebf5d6f5131e7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateControl</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>af1b50ab49a77d7eada902350209c17c1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>setVolumeTimePoint</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a51b631a67522215a5246cf62ce5874a9</anchor>
      <arglist>(int t)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>incVolumeTimePoint</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a9e9e51f8bf67e064d3b8dc3c9d2ffc30</anchor>
      <arglist>(float step)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setRenderMode_Mip</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a6bcb2f523d491c209d5616c7c42ac38b</anchor>
      <arglist>(bool b)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setRenderMode_Alpha</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>ae3a0c4b338bfbaa3ba754dd00e5cfeb5</anchor>
      <arglist>(bool b)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setRenderMode_Cs3d</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>aeb810baa971cab682a6af1b0d9193f0f</anchor>
      <arglist>(bool b)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setCSTransparent</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a224e5dd2b26ae94ec77d46696f81b8a9</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setThickness</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a7c1cab938ab17603b9243021560bed42</anchor>
      <arglist>(double)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setCurChannel</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>aad882f65f4b2b7b193a411de52ea1bca</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setChannelR</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a89e1a0c9eb380e5146f3e3ab7c54d123</anchor>
      <arglist>(bool b)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setChannelG</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>addd9dc62c9a80466f5a5e7464af82b60</anchor>
      <arglist>(bool b)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setChannelB</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>ab58567fe26c6f977ffee3747b52f0fe4</anchor>
      <arglist>(bool b)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVolCompress</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a2255472657f1b9abd628e197b8f41cd8</anchor>
      <arglist>(bool b)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>volumeColormapDialog</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>add736e41d4e0433c697c60fe9e4bd9d2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>surfaceSelectDialog</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a9832469ab7e3ff0939b6772b12dfefb2</anchor>
      <arglist>(int curTab=0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>surfaceSelectTab</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a3cb197976377a84ce890a79d5ac93147</anchor>
      <arglist>(int curTab=0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>surfaceDialogHide</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a89b2e74e32b4d8639e1caf8aff406362</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>annotationDialog</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>afb72b5dd0fcd2e242147c205b5334b9d</anchor>
      <arglist>(int dataClass, int surfaceType, int index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setXRotation</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>ab88266771ecf8806551da6c1b163e543</anchor>
      <arglist>(int angle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setYRotation</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a3f13904c985d863c96aa76208648fcfb</anchor>
      <arglist>(int angle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setZRotation</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a8df23c849e97b81533ba73cef3480f4c</anchor>
      <arglist>(int angle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetRotation</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a3b0c9b586d6a83872d248320ce556c18</anchor>
      <arglist>(bool b_emit=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>modelRotation</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a0e70354d28125ebb38f6d76f7ea7d947</anchor>
      <arglist>(int xRotStep, int yRotStep, int zRotStep)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>viewRotation</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>afb25e68b9a26ff67ed243c515880eac1</anchor>
      <arglist>(int xRotStep, int yRotStep, int zRotStep)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>absoluteRotPose</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a64ec0deeb51e02388ebe7eec2e8686f8</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doAbsoluteRot</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a53d028e9f4e43e8d8a935a3a768bc31e</anchor>
      <arglist>(int xRot, int yRot, int zRot)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>lookAlong</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a3bda6e5ac6f6a50fdfe3b505470ef93c</anchor>
      <arglist>(float xLook, float yLook, float zLook)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setZoom</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>ab9c023041ccc2f1e0cb34a9051f62b47</anchor>
      <arglist>(int r)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setXShift</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>adb9145d7123bebb9d883419f4b2f68f0</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setYShift</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a707abd5077c9ffd06d85e93d85c4cad4</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setZShift</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a83616bf0cb0b62f7ac806c1bbd9b1842</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetZoomShift</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a29eb674c54a45af253c1452b931e34d1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setXShift</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>acc52748e0a0fb728825788586c005aea</anchor>
      <arglist>(float s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setYShift</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>addb329231e99afc008e4888c2d4623ce</anchor>
      <arglist>(float s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setZShift</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>aa86a8ddd4fd017a8d09f2abb186d8bfa</anchor>
      <arglist>(float s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setZoom</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a8dae4e23261dff23c10273c9987cc02a</anchor>
      <arglist>(float r)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doAbsoluteRot</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a607c42785d8934ab36230299e090e9db</anchor>
      <arglist>(float xRot, float yRot, float zRot)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setXRotation</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a5a00d7c8970dcc30f606b2eefc17c4f8</anchor>
      <arglist>(float angle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setYRotation</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a07d6a0026fbf4d6115ee5a1271cd966f</anchor>
      <arglist>(float angle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setZRotation</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>afef21c8c7a2aec93e32f87d7dad1b893</anchor>
      <arglist>(float angle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>enableFrontSlice</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a0e8d74d3331ae14bf25fcd0bf8a577a3</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>enableXSlice</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a18d86ea6b5b6eae08599dc79a815bd84</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>enableYSlice</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>af1126523ec3503313f4c8b6d22379624</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>enableZSlice</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a92eb40a6055698012232b53d45c5092c</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setFrontCut</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a80061cc7e577c59ad50514934ae4113d</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setXCut0</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a596111588d0811a6c21c7b3235d8ea84</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setYCut0</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a6983b7ab4e9838316d91a8a580621567</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setZCut0</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a238d7a0a449e50fe745b89fc85dd1821</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setXCut1</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>ace9382f3f194f2d62d9009f3747776cf</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setYCut1</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>ad9acf882c6ab73731e6f0d120734fe63</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setZCut1</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>afc6245b5c5721804cc9a34f3e0db1973</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setXCS</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>af08496e4770bda321a7415b527a591fb</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setYCS</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>af9ac115ad0d2507ff76f569ca23cb683</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setZCS</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>adf396b9fe9306bc1cf769a45f7dd8ad6</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setXClip0</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a54692c09904bf49dc8682f1a86f98aa5</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setYClip0</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a62e5cf154c91018f4e0af7482c4584ac</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setZClip0</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>aec2cf616d5e7ebdc7c1373fc8b9bc9b4</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setXClip1</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a5dc2eebf03678db45f9d61f7433eee83</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setYClip1</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a1a8cf370f7688ddd895094e65348b594</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setZClip1</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a578a308f2a6cc12030c159ea1050c575</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>enableShowAxes</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>aa426c58bad48e376d7f87eeaa0ebba0e</anchor>
      <arglist>(bool b)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>enableShowBoundingBox</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>aa8e60179ca9067c54f41846c113a0ffd</anchor>
      <arglist>(bool b)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>enableOrthoView</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>af59602f97be2d8f0d0490d8816807d8b</anchor>
      <arglist>(bool b)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setBackgroundColor</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a4e5ced9b0a835cb0aea03e7bda939cc1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setBright</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a99925a2a9ff511f2ead088b6dc7977f6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setShowMarkers</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a6c8b96edb8d3b5e9883e41fa10b05619</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setShowSurfObjects</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a7796263fe876d3c0d3ffb1a70cc3acf6</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>enableMarkerLabel</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a667c24df91fd9a721ff27901c2ab38bb</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMarkerSize</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a6e76f879c1addd34814474d335dda743</anchor>
      <arglist>(int s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>enableSurfStretch</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>ab97d643bfd18f865a736278ac28d1c69</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>toggleCellName</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a5921ef65923747614a8ba5480162d20b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>createSurfCurrentR</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a23f985f952e8d5c1a1ee1840ce8d8e3d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>createSurfCurrentG</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a573af5f9c722ace0e24ab6474bab6ac4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>createSurfCurrentB</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a6c7905d584c03bec8fe581f0a5768ff7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>loadObjectFromFile</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>af0aaf93b20e83cf1d4c4b1d5b391b49c</anchor>
      <arglist>(QString url=&quot;&quot;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>loadObjectListFromFile</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a4388bab962b40ed2981b083cc0ac0775</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>saveSurfFile</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>ac6ef224810bae463d2b0b293a32ffcb3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>togglePolygonMode</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>ac8916f6c459b04387d85ee6710441dc5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>toggleLineType</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a4d316fd52a1d04af23526d1212ed754e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>toggleObjShader</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>ac8adad8d76433e1f9362b7f72bf5e6e4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>changeLineOption</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a5f2c85c2c246de03049420e86e56b69a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>changeVolShadingOption</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a3385446c22143c05c44f4c654760e2d0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>changeObjShadingOption</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>ab4eb8be033d8f239bbf5f8b30761d4b0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>toggleTexFilter</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a06d1491ed7998e51f78a3ca70f888e0c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>toggleTex2D3D</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>adc44b8f30358ad35d020455cc14ce58c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>toggleTexCompression</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a610d2520ffb78723e277b6f160e4a6f0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>toggleTexStream</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a5444e6bd39d15ffc59e52d3b52bcb208</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>toggleShader</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a5a86339ee252bbc4863a1b52ec502c02</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>showGLinfo</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a4dd9639219102868cc0ceae894e8bda6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateWithTriView</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a59d3fd29fc6270877528740c9c91047e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateImageData</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a4b83c47ec23f9bffd3a57c0526ddbd45</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reloadData</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>af80951e84166f6be3e915e41e53d68c9</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>cancelSelect</name>
      <anchorfile>classView3DControl.html</anchorfile>
      <anchor>a1c1c3b8b10d822f49b690c077a948417</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vol3DSimple</name>
    <filename>classVol3DSimple.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>Vol3DSimple</name>
      <anchorfile>classVol3DSimple.html</anchorfile>
      <anchor>a004b0d0466b1c6a00c6ea1eed9bef106</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vol3DSimple</name>
      <anchorfile>classVol3DSimple.html</anchorfile>
      <anchor>a03a3582baa315dc09c666274236b14fc</anchor>
      <arglist>(V3DLONG s0, V3DLONG s1, V3DLONG s2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vol3DSimple</name>
      <anchorfile>classVol3DSimple.html</anchorfile>
      <anchor>a88189618ae3d3ddf2757f2e904f2a5af</anchor>
      <arglist>(Vol3DSimple&lt; T1 &gt; *vsubject, V3DLONG xb, V3DLONG xe, V3DLONG yb, V3DLONG ye, V3DLONG zb, V3DLONG ze)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vol3DSimple</name>
      <anchorfile>classVol3DSimple.html</anchorfile>
      <anchor>a4a92784bcc70710a73e74e06fa9603df</anchor>
      <arglist>(Vol3DSimple&lt; T1 &gt; *vsubject)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Vol3DSimple</name>
      <anchorfile>classVol3DSimple.html</anchorfile>
      <anchor>ab26ee45f22c1a3311f34a578a56234bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>classVol3DSimple.html</anchorfile>
      <anchor>a1153e3a77aa46ed8f7683e71c60f4584</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T ***</type>
      <name>getData3dHandle</name>
      <anchorfile>classVol3DSimple.html</anchorfile>
      <anchor>afb6af547e50994223a01c0c246f2ec66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getData1dHandle</name>
      <anchorfile>classVol3DSimple.html</anchorfile>
      <anchor>a6af4ba8c47389b6d3cba7e8003fae653</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>getTotalElementNumber</name>
      <anchorfile>classVol3DSimple.html</anchorfile>
      <anchor>a5adf33c9d33248e92c5c443c6f47062a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>sz0</name>
      <anchorfile>classVol3DSimple.html</anchorfile>
      <anchor>a9947c8102f0f5d3da166dcf989be88f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>sz1</name>
      <anchorfile>classVol3DSimple.html</anchorfile>
      <anchor>a41b231a5eca1519dad9a13a5742beea5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>sz2</name>
      <anchorfile>classVol3DSimple.html</anchorfile>
      <anchor>a0af76370e02f2c8bc3f92ee58296ac17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>maxdimsz</name>
      <anchorfile>classVol3DSimple.html</anchorfile>
      <anchor>ac6200963cc14f4c5ffe64cf26b517372</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>V3DLONG</type>
      <name>mindimsz</name>
      <anchorfile>classVol3DSimple.html</anchorfile>
      <anchor>a0e79fb63e0ff9eee056176b16aa9b014</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>padding</name>
      <anchorfile>classVol3DSimple.html</anchorfile>
      <anchor>a2fd40d98176b508bbad918dd12eb61d4</anchor>
      <arglist>(V3DLONG rx, V3DLONG ry, V3DLONG rz)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unpadding</name>
      <anchorfile>classVol3DSimple.html</anchorfile>
      <anchor>a119fe0f2602bdc22bbe45bae41744284</anchor>
      <arglist>(V3DLONG rx, V3DLONG ry, V3DLONG rz)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>XYZ</name>
    <filename>structXYZ.html</filename>
    <member kind="function">
      <type></type>
      <name>XYZ</name>
      <anchorfile>structXYZ.html</anchorfile>
      <anchor>a93e3591524fa92d58bfd6bf838728a73</anchor>
      <arglist>(float x, float y, float z)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XYZ</name>
      <anchorfile>structXYZ.html</anchorfile>
      <anchor>a815100274efdac57ffc33a4c5b83e0f0</anchor>
      <arglist>(float a=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XYZ</name>
      <anchorfile>structXYZ.html</anchorfile>
      <anchor>ac26ed59e9cb7f77c193655eb1e8454eb</anchor>
      <arglist>(RGB8 c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XYZ</name>
      <anchorfile>structXYZ.html</anchorfile>
      <anchor>a81a8d7758da527d8103c7be40ade9824</anchor>
      <arglist>(RGB16i c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XYZ</name>
      <anchorfile>structXYZ.html</anchorfile>
      <anchor>aaf4d5e69ee0f1ab5a7bf02d30aa303cb</anchor>
      <arglist>(RGB32i c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XYZ</name>
      <anchorfile>structXYZ.html</anchorfile>
      <anchor>ac27a511a7f2f207eba8aac0658b2622f</anchor>
      <arglist>(RGB32f c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator RGB8</name>
      <anchorfile>structXYZ.html</anchorfile>
      <anchor>a779cb6fa3287e3a7600eee2b282d11dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator RGB16i</name>
      <anchorfile>structXYZ.html</anchorfile>
      <anchor>a17152609eec3014fd5476b5e799be8f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator RGB32i</name>
      <anchorfile>structXYZ.html</anchorfile>
      <anchor>a74c003c8dd6238342703a40641ad3f7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator RGB32f</name>
      <anchorfile>structXYZ.html</anchorfile>
      <anchor>a9d1e367543dd164bc71eda6613024694</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>union XYZ::@44</type>
      <name>@45</name>
      <anchorfile>structXYZ.html</anchorfile>
      <anchor>a8befe5e60a1601b7c5a2c21e22cd3a27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct XYZ::@44::@46</type>
      <name>@47</name>
      <anchorfile>unionXYZ_1_1@44.html</anchorfile>
      <anchor>a362a15a16bf290ec0e6337c76ede1bac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>structXYZ_1_1@44_1_1@46.html</anchorfile>
      <anchor>ad0da36b2558901e21e7a30f6c227a45e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>structXYZ_1_1@44_1_1@46.html</anchorfile>
      <anchor>aa4f0d3eebc3c443f9be81bf48561a217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>structXYZ_1_1@44_1_1@46.html</anchorfile>
      <anchor>af73583b1e980b0aa03f9884812e9fd4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>c_array&lt; float, 3 &gt;</type>
      <name>v</name>
      <anchorfile>unionXYZ_1_1@44.html</anchorfile>
      <anchor>a30c203b8ce9d2f40f9dcf8c08bfd26ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>XYZW</name>
    <filename>structXYZW.html</filename>
    <member kind="function">
      <type></type>
      <name>XYZW</name>
      <anchorfile>structXYZW.html</anchorfile>
      <anchor>a2ca8d8c210d3f5fb1276bbc9d45bd6c1</anchor>
      <arglist>(float x, float y, float z, float w)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XYZW</name>
      <anchorfile>structXYZW.html</anchorfile>
      <anchor>a50bba752ffea17d6c7de237541778861</anchor>
      <arglist>(float a=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XYZW</name>
      <anchorfile>structXYZW.html</anchorfile>
      <anchor>aa33729fddb8da2900e386b4ae4d6db28</anchor>
      <arglist>(RGBA8 c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XYZW</name>
      <anchorfile>structXYZW.html</anchorfile>
      <anchor>a8dbf8ec5d32d5177e924199b9f355284</anchor>
      <arglist>(RGBA16i c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XYZW</name>
      <anchorfile>structXYZW.html</anchorfile>
      <anchor>a8a577878cc1a1088daf18d33e357e594</anchor>
      <arglist>(RGBA32i c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XYZW</name>
      <anchorfile>structXYZW.html</anchorfile>
      <anchor>afb7a9513a9218c361f2522e38a32d7b4</anchor>
      <arglist>(RGBA32f c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator RGBA8</name>
      <anchorfile>structXYZW.html</anchorfile>
      <anchor>a994d89ff95cadd005b6fb78f2e5ce926</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator RGBA16i</name>
      <anchorfile>structXYZW.html</anchorfile>
      <anchor>a6f6273b21154abc24dffff952c5d8dba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator RGBA32i</name>
      <anchorfile>structXYZW.html</anchorfile>
      <anchor>a1abc1c79abec92a00c6f765c7c76e49b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator RGBA32f</name>
      <anchorfile>structXYZW.html</anchorfile>
      <anchor>a5de14d05203a757d66928b6908fec0ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XYZW</name>
      <anchorfile>structXYZW.html</anchorfile>
      <anchor>a8a9a30efdcfe75cdc782f29559611d09</anchor>
      <arglist>(XYZ v, float w=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator XYZ</name>
      <anchorfile>structXYZW.html</anchorfile>
      <anchor>aae3bedeafff6dab68b87a7ee55214ec4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>union XYZW::@48</type>
      <name>@49</name>
      <anchorfile>structXYZW.html</anchorfile>
      <anchor>af948af6d4912c256af22ad36c12ad491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct XYZW::@48::@50</type>
      <name>@51</name>
      <anchorfile>unionXYZW_1_1@48.html</anchorfile>
      <anchor>a94bf3335805ea03aae69f848633269b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>structXYZW_1_1@48_1_1@50.html</anchorfile>
      <anchor>ad0da36b2558901e21e7a30f6c227a45e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>structXYZW_1_1@48_1_1@50.html</anchorfile>
      <anchor>aa4f0d3eebc3c443f9be81bf48561a217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>structXYZW_1_1@48_1_1@50.html</anchorfile>
      <anchor>af73583b1e980b0aa03f9884812e9fd4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>w</name>
      <anchorfile>structXYZW_1_1@48_1_1@50.html</anchorfile>
      <anchor>a56eca241e2896b9f57a79589e76fd24b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>v</name>
      <anchorfile>unionXYZW_1_1@48.html</anchorfile>
      <anchor>a557d2875124e0af14300c7f6e9a370bd</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="dir">
    <name>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</path>
    <filename>dir_517a1b8ff811a6b9c05fa7b7282fc397.html</filename>
    <dir>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/customary_structs/</dir>
    <file>basic_4dimage.cpp</file>
    <file>basic_4dimage.h</file>
    <file>basic_landmark.h</file>
    <file>basic_memory.cpp</file>
    <file>basic_memory.h</file>
    <file>basic_surf_objs.cpp</file>
    <file>basic_surf_objs.h</file>
    <file>basic_thread.h</file>
    <file>basic_triview.h</file>
    <file>basic_view3d.h</file>
    <file>c_array_struct.hpp</file>
    <file>color_xyz.h</file>
    <file>imageio_mylib.cpp</file>
    <file>imageio_mylib.h</file>
    <file>img_definition.h</file>
    <file>mg_image_lib.cpp</file>
    <file>mg_image_lib.h</file>
    <file>mg_utilities.cpp</file>
    <file>mg_utilities.h</file>
    <file>os_cpu.h</file>
    <file>stackutil.cpp</file>
    <file>stackutil.h</file>
    <file>v3d_basicdatatype.h</file>
    <file>v3d_curvetracepara.h</file>
    <file>v3d_global_preference.h</file>
    <file>v3d_interface.h</file>
    <file>v3d_message.cpp</file>
    <file>v3d_message.h</file>
    <file>vcdiff.cpp</file>
    <file>vcdiff.h</file>
    <file>volimg_proc.h</file>
    <file>volimg_proc_declare.h</file>
  </compound>
  <compound kind="dir">
    <name>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/customary_structs/</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/customary_structs/</path>
    <filename>dir_79c2461e7879020e14a293460a193225.html</filename>
    <file>v3d_imaging_para.h</file>
    <file>v3d_multithreadimageio_para.h</file>
  </compound>
  <compound kind="dir">
    <name>/Users/brunsc/svn/v3d_cmake/v3d_main/</name>
    <path>/Users/brunsc/svn/v3d_cmake/v3d_main/</path>
    <filename>dir_37aba53db48e6e9a88f62b3471dbd79b.html</filename>
    <dir>/Users/brunsc/svn/v3d_cmake/v3d_main/basic_c_fun/</dir>
  </compound>
</tagfile>
