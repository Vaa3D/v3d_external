// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__convenience.pypp.hpp"
#include "__call_policies.pypp.hpp"
#include "wrappable_v3d.h"
#include "LocationSimple.pypp.hpp"

namespace bp = boost::python;

static boost::python::tuple getCoord_cc399825571d9d2fb0b87d70fc79ba3e( ::LocationSimple & inst ){
    int xx2;
    int yy2;
    int zz2;
    inst.getCoord(xx2, yy2, zz2);
    return bp::make_tuple( xx2, yy2, zz2 );
}

static boost::python::tuple getCoord_ee590485e8897f0837017b9b7e8b3b5f( ::LocationSimple & inst ){
    float xx2;
    float yy2;
    float zz2;
    inst.getCoord(xx2, yy2, zz2);
    return bp::make_tuple( xx2, yy2, zz2 );
}

void register_LocationSimple_class(){

    bp::class_< LocationSimple >( "LocationSimple", bp::init< int, int, int >(( bp::arg("xx"), bp::arg("yy"), bp::arg("zz") )) )    
        .def( bp::init< >() )    
        .def( 
            "getAve"
            , (double ( ::LocationSimple::* )(  ) )( &::LocationSimple::getAve ) )    
        .def( 
            "getCoordInt"
            , (boost::python::tuple (*)( ::LocationSimple & ))( &getCoord_cc399825571d9d2fb0b87d70fc79ba3e )
            , ( bp::arg("inst") ) )    
        .def( 
            "getCoord"
            , (boost::python::tuple (*)( ::LocationSimple & ))( &getCoord_ee590485e8897f0837017b9b7e8b3b5f )
            , ( bp::arg("inst") ) )    
        .def( 
            "getCurt"
            , (double ( ::LocationSimple::* )(  ) )( &::LocationSimple::getCurt ) )    
        .def( 
            "getPixVal"
            , (int ( ::LocationSimple::* )(  ) )( &::LocationSimple::getPixVal ) )    
        .def( 
            "getSdev"
            , (double ( ::LocationSimple::* )(  ) )( &::LocationSimple::getSdev ) )    
        .def( 
            "getSkew"
            , (double ( ::LocationSimple::* )(  ) )( &::LocationSimple::getSkew ) )    
        .def( 
            "howUseful"
            , (::PxLocationUsefulness ( ::LocationSimple::* )(  ) )( &::LocationSimple::howUseful ) )    
        .def( 
            "init"
            , (void ( ::LocationSimple::* )(  ) )( &::LocationSimple::init ) )    
        .def( bp::self == bp::self )    
        .def_readwrite( "ave", &LocationSimple::ave )    
        .def_readwrite( "category", &LocationSimple::category )    
        .def_readwrite( "color", &LocationSimple::color )    
        .def_readwrite( "comments", &LocationSimple::comments )    
        .def_readwrite( "curt", &LocationSimple::curt )    
        .def_readwrite( "ev_pc1", &LocationSimple::ev_pc1 )    
        .def_readwrite( "ev_pc2", &LocationSimple::ev_pc2 )    
        .def_readwrite( "ev_pc3", &LocationSimple::ev_pc3 )    
        .def_readwrite( "inputProperty", &LocationSimple::inputProperty )    
        .def_readwrite( "mass", &LocationSimple::mass )    
        .def_readwrite( "name", &LocationSimple::name )    
        .def_readwrite( "on", &LocationSimple::on )    
        .def_readwrite( "pixmax", &LocationSimple::pixmax )    
        .def_readwrite( "pixval", &LocationSimple::pixval )    
        .def_readwrite( "radius", &LocationSimple::radius )    
        .def_readwrite( "sdev", &LocationSimple::sdev )    
        .def_readwrite( "shape", &LocationSimple::shape )    
        .def_readwrite( "size", &LocationSimple::size )    
        .def_readwrite( "skew", &LocationSimple::skew )    
        .def_readwrite( "x", &LocationSimple::x )    
        .def_readwrite( "y", &LocationSimple::y )    
        .def_readwrite( "z", &LocationSimple::z );

}
