// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrappable_v3d.h"
#include "View3DControl.pypp.hpp"

namespace bp = boost::python;

struct View3DControl_wrapper : View3DControl, bp::wrapper< View3DControl > {

    View3DControl_wrapper()
    : View3DControl()
      , bp::wrapper< View3DControl >(){
        // null constructor
        
    }

    virtual void absoluteRotPose(  ){
        bp::override func_absoluteRotPose = this->get_override( "absoluteRotPose" );
        func_absoluteRotPose(  );
    }

    virtual void annotationDialog( int dataClass, int surfaceType, int index ){
        bp::override func_annotationDialog = this->get_override( "annotationDialog" );
        func_annotationDialog( dataClass, surfaceType, index );
    }

    virtual void cancelSelect(  ){
        bp::override func_cancelSelect = this->get_override( "cancelSelect" );
        func_cancelSelect(  );
    }

    virtual void changeLineOption(  ){
        bp::override func_changeLineOption = this->get_override( "changeLineOption" );
        func_changeLineOption(  );
    }

    virtual void changeObjShadingOption(  ){
        bp::override func_changeObjShadingOption = this->get_override( "changeObjShadingOption" );
        func_changeObjShadingOption(  );
    }

    virtual void changeVolShadingOption(  ){
        bp::override func_changeVolShadingOption = this->get_override( "changeVolShadingOption" );
        func_changeVolShadingOption(  );
    }

    virtual bool channelB(  ){
        bp::override func_channelB = this->get_override( "channelB" );
        return func_channelB(  );
    }

    virtual bool channelG(  ){
        bp::override func_channelG = this->get_override( "channelG" );
        return func_channelG(  );
    }

    virtual bool channelR(  ){
        bp::override func_channelR = this->get_override( "channelR" );
        return func_channelR(  );
    }

    virtual void createSurfCurrentB(  ){
        bp::override func_createSurfCurrentB = this->get_override( "createSurfCurrentB" );
        func_createSurfCurrentB(  );
    }

    virtual void createSurfCurrentG(  ){
        bp::override func_createSurfCurrentG = this->get_override( "createSurfCurrentG" );
        func_createSurfCurrentG(  );
    }

    virtual void createSurfCurrentR(  ){
        bp::override func_createSurfCurrentR = this->get_override( "createSurfCurrentR" );
        func_createSurfCurrentR(  );
    }

    virtual int dataDim1(  ) const {
        bp::override func_dataDim1 = this->get_override( "dataDim1" );
        return func_dataDim1(  );
    }

    virtual int dataDim2(  ) const {
        bp::override func_dataDim2 = this->get_override( "dataDim2" );
        return func_dataDim2(  );
    }

    virtual int dataDim3(  ) const {
        bp::override func_dataDim3 = this->get_override( "dataDim3" );
        return func_dataDim3(  );
    }

    virtual int dataDim4(  ) const {
        bp::override func_dataDim4 = this->get_override( "dataDim4" );
        return func_dataDim4(  );
    }

    virtual int dataDim5(  ) const {
        bp::override func_dataDim5 = this->get_override( "dataDim5" );
        return func_dataDim5(  );
    }

    virtual void doAbsoluteRot( int xRot, int yRot, int zRot ){
        bp::override func_doAbsoluteRot = this->get_override( "doAbsoluteRot" );
        func_doAbsoluteRot( xRot, yRot, zRot );
    }

    virtual void doAbsoluteRot( float xRot, float yRot, float zRot ){
        bp::override func_doAbsoluteRot = this->get_override( "doAbsoluteRot" );
        func_doAbsoluteRot( xRot, yRot, zRot );
    }

    virtual void enableFrontSlice( bool arg0 ){
        bp::override func_enableFrontSlice = this->get_override( "enableFrontSlice" );
        func_enableFrontSlice( arg0 );
    }

    virtual void enableMarkerLabel( bool arg0 ){
        bp::override func_enableMarkerLabel = this->get_override( "enableMarkerLabel" );
        func_enableMarkerLabel( arg0 );
    }

    virtual void enableOrthoView( bool b ){
        bp::override func_enableOrthoView = this->get_override( "enableOrthoView" );
        func_enableOrthoView( b );
    }

    virtual void enableShowAxes( bool b ){
        bp::override func_enableShowAxes = this->get_override( "enableShowAxes" );
        func_enableShowAxes( b );
    }

    virtual void enableShowBoundingBox( bool b ){
        bp::override func_enableShowBoundingBox = this->get_override( "enableShowBoundingBox" );
        func_enableShowBoundingBox( b );
    }

    virtual void enableSurfStretch( bool arg0 ){
        bp::override func_enableSurfStretch = this->get_override( "enableSurfStretch" );
        func_enableSurfStretch( arg0 );
    }

    virtual void enableXSlice( bool arg0 ){
        bp::override func_enableXSlice = this->get_override( "enableXSlice" );
        func_enableXSlice( arg0 );
    }

    virtual void enableYSlice( bool arg0 ){
        bp::override func_enableYSlice = this->get_override( "enableYSlice" );
        func_enableYSlice( arg0 );
    }

    virtual void enableZSlice( bool arg0 ){
        bp::override func_enableZSlice = this->get_override( "enableZSlice" );
        func_enableZSlice( arg0 );
    }

    virtual int frontCut(  ) const {
        bp::override func_frontCut = this->get_override( "frontCut" );
        return func_frontCut(  );
    }

    virtual void hideTool(  ){
        bp::override func_hideTool = this->get_override( "hideTool" );
        func_hideTool(  );
    }

    virtual void incVolumeTimePoint( float step ){
        bp::override func_incVolumeTimePoint = this->get_override( "incVolumeTimePoint" );
        func_incVolumeTimePoint( step );
    }

    virtual bool isAbsoluteRot(  ) const {
        bp::override func_isAbsoluteRot = this->get_override( "isAbsoluteRot" );
        return func_isAbsoluteRot(  );
    }

    virtual bool isShowAxes(  ) const {
        bp::override func_isShowAxes = this->get_override( "isShowAxes" );
        return func_isShowAxes(  );
    }

    virtual bool isShowBoundingBox(  ) const {
        bp::override func_isShowBoundingBox = this->get_override( "isShowBoundingBox" );
        return func_isShowBoundingBox(  );
    }

    virtual bool isVolCompress(  ) const {
        bp::override func_isVolCompress = this->get_override( "isVolCompress" );
        return func_isVolCompress(  );
    }

    virtual void loadObjectFromFile( ::QString url="" ){
        bp::override func_loadObjectFromFile = this->get_override( "loadObjectFromFile" );
        func_loadObjectFromFile( url );
    }

    virtual void loadObjectListFromFile(  ){
        bp::override func_loadObjectListFromFile = this->get_override( "loadObjectListFromFile" );
        func_loadObjectListFromFile(  );
    }

    virtual void lookAlong( float xLook, float yLook, float zLook ){
        bp::override func_lookAlong = this->get_override( "lookAlong" );
        func_lookAlong( xLook, yLook, zLook );
    }

    virtual void modelRotation( int xRotStep, int yRotStep, int zRotStep ){
        bp::override func_modelRotation = this->get_override( "modelRotation" );
        func_modelRotation( xRotStep, yRotStep, zRotStep );
    }

    virtual void reloadData(  ){
        bp::override func_reloadData = this->get_override( "reloadData" );
        func_reloadData(  );
    }

    virtual int renderMode(  ) const {
        bp::override func_renderMode = this->get_override( "renderMode" );
        return func_renderMode(  );
    }

    virtual void resetRotation( bool b_emit=true ){
        bp::override func_resetRotation = this->get_override( "resetRotation" );
        func_resetRotation( b_emit );
    }

    virtual void resetZoomShift(  ){
        bp::override func_resetZoomShift = this->get_override( "resetZoomShift" );
        func_resetZoomShift(  );
    }

    virtual void saveSurfFile(  ){
        bp::override func_saveSurfFile = this->get_override( "saveSurfFile" );
        func_saveSurfFile(  );
    }

    virtual void setBackgroundColor(  ){
        bp::override func_setBackgroundColor = this->get_override( "setBackgroundColor" );
        func_setBackgroundColor(  );
    }

    virtual void setBright(  ){
        bp::override func_setBright = this->get_override( "setBright" );
        func_setBright(  );
    }

    virtual void setCSTransparent( int arg0 ){
        bp::override func_setCSTransparent = this->get_override( "setCSTransparent" );
        func_setCSTransparent( arg0 );
    }

    virtual void setChannelB( bool b ){
        bp::override func_setChannelB = this->get_override( "setChannelB" );
        func_setChannelB( b );
    }

    virtual void setChannelG( bool b ){
        bp::override func_setChannelG = this->get_override( "setChannelG" );
        func_setChannelG( b );
    }

    virtual void setChannelR( bool b ){
        bp::override func_setChannelR = this->get_override( "setChannelR" );
        func_setChannelR( b );
    }

    virtual void setCurChannel( int arg0 ){
        bp::override func_setCurChannel = this->get_override( "setCurChannel" );
        func_setCurChannel( arg0 );
    }

    virtual void setDragWinSize( int csize ){
        bp::override func_setDragWinSize = this->get_override( "setDragWinSize" );
        func_setDragWinSize( csize );
    }

    virtual void setFrontCut( int s ){
        bp::override func_setFrontCut = this->get_override( "setFrontCut" );
        func_setFrontCut( s );
    }

    virtual void setMarkerSize( int s ){
        bp::override func_setMarkerSize = this->get_override( "setMarkerSize" );
        func_setMarkerSize( s );
    }

    virtual void setRenderMode_Alpha( bool b ){
        bp::override func_setRenderMode_Alpha = this->get_override( "setRenderMode_Alpha" );
        func_setRenderMode_Alpha( b );
    }

    virtual void setRenderMode_Cs3d( bool b ){
        bp::override func_setRenderMode_Cs3d = this->get_override( "setRenderMode_Cs3d" );
        func_setRenderMode_Cs3d( b );
    }

    virtual void setRenderMode_Maxip( bool b ){
        bp::override func_setRenderMode_Maxip = this->get_override( "setRenderMode_Maxip" );
        func_setRenderMode_Maxip( b );
    }

    virtual void setRenderMode_Minip( bool b ){
        bp::override func_setRenderMode_Minip = this->get_override( "setRenderMode_Minip" );
        func_setRenderMode_Minip( b );
    }

    virtual void setShowMarkers( int s ){
        bp::override func_setShowMarkers = this->get_override( "setShowMarkers" );
        func_setShowMarkers( s );
    }

    virtual void setShowSurfObjects( int s ){
        bp::override func_setShowSurfObjects = this->get_override( "setShowSurfObjects" );
        func_setShowSurfObjects( s );
    }

    virtual void setThickness( double arg0 ){
        bp::override func_setThickness = this->get_override( "setThickness" );
        func_setThickness( arg0 );
    }

    virtual void setVolCompress( bool b ){
        bp::override func_setVolCompress = this->get_override( "setVolCompress" );
        func_setVolCompress( b );
    }

    virtual int setVolumeTimePoint( int t ){
        bp::override func_setVolumeTimePoint = this->get_override( "setVolumeTimePoint" );
        return func_setVolumeTimePoint( t );
    }

    virtual void setXCS( int s ){
        bp::override func_setXCS = this->get_override( "setXCS" );
        func_setXCS( s );
    }

    virtual void setXClip0( int s ){
        bp::override func_setXClip0 = this->get_override( "setXClip0" );
        func_setXClip0( s );
    }

    virtual void setXClip1( int s ){
        bp::override func_setXClip1 = this->get_override( "setXClip1" );
        func_setXClip1( s );
    }

    virtual void setXCut0( int s ){
        bp::override func_setXCut0 = this->get_override( "setXCut0" );
        func_setXCut0( s );
    }

    virtual void setXCut1( int s ){
        bp::override func_setXCut1 = this->get_override( "setXCut1" );
        func_setXCut1( s );
    }

    virtual void setXCutLock( bool arg0 ){
        bp::override func_setXCutLock = this->get_override( "setXCutLock" );
        func_setXCutLock( arg0 );
    }

    virtual void setXRotation( int angle ){
        bp::override func_setXRotation = this->get_override( "setXRotation" );
        func_setXRotation( angle );
    }

    virtual void setXRotation( float angle ){
        bp::override func_setXRotation = this->get_override( "setXRotation" );
        func_setXRotation( angle );
    }

    virtual void setXShift( int s ){
        bp::override func_setXShift = this->get_override( "setXShift" );
        func_setXShift( s );
    }

    virtual void setXShift( float s ){
        bp::override func_setXShift = this->get_override( "setXShift" );
        func_setXShift( s );
    }

    virtual void setYCS( int s ){
        bp::override func_setYCS = this->get_override( "setYCS" );
        func_setYCS( s );
    }

    virtual void setYClip0( int s ){
        bp::override func_setYClip0 = this->get_override( "setYClip0" );
        func_setYClip0( s );
    }

    virtual void setYClip1( int s ){
        bp::override func_setYClip1 = this->get_override( "setYClip1" );
        func_setYClip1( s );
    }

    virtual void setYCut0( int s ){
        bp::override func_setYCut0 = this->get_override( "setYCut0" );
        func_setYCut0( s );
    }

    virtual void setYCut1( int s ){
        bp::override func_setYCut1 = this->get_override( "setYCut1" );
        func_setYCut1( s );
    }

    virtual void setYCutLock( bool arg0 ){
        bp::override func_setYCutLock = this->get_override( "setYCutLock" );
        func_setYCutLock( arg0 );
    }

    virtual void setYRotation( int angle ){
        bp::override func_setYRotation = this->get_override( "setYRotation" );
        func_setYRotation( angle );
    }

    virtual void setYRotation( float angle ){
        bp::override func_setYRotation = this->get_override( "setYRotation" );
        func_setYRotation( angle );
    }

    virtual void setYShift( int s ){
        bp::override func_setYShift = this->get_override( "setYShift" );
        func_setYShift( s );
    }

    virtual void setYShift( float s ){
        bp::override func_setYShift = this->get_override( "setYShift" );
        func_setYShift( s );
    }

    virtual void setZCS( int s ){
        bp::override func_setZCS = this->get_override( "setZCS" );
        func_setZCS( s );
    }

    virtual void setZClip0( int s ){
        bp::override func_setZClip0 = this->get_override( "setZClip0" );
        func_setZClip0( s );
    }

    virtual void setZClip1( int s ){
        bp::override func_setZClip1 = this->get_override( "setZClip1" );
        func_setZClip1( s );
    }

    virtual void setZCut0( int s ){
        bp::override func_setZCut0 = this->get_override( "setZCut0" );
        func_setZCut0( s );
    }

    virtual void setZCut1( int s ){
        bp::override func_setZCut1 = this->get_override( "setZCut1" );
        func_setZCut1( s );
    }

    virtual void setZCutLock( bool arg0 ){
        bp::override func_setZCutLock = this->get_override( "setZCutLock" );
        func_setZCutLock( arg0 );
    }

    virtual void setZRotation( int angle ){
        bp::override func_setZRotation = this->get_override( "setZRotation" );
        func_setZRotation( angle );
    }

    virtual void setZRotation( float angle ){
        bp::override func_setZRotation = this->get_override( "setZRotation" );
        func_setZRotation( angle );
    }

    virtual void setZShift( int s ){
        bp::override func_setZShift = this->get_override( "setZShift" );
        func_setZShift( s );
    }

    virtual void setZShift( float s ){
        bp::override func_setZShift = this->get_override( "setZShift" );
        func_setZShift( s );
    }

    virtual void setZoom( int r ){
        bp::override func_setZoom = this->get_override( "setZoom" );
        func_setZoom( r );
    }

    virtual void setZoom( float r ){
        bp::override func_setZoom = this->get_override( "setZoom" );
        func_setZoom( r );
    }

    virtual void showGLinfo(  ){
        bp::override func_showGLinfo = this->get_override( "showGLinfo" );
        func_showGLinfo(  );
    }

    virtual void showTool(  ){
        bp::override func_showTool = this->get_override( "showTool" );
        func_showTool(  );
    }

    virtual void surfaceDialogHide(  ){
        bp::override func_surfaceDialogHide = this->get_override( "surfaceDialogHide" );
        func_surfaceDialogHide(  );
    }

    virtual void surfaceSelectDialog( int curTab=0 ){
        bp::override func_surfaceSelectDialog = this->get_override( "surfaceSelectDialog" );
        func_surfaceSelectDialog( curTab );
    }

    virtual void surfaceSelectTab( int curTab=0 ){
        bp::override func_surfaceSelectTab = this->get_override( "surfaceSelectTab" );
        func_surfaceSelectTab( curTab );
    }

    virtual void toggleCellName(  ){
        bp::override func_toggleCellName = this->get_override( "toggleCellName" );
        func_toggleCellName(  );
    }

    virtual void toggleLineType(  ){
        bp::override func_toggleLineType = this->get_override( "toggleLineType" );
        func_toggleLineType(  );
    }

    virtual void toggleNStrokeCurveDrawing(  ){
        bp::override func_toggleNStrokeCurveDrawing = this->get_override( "toggleNStrokeCurveDrawing" );
        func_toggleNStrokeCurveDrawing(  );
    }

    virtual void toggleObjShader(  ){
        bp::override func_toggleObjShader = this->get_override( "toggleObjShader" );
        func_toggleObjShader(  );
    }

    virtual void togglePolygonMode(  ){
        bp::override func_togglePolygonMode = this->get_override( "togglePolygonMode" );
        func_togglePolygonMode(  );
    }

    virtual void toggleShader(  ){
        bp::override func_toggleShader = this->get_override( "toggleShader" );
        func_toggleShader(  );
    }

    virtual void toggleTex2D3D(  ){
        bp::override func_toggleTex2D3D = this->get_override( "toggleTex2D3D" );
        func_toggleTex2D3D(  );
    }

    virtual void toggleTexCompression(  ){
        bp::override func_toggleTexCompression = this->get_override( "toggleTexCompression" );
        func_toggleTexCompression(  );
    }

    virtual void toggleTexFilter(  ){
        bp::override func_toggleTexFilter = this->get_override( "toggleTexFilter" );
        func_toggleTexFilter(  );
    }

    virtual void toggleTexStream(  ){
        bp::override func_toggleTexStream = this->get_override( "toggleTexStream" );
        func_toggleTexStream(  );
    }

    virtual void updateControl(  ){
        bp::override func_updateControl = this->get_override( "updateControl" );
        func_updateControl(  );
    }

    virtual void updateImageData(  ){
        bp::override func_updateImageData = this->get_override( "updateImageData" );
        func_updateImageData(  );
    }

    virtual void updateTool(  ){
        bp::override func_updateTool = this->get_override( "updateTool" );
        func_updateTool(  );
    }

    virtual void updateWithTriView(  ){
        bp::override func_updateWithTriView = this->get_override( "updateWithTriView" );
        func_updateWithTriView(  );
    }

    virtual void viewRotation( int xRotStep, int yRotStep, int zRotStep ){
        bp::override func_viewRotation = this->get_override( "viewRotation" );
        func_viewRotation( xRotStep, yRotStep, zRotStep );
    }

    virtual void volumeColormapDialog(  ){
        bp::override func_volumeColormapDialog = this->get_override( "volumeColormapDialog" );
        func_volumeColormapDialog(  );
    }

    virtual int volumeTimePoint(  ) const {
        bp::override func_volumeTimePoint = this->get_override( "volumeTimePoint" );
        return func_volumeTimePoint(  );
    }

    virtual int xCS(  ) const {
        bp::override func_xCS = this->get_override( "xCS" );
        return func_xCS(  );
    }

    virtual int xCut0(  ) const {
        bp::override func_xCut0 = this->get_override( "xCut0" );
        return func_xCut0(  );
    }

    virtual int xCut1(  ) const {
        bp::override func_xCut1 = this->get_override( "xCut1" );
        return func_xCut1(  );
    }

    virtual int xRot(  ) const {
        bp::override func_xRot = this->get_override( "xRot" );
        return func_xRot(  );
    }

    virtual int xShift(  ) const {
        bp::override func_xShift = this->get_override( "xShift" );
        return func_xShift(  );
    }

    virtual int yCS(  ) const {
        bp::override func_yCS = this->get_override( "yCS" );
        return func_yCS(  );
    }

    virtual int yCut0(  ) const {
        bp::override func_yCut0 = this->get_override( "yCut0" );
        return func_yCut0(  );
    }

    virtual int yCut1(  ) const {
        bp::override func_yCut1 = this->get_override( "yCut1" );
        return func_yCut1(  );
    }

    virtual int yRot(  ) const {
        bp::override func_yRot = this->get_override( "yRot" );
        return func_yRot(  );
    }

    virtual int yShift(  ) const {
        bp::override func_yShift = this->get_override( "yShift" );
        return func_yShift(  );
    }

    virtual int zCS(  ) const {
        bp::override func_zCS = this->get_override( "zCS" );
        return func_zCS(  );
    }

    virtual int zCut0(  ) const {
        bp::override func_zCut0 = this->get_override( "zCut0" );
        return func_zCut0(  );
    }

    virtual int zCut1(  ) const {
        bp::override func_zCut1 = this->get_override( "zCut1" );
        return func_zCut1(  );
    }

    virtual int zRot(  ) const {
        bp::override func_zRot = this->get_override( "zRot" );
        return func_zRot(  );
    }

    virtual int zShift(  ) const {
        bp::override func_zShift = this->get_override( "zShift" );
        return func_zShift(  );
    }

    virtual int zoom(  ) const {
        bp::override func_zoom = this->get_override( "zoom" );
        return func_zoom(  );
    }

};

void register_View3DControl_class(){

    bp::class_< View3DControl_wrapper, boost::noncopyable >( "View3DControl" )    
        .def( 
            "absoluteRotPose"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::absoluteRotPose) ) )    
        .def( 
            "annotationDialog"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int,int,int ) )(&::View3DControl::annotationDialog) )
            , ( bp::arg("dataClass"), bp::arg("surfaceType"), bp::arg("index") ) )    
        .def( 
            "cancelSelect"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::cancelSelect) ) )    
        .def( 
            "changeLineOption"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::changeLineOption) ) )    
        .def( 
            "changeObjShadingOption"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::changeObjShadingOption) ) )    
        .def( 
            "changeVolShadingOption"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::changeVolShadingOption) ) )    
        .def( 
            "channelB"
            , bp::pure_virtual( (bool ( ::View3DControl::* )(  ) )(&::View3DControl::channelB) ) )    
        .def( 
            "channelG"
            , bp::pure_virtual( (bool ( ::View3DControl::* )(  ) )(&::View3DControl::channelG) ) )    
        .def( 
            "channelR"
            , bp::pure_virtual( (bool ( ::View3DControl::* )(  ) )(&::View3DControl::channelR) ) )    
        .def( 
            "createSurfCurrentB"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::createSurfCurrentB) ) )    
        .def( 
            "createSurfCurrentG"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::createSurfCurrentG) ) )    
        .def( 
            "createSurfCurrentR"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::createSurfCurrentR) ) )    
        .def( 
            "dataDim1"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::dataDim1) ) )    
        .def( 
            "dataDim2"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::dataDim2) ) )    
        .def( 
            "dataDim3"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::dataDim3) ) )    
        .def( 
            "dataDim4"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::dataDim4) ) )    
        .def( 
            "dataDim5"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::dataDim5) ) )    
        .def( 
            "doAbsoluteRot"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int,int,int ) )(&::View3DControl::doAbsoluteRot) )
            , ( bp::arg("xRot"), bp::arg("yRot"), bp::arg("zRot") ) )    
        .def( 
            "doAbsoluteRot"
            , bp::pure_virtual( (void ( ::View3DControl::* )( float,float,float ) )(&::View3DControl::doAbsoluteRot) )
            , ( bp::arg("xRot"), bp::arg("yRot"), bp::arg("zRot") ) )    
        .def( 
            "enableFrontSlice"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::enableFrontSlice) )
            , ( bp::arg("arg0") ) )    
        .def( 
            "enableMarkerLabel"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::enableMarkerLabel) )
            , ( bp::arg("arg0") ) )    
        .def( 
            "enableOrthoView"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::enableOrthoView) )
            , ( bp::arg("b") ) )    
        .def( 
            "enableShowAxes"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::enableShowAxes) )
            , ( bp::arg("b") ) )    
        .def( 
            "enableShowBoundingBox"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::enableShowBoundingBox) )
            , ( bp::arg("b") ) )    
        .def( 
            "enableSurfStretch"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::enableSurfStretch) )
            , ( bp::arg("arg0") ) )    
        .def( 
            "enableXSlice"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::enableXSlice) )
            , ( bp::arg("arg0") ) )    
        .def( 
            "enableYSlice"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::enableYSlice) )
            , ( bp::arg("arg0") ) )    
        .def( 
            "enableZSlice"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::enableZSlice) )
            , ( bp::arg("arg0") ) )    
        .def( 
            "frontCut"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::frontCut) ) )    
        .def( 
            "hideTool"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::hideTool) ) )    
        .def( 
            "incVolumeTimePoint"
            , bp::pure_virtual( (void ( ::View3DControl::* )( float ) )(&::View3DControl::incVolumeTimePoint) )
            , ( bp::arg("step") ) )    
        .def( 
            "isAbsoluteRot"
            , bp::pure_virtual( (bool ( ::View3DControl::* )(  ) const)(&::View3DControl::isAbsoluteRot) ) )    
        .def( 
            "isShowAxes"
            , bp::pure_virtual( (bool ( ::View3DControl::* )(  ) const)(&::View3DControl::isShowAxes) ) )    
        .def( 
            "isShowBoundingBox"
            , bp::pure_virtual( (bool ( ::View3DControl::* )(  ) const)(&::View3DControl::isShowBoundingBox) ) )    
        .def( 
            "isVolCompress"
            , bp::pure_virtual( (bool ( ::View3DControl::* )(  ) const)(&::View3DControl::isVolCompress) ) )    
        .def( 
            "loadObjectFromFile"
            , bp::pure_virtual( (void ( ::View3DControl::* )( ::QString ) )(&::View3DControl::loadObjectFromFile) )
            , ( bp::arg("url")="" ) )    
        .def( 
            "loadObjectListFromFile"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::loadObjectListFromFile) ) )    
        .def( 
            "lookAlong"
            , bp::pure_virtual( (void ( ::View3DControl::* )( float,float,float ) )(&::View3DControl::lookAlong) )
            , ( bp::arg("xLook"), bp::arg("yLook"), bp::arg("zLook") ) )    
        .def( 
            "modelRotation"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int,int,int ) )(&::View3DControl::modelRotation) )
            , ( bp::arg("xRotStep"), bp::arg("yRotStep"), bp::arg("zRotStep") ) )    
        .def( 
            "reloadData"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::reloadData) ) )    
        .def( 
            "renderMode"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::renderMode) ) )    
        .def( 
            "resetRotation"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::resetRotation) )
            , ( bp::arg("b_emit")=(bool)(true) ) )    
        .def( 
            "resetZoomShift"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::resetZoomShift) ) )    
        .def( 
            "saveSurfFile"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::saveSurfFile) ) )    
        .def( 
            "setBackgroundColor"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::setBackgroundColor) ) )    
        .def( 
            "setBright"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::setBright) ) )    
        .def( 
            "setCSTransparent"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setCSTransparent) )
            , ( bp::arg("arg0") ) )    
        .def( 
            "setChannelB"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::setChannelB) )
            , ( bp::arg("b") ) )    
        .def( 
            "setChannelG"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::setChannelG) )
            , ( bp::arg("b") ) )    
        .def( 
            "setChannelR"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::setChannelR) )
            , ( bp::arg("b") ) )    
        .def( 
            "setCurChannel"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setCurChannel) )
            , ( bp::arg("arg0") ) )    
        .def( 
            "setDragWinSize"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setDragWinSize) )
            , ( bp::arg("csize") ) )    
        .def( 
            "setFrontCut"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setFrontCut) )
            , ( bp::arg("s") ) )    
        .def( 
            "setMarkerSize"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setMarkerSize) )
            , ( bp::arg("s") ) )    
        .def( 
            "setRenderMode_Alpha"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::setRenderMode_Alpha) )
            , ( bp::arg("b") ) )    
        .def( 
            "setRenderMode_Cs3d"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::setRenderMode_Cs3d) )
            , ( bp::arg("b") ) )    
        .def( 
            "setRenderMode_Maxip"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::setRenderMode_Maxip) )
            , ( bp::arg("b") ) )    
        .def( 
            "setRenderMode_Minip"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::setRenderMode_Minip) )
            , ( bp::arg("b") ) )    
        .def( 
            "setShowMarkers"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setShowMarkers) )
            , ( bp::arg("s") ) )    
        .def( 
            "setShowSurfObjects"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setShowSurfObjects) )
            , ( bp::arg("s") ) )    
        .def( 
            "setThickness"
            , bp::pure_virtual( (void ( ::View3DControl::* )( double ) )(&::View3DControl::setThickness) )
            , ( bp::arg("arg0") ) )    
        .def( 
            "setVolCompress"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::setVolCompress) )
            , ( bp::arg("b") ) )    
        .def( 
            "setVolumeTimePoint"
            , bp::pure_virtual( (int ( ::View3DControl::* )( int ) )(&::View3DControl::setVolumeTimePoint) )
            , ( bp::arg("t") ) )    
        .def( 
            "setXCS"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setXCS) )
            , ( bp::arg("s") ) )    
        .def( 
            "setXClip0"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setXClip0) )
            , ( bp::arg("s") ) )    
        .def( 
            "setXClip1"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setXClip1) )
            , ( bp::arg("s") ) )    
        .def( 
            "setXCut0"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setXCut0) )
            , ( bp::arg("s") ) )    
        .def( 
            "setXCut1"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setXCut1) )
            , ( bp::arg("s") ) )    
        .def( 
            "setXCutLock"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::setXCutLock) )
            , ( bp::arg("arg0") ) )    
        .def( 
            "setXRotation"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setXRotation) )
            , ( bp::arg("angle") ) )    
        .def( 
            "setXRotation"
            , bp::pure_virtual( (void ( ::View3DControl::* )( float ) )(&::View3DControl::setXRotation) )
            , ( bp::arg("angle") ) )    
        .def( 
            "setXShift"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setXShift) )
            , ( bp::arg("s") ) )    
        .def( 
            "setXShift"
            , bp::pure_virtual( (void ( ::View3DControl::* )( float ) )(&::View3DControl::setXShift) )
            , ( bp::arg("s") ) )    
        .def( 
            "setYCS"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setYCS) )
            , ( bp::arg("s") ) )    
        .def( 
            "setYClip0"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setYClip0) )
            , ( bp::arg("s") ) )    
        .def( 
            "setYClip1"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setYClip1) )
            , ( bp::arg("s") ) )    
        .def( 
            "setYCut0"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setYCut0) )
            , ( bp::arg("s") ) )    
        .def( 
            "setYCut1"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setYCut1) )
            , ( bp::arg("s") ) )    
        .def( 
            "setYCutLock"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::setYCutLock) )
            , ( bp::arg("arg0") ) )    
        .def( 
            "setYRotation"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setYRotation) )
            , ( bp::arg("angle") ) )    
        .def( 
            "setYRotation"
            , bp::pure_virtual( (void ( ::View3DControl::* )( float ) )(&::View3DControl::setYRotation) )
            , ( bp::arg("angle") ) )    
        .def( 
            "setYShift"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setYShift) )
            , ( bp::arg("s") ) )    
        .def( 
            "setYShift"
            , bp::pure_virtual( (void ( ::View3DControl::* )( float ) )(&::View3DControl::setYShift) )
            , ( bp::arg("s") ) )    
        .def( 
            "setZCS"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setZCS) )
            , ( bp::arg("s") ) )    
        .def( 
            "setZClip0"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setZClip0) )
            , ( bp::arg("s") ) )    
        .def( 
            "setZClip1"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setZClip1) )
            , ( bp::arg("s") ) )    
        .def( 
            "setZCut0"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setZCut0) )
            , ( bp::arg("s") ) )    
        .def( 
            "setZCut1"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setZCut1) )
            , ( bp::arg("s") ) )    
        .def( 
            "setZCutLock"
            , bp::pure_virtual( (void ( ::View3DControl::* )( bool ) )(&::View3DControl::setZCutLock) )
            , ( bp::arg("arg0") ) )    
        .def( 
            "setZRotation"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setZRotation) )
            , ( bp::arg("angle") ) )    
        .def( 
            "setZRotation"
            , bp::pure_virtual( (void ( ::View3DControl::* )( float ) )(&::View3DControl::setZRotation) )
            , ( bp::arg("angle") ) )    
        .def( 
            "setZShift"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setZShift) )
            , ( bp::arg("s") ) )    
        .def( 
            "setZShift"
            , bp::pure_virtual( (void ( ::View3DControl::* )( float ) )(&::View3DControl::setZShift) )
            , ( bp::arg("s") ) )    
        .def( 
            "setZoom"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::setZoom) )
            , ( bp::arg("r") ) )    
        .def( 
            "setZoom"
            , bp::pure_virtual( (void ( ::View3DControl::* )( float ) )(&::View3DControl::setZoom) )
            , ( bp::arg("r") ) )    
        .def( 
            "showGLinfo"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::showGLinfo) ) )    
        .def( 
            "showTool"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::showTool) ) )    
        .def( 
            "surfaceDialogHide"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::surfaceDialogHide) ) )    
        .def( 
            "surfaceSelectDialog"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::surfaceSelectDialog) )
            , ( bp::arg("curTab")=(int)(0) ) )    
        .def( 
            "surfaceSelectTab"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int ) )(&::View3DControl::surfaceSelectTab) )
            , ( bp::arg("curTab")=(int)(0) ) )    
        .def( 
            "toggleCellName"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::toggleCellName) ) )    
        .def( 
            "toggleLineType"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::toggleLineType) ) )    
        .def( 
            "toggleNStrokeCurveDrawing"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::toggleNStrokeCurveDrawing) ) )    
        .def( 
            "toggleObjShader"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::toggleObjShader) ) )    
        .def( 
            "togglePolygonMode"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::togglePolygonMode) ) )    
        .def( 
            "toggleShader"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::toggleShader) ) )    
        .def( 
            "toggleTex2D3D"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::toggleTex2D3D) ) )    
        .def( 
            "toggleTexCompression"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::toggleTexCompression) ) )    
        .def( 
            "toggleTexFilter"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::toggleTexFilter) ) )    
        .def( 
            "toggleTexStream"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::toggleTexStream) ) )    
        .def( 
            "updateControl"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::updateControl) ) )    
        .def( 
            "updateImageData"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::updateImageData) ) )    
        .def( 
            "updateTool"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::updateTool) ) )    
        .def( 
            "updateWithTriView"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::updateWithTriView) ) )    
        .def( 
            "viewRotation"
            , bp::pure_virtual( (void ( ::View3DControl::* )( int,int,int ) )(&::View3DControl::viewRotation) )
            , ( bp::arg("xRotStep"), bp::arg("yRotStep"), bp::arg("zRotStep") ) )    
        .def( 
            "volumeColormapDialog"
            , bp::pure_virtual( (void ( ::View3DControl::* )(  ) )(&::View3DControl::volumeColormapDialog) ) )    
        .def( 
            "volumeTimePoint"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::volumeTimePoint) ) )    
        .def( 
            "xCS"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::xCS) ) )    
        .def( 
            "xCut0"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::xCut0) ) )    
        .def( 
            "xCut1"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::xCut1) ) )    
        .def( 
            "xRot"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::xRot) ) )    
        .def( 
            "xShift"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::xShift) ) )    
        .def( 
            "yCS"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::yCS) ) )    
        .def( 
            "yCut0"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::yCut0) ) )    
        .def( 
            "yCut1"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::yCut1) ) )    
        .def( 
            "yRot"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::yRot) ) )    
        .def( 
            "yShift"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::yShift) ) )    
        .def( 
            "zCS"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::zCS) ) )    
        .def( 
            "zCut0"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::zCut0) ) )    
        .def( 
            "zCut1"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::zCut1) ) )    
        .def( 
            "zRot"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::zRot) ) )    
        .def( 
            "zShift"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::zShift) ) )    
        .def( 
            "zoom"
            , bp::pure_virtual( (int ( ::View3DControl::* )(  ) const)(&::View3DControl::zoom) ) );

}
