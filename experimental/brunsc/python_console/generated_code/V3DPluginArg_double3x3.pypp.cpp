// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrappable_v3d.h"
#include "V3DPluginArg_double3x3.pypp.hpp"

namespace bp = boost::python;

void register_V3DPluginArg_double3x3_class(){

    bp::class_< V3DPluginArg< c_array< c_array< double, 3 >, 3 > >, bp::bases< V3DPluginArgItem > >( "V3DPluginArg_double3x3", bp::init< c_array< c_array< double, 3 >, 3 > &, std::string const & >(( bp::arg("item"), bp::arg("typeName") )) )    
        .def( 
            "getItem"
            , (::c_array< c_array< double, 3 >, 3 > const & ( ::V3DPluginArg<c_array<c_array<double, 3>, 3> >::* )(  ) const)( &::V3DPluginArg< c_array< c_array< double, 3 >, 3 > >::getItem )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "getType"
            , (::std::string ( ::V3DPluginArg<c_array<c_array<double, 3>, 3> >::* )(  ) const)( &::V3DPluginArg< c_array< c_array< double, 3 >, 3 > >::getType ) )    
        .def( 
            "setItem"
            , (void ( ::V3DPluginArg<c_array<c_array<double, 3>, 3> >::* )( ::c_array< c_array< double, 3 >, 3 > & ) )( &::V3DPluginArg< c_array< c_array< double, 3 >, 3 > >::setItem )
            , ( bp::arg("item") ) )    
        .def( 
            "setType"
            , (void ( ::V3DPluginArg<c_array<c_array<double, 3>, 3> >::* )( ::std::string const & ) )( &::V3DPluginArg< c_array< c_array< double, 3 >, 3 > >::setType )
            , ( bp::arg("s") ) );

}
