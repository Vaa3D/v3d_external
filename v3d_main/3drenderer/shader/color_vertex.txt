
//#include "lighting"

varying vec3 vertex;
varying vec3 normal;
void main()
{
	vertex = vec3(gl_ModelViewMatrix * gl_Vertex);
	normal = normalize(gl_NormalMatrix * gl_Normal);
	gl_FrontColor = gl_Color; // must do this

//	// current no hardware support of multi-lightSource
//	// only hardware support of index 0 (and it must be a const !!!)
//	gl_FrontColor = vec4(0.0, 0.0, 0.0, 1.0);
//	//for (int i=0; i<3; i++)
//#define i 0
//	{
//		gl_FrontColor += lighting(true,  i, vertex, normal);
//		gl_FrontColor += lighting(false, i, vertex, normal);
//	}

	gl_ClipVertex = vec4(vertex, 1);
	gl_FrontSecondaryColor = vec4(normal, 1);

	gl_TexCoord[0] = gl_TextureMatrix[0] * gl_MultiTexCoord0;
	gl_TexCoord[1] = gl_TextureMatrix[1] * gl_MultiTexCoord1;

	gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
}
